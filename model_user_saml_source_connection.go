/*
authentik

Making authentication simple.

API version: 2024.10.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the UserSAMLSourceConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSAMLSourceConnection{}

// UserSAMLSourceConnection SAML Source Serializer
type UserSAMLSourceConnection struct {
	Pk         int32     `json:"pk"`
	User       int32     `json:"user"`
	Source     Source    `json:"source"`
	Created    time.Time `json:"created"`
	Identifier string    `json:"identifier"`
}

type _UserSAMLSourceConnection UserSAMLSourceConnection

// NewUserSAMLSourceConnection instantiates a new UserSAMLSourceConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSAMLSourceConnection(pk int32, user int32, source Source, created time.Time, identifier string) *UserSAMLSourceConnection {
	this := UserSAMLSourceConnection{}
	this.Pk = pk
	this.User = user
	this.Source = source
	this.Created = created
	this.Identifier = identifier
	return &this
}

// NewUserSAMLSourceConnectionWithDefaults instantiates a new UserSAMLSourceConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSAMLSourceConnectionWithDefaults() *UserSAMLSourceConnection {
	this := UserSAMLSourceConnection{}
	return &this
}

// GetPk returns the Pk field value
func (o *UserSAMLSourceConnection) GetPk() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *UserSAMLSourceConnection) GetPkOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *UserSAMLSourceConnection) SetPk(v int32) {
	o.Pk = v
}

// GetUser returns the User field value
func (o *UserSAMLSourceConnection) GetUser() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *UserSAMLSourceConnection) GetUserOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *UserSAMLSourceConnection) SetUser(v int32) {
	o.User = v
}

// GetSource returns the Source field value
func (o *UserSAMLSourceConnection) GetSource() Source {
	if o == nil {
		var ret Source
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *UserSAMLSourceConnection) GetSourceOk() (*Source, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *UserSAMLSourceConnection) SetSource(v Source) {
	o.Source = v
}

// GetCreated returns the Created field value
func (o *UserSAMLSourceConnection) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *UserSAMLSourceConnection) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *UserSAMLSourceConnection) SetCreated(v time.Time) {
	o.Created = v
}

// GetIdentifier returns the Identifier field value
func (o *UserSAMLSourceConnection) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *UserSAMLSourceConnection) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *UserSAMLSourceConnection) SetIdentifier(v string) {
	o.Identifier = v
}

func (o UserSAMLSourceConnection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSAMLSourceConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pk"] = o.Pk
	toSerialize["user"] = o.User
	toSerialize["source"] = o.Source
	toSerialize["created"] = o.Created
	toSerialize["identifier"] = o.Identifier
	return toSerialize, nil
}

func (o *UserSAMLSourceConnection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pk",
		"user",
		"source",
		"created",
		"identifier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserSAMLSourceConnection := _UserSAMLSourceConnection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserSAMLSourceConnection)

	if err != nil {
		return err
	}

	*o = UserSAMLSourceConnection(varUserSAMLSourceConnection)

	return err
}

type NullableUserSAMLSourceConnection struct {
	value *UserSAMLSourceConnection
	isSet bool
}

func (v NullableUserSAMLSourceConnection) Get() *UserSAMLSourceConnection {
	return v.value
}

func (v *NullableUserSAMLSourceConnection) Set(val *UserSAMLSourceConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSAMLSourceConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSAMLSourceConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSAMLSourceConnection(val *UserSAMLSourceConnection) *NullableUserSAMLSourceConnection {
	return &NullableUserSAMLSourceConnection{value: val, isSet: true}
}

func (v NullableUserSAMLSourceConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSAMLSourceConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
