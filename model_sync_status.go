/*
authentik

Making authentication simple.

API version: 2024.10.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SyncStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncStatus{}

// SyncStatus Provider sync status
type SyncStatus struct {
	IsRunning bool         `json:"is_running"`
	Tasks     []SystemTask `json:"tasks"`
}

type _SyncStatus SyncStatus

// NewSyncStatus instantiates a new SyncStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncStatus(isRunning bool, tasks []SystemTask) *SyncStatus {
	this := SyncStatus{}
	this.IsRunning = isRunning
	this.Tasks = tasks
	return &this
}

// NewSyncStatusWithDefaults instantiates a new SyncStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncStatusWithDefaults() *SyncStatus {
	this := SyncStatus{}
	return &this
}

// GetIsRunning returns the IsRunning field value
func (o *SyncStatus) GetIsRunning() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRunning
}

// GetIsRunningOk returns a tuple with the IsRunning field value
// and a boolean to check if the value has been set.
func (o *SyncStatus) GetIsRunningOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRunning, true
}

// SetIsRunning sets field value
func (o *SyncStatus) SetIsRunning(v bool) {
	o.IsRunning = v
}

// GetTasks returns the Tasks field value
func (o *SyncStatus) GetTasks() []SystemTask {
	if o == nil {
		var ret []SystemTask
		return ret
	}

	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value
// and a boolean to check if the value has been set.
func (o *SyncStatus) GetTasksOk() ([]SystemTask, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tasks, true
}

// SetTasks sets field value
func (o *SyncStatus) SetTasks(v []SystemTask) {
	o.Tasks = v
}

func (o SyncStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_running"] = o.IsRunning
	toSerialize["tasks"] = o.Tasks
	return toSerialize, nil
}

func (o *SyncStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_running",
		"tasks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSyncStatus := _SyncStatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSyncStatus)

	if err != nil {
		return err
	}

	*o = SyncStatus(varSyncStatus)

	return err
}

type NullableSyncStatus struct {
	value *SyncStatus
	isSet bool
}

func (v NullableSyncStatus) Get() *SyncStatus {
	return v.value
}

func (v *NullableSyncStatus) Set(val *SyncStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncStatus(val *SyncStatus) *NullableSyncStatus {
	return &NullableSyncStatus{value: val, isSet: true}
}

func (v NullableSyncStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
