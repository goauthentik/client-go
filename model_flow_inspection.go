/*
authentik

Making authentication simple.

API version: 2023.6.1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FlowInspection Serializer for inspect endpoint
type FlowInspection struct {
	Plans       []FlowInspectorPlan `json:"plans"`
	CurrentPlan *FlowInspectorPlan  `json:"current_plan,omitempty"`
	IsCompleted bool                `json:"is_completed"`
}

// NewFlowInspection instantiates a new FlowInspection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowInspection(plans []FlowInspectorPlan, isCompleted bool) *FlowInspection {
	this := FlowInspection{}
	this.Plans = plans
	this.IsCompleted = isCompleted
	return &this
}

// NewFlowInspectionWithDefaults instantiates a new FlowInspection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowInspectionWithDefaults() *FlowInspection {
	this := FlowInspection{}
	return &this
}

// GetPlans returns the Plans field value
func (o *FlowInspection) GetPlans() []FlowInspectorPlan {
	if o == nil {
		var ret []FlowInspectorPlan
		return ret
	}

	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value
// and a boolean to check if the value has been set.
func (o *FlowInspection) GetPlansOk() ([]FlowInspectorPlan, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plans, true
}

// SetPlans sets field value
func (o *FlowInspection) SetPlans(v []FlowInspectorPlan) {
	o.Plans = v
}

// GetCurrentPlan returns the CurrentPlan field value if set, zero value otherwise.
func (o *FlowInspection) GetCurrentPlan() FlowInspectorPlan {
	if o == nil || o.CurrentPlan == nil {
		var ret FlowInspectorPlan
		return ret
	}
	return *o.CurrentPlan
}

// GetCurrentPlanOk returns a tuple with the CurrentPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowInspection) GetCurrentPlanOk() (*FlowInspectorPlan, bool) {
	if o == nil || o.CurrentPlan == nil {
		return nil, false
	}
	return o.CurrentPlan, true
}

// HasCurrentPlan returns a boolean if a field has been set.
func (o *FlowInspection) HasCurrentPlan() bool {
	if o != nil && o.CurrentPlan != nil {
		return true
	}

	return false
}

// SetCurrentPlan gets a reference to the given FlowInspectorPlan and assigns it to the CurrentPlan field.
func (o *FlowInspection) SetCurrentPlan(v FlowInspectorPlan) {
	o.CurrentPlan = &v
}

// GetIsCompleted returns the IsCompleted field value
func (o *FlowInspection) GetIsCompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCompleted
}

// GetIsCompletedOk returns a tuple with the IsCompleted field value
// and a boolean to check if the value has been set.
func (o *FlowInspection) GetIsCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCompleted, true
}

// SetIsCompleted sets field value
func (o *FlowInspection) SetIsCompleted(v bool) {
	o.IsCompleted = v
}

func (o FlowInspection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["plans"] = o.Plans
	}
	if o.CurrentPlan != nil {
		toSerialize["current_plan"] = o.CurrentPlan
	}
	if true {
		toSerialize["is_completed"] = o.IsCompleted
	}
	return json.Marshal(toSerialize)
}

type NullableFlowInspection struct {
	value *FlowInspection
	isSet bool
}

func (v NullableFlowInspection) Get() *FlowInspection {
	return v.value
}

func (v *NullableFlowInspection) Set(val *FlowInspection) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowInspection) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowInspection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowInspection(val *FlowInspection) *NullableFlowInspection {
	return &NullableFlowInspection{value: val, isSet: true}
}

func (v NullableFlowInspection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowInspection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
