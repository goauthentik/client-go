/*
authentik

Making authentication simple.

API version: 2025.10.0-rc1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// GroupLDAPSourceConnection Group Source Connection
type GroupLDAPSourceConnection struct {
	Pk          int32     `json:"pk"`
	Group       string    `json:"group"`
	Source      string    `json:"source"`
	SourceObj   Source    `json:"source_obj"`
	Identifier  string    `json:"identifier"`
	Created     time.Time `json:"created"`
	LastUpdated time.Time `json:"last_updated"`
}

// NewGroupLDAPSourceConnection instantiates a new GroupLDAPSourceConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupLDAPSourceConnection(pk int32, group string, source string, sourceObj Source, identifier string, created time.Time, lastUpdated time.Time) *GroupLDAPSourceConnection {
	this := GroupLDAPSourceConnection{}
	this.Pk = pk
	this.Group = group
	this.Source = source
	this.SourceObj = sourceObj
	this.Identifier = identifier
	this.Created = created
	this.LastUpdated = lastUpdated
	return &this
}

// NewGroupLDAPSourceConnectionWithDefaults instantiates a new GroupLDAPSourceConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupLDAPSourceConnectionWithDefaults() *GroupLDAPSourceConnection {
	this := GroupLDAPSourceConnection{}
	return &this
}

// GetPk returns the Pk field value
func (o *GroupLDAPSourceConnection) GetPk() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *GroupLDAPSourceConnection) GetPkOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *GroupLDAPSourceConnection) SetPk(v int32) {
	o.Pk = v
}

// GetGroup returns the Group field value
func (o *GroupLDAPSourceConnection) GetGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *GroupLDAPSourceConnection) GetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *GroupLDAPSourceConnection) SetGroup(v string) {
	o.Group = v
}

// GetSource returns the Source field value
func (o *GroupLDAPSourceConnection) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *GroupLDAPSourceConnection) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *GroupLDAPSourceConnection) SetSource(v string) {
	o.Source = v
}

// GetSourceObj returns the SourceObj field value
func (o *GroupLDAPSourceConnection) GetSourceObj() Source {
	if o == nil {
		var ret Source
		return ret
	}

	return o.SourceObj
}

// GetSourceObjOk returns a tuple with the SourceObj field value
// and a boolean to check if the value has been set.
func (o *GroupLDAPSourceConnection) GetSourceObjOk() (*Source, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceObj, true
}

// SetSourceObj sets field value
func (o *GroupLDAPSourceConnection) SetSourceObj(v Source) {
	o.SourceObj = v
}

// GetIdentifier returns the Identifier field value
func (o *GroupLDAPSourceConnection) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *GroupLDAPSourceConnection) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *GroupLDAPSourceConnection) SetIdentifier(v string) {
	o.Identifier = v
}

// GetCreated returns the Created field value
func (o *GroupLDAPSourceConnection) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *GroupLDAPSourceConnection) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *GroupLDAPSourceConnection) SetCreated(v time.Time) {
	o.Created = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *GroupLDAPSourceConnection) GetLastUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *GroupLDAPSourceConnection) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *GroupLDAPSourceConnection) SetLastUpdated(v time.Time) {
	o.LastUpdated = v
}

func (o GroupLDAPSourceConnection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if true {
		toSerialize["group"] = o.Group
	}
	if true {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["source_obj"] = o.SourceObj
	}
	if true {
		toSerialize["identifier"] = o.Identifier
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["last_updated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableGroupLDAPSourceConnection struct {
	value *GroupLDAPSourceConnection
	isSet bool
}

func (v NullableGroupLDAPSourceConnection) Get() *GroupLDAPSourceConnection {
	return v.value
}

func (v *NullableGroupLDAPSourceConnection) Set(val *GroupLDAPSourceConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupLDAPSourceConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupLDAPSourceConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupLDAPSourceConnection(val *GroupLDAPSourceConnection) *NullableGroupLDAPSourceConnection {
	return &NullableGroupLDAPSourceConnection{value: val, isSet: true}
}

func (v NullableGroupLDAPSourceConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupLDAPSourceConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
