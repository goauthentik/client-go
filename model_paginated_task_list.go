/*
authentik

Making authentication simple.

API version: 2025.12.0-rc1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PaginatedTaskList struct for PaginatedTaskList
type PaginatedTaskList struct {
	Pagination   Pagination             `json:"pagination"`
	Results      []Task                 `json:"results"`
	Autocomplete map[string]interface{} `json:"autocomplete"`
}

// NewPaginatedTaskList instantiates a new PaginatedTaskList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedTaskList(pagination Pagination, results []Task, autocomplete map[string]interface{}) *PaginatedTaskList {
	this := PaginatedTaskList{}
	this.Pagination = pagination
	this.Results = results
	this.Autocomplete = autocomplete
	return &this
}

// NewPaginatedTaskListWithDefaults instantiates a new PaginatedTaskList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedTaskListWithDefaults() *PaginatedTaskList {
	this := PaginatedTaskList{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *PaginatedTaskList) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *PaginatedTaskList) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *PaginatedTaskList) SetPagination(v Pagination) {
	o.Pagination = v
}

// GetResults returns the Results field value
func (o *PaginatedTaskList) GetResults() []Task {
	if o == nil {
		var ret []Task
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *PaginatedTaskList) GetResultsOk() ([]Task, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *PaginatedTaskList) SetResults(v []Task) {
	o.Results = v
}

// GetAutocomplete returns the Autocomplete field value
func (o *PaginatedTaskList) GetAutocomplete() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Autocomplete
}

// GetAutocompleteOk returns a tuple with the Autocomplete field value
// and a boolean to check if the value has been set.
func (o *PaginatedTaskList) GetAutocompleteOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Autocomplete, true
}

// SetAutocomplete sets field value
func (o *PaginatedTaskList) SetAutocomplete(v map[string]interface{}) {
	o.Autocomplete = v
}

func (o PaginatedTaskList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pagination"] = o.Pagination
	}
	if true {
		toSerialize["results"] = o.Results
	}
	if true {
		toSerialize["autocomplete"] = o.Autocomplete
	}
	return json.Marshal(toSerialize)
}

type NullablePaginatedTaskList struct {
	value *PaginatedTaskList
	isSet bool
}

func (v NullablePaginatedTaskList) Get() *PaginatedTaskList {
	return v.value
}

func (v *NullablePaginatedTaskList) Set(val *PaginatedTaskList) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedTaskList) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedTaskList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedTaskList(val *PaginatedTaskList) *NullablePaginatedTaskList {
	return &NullablePaginatedTaskList{value: val, isSet: true}
}

func (v NullablePaginatedTaskList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedTaskList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
