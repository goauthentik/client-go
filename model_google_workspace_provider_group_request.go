/*
authentik

Making authentication simple.

API version: 2024.10.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GoogleWorkspaceProviderGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleWorkspaceProviderGroupRequest{}

// GoogleWorkspaceProviderGroupRequest GoogleWorkspaceProviderGroup Serializer
type GoogleWorkspaceProviderGroupRequest struct {
	GoogleId string `json:"google_id"`
	Group    string `json:"group"`
	Provider int32  `json:"provider"`
}

type _GoogleWorkspaceProviderGroupRequest GoogleWorkspaceProviderGroupRequest

// NewGoogleWorkspaceProviderGroupRequest instantiates a new GoogleWorkspaceProviderGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleWorkspaceProviderGroupRequest(googleId string, group string, provider int32) *GoogleWorkspaceProviderGroupRequest {
	this := GoogleWorkspaceProviderGroupRequest{}
	this.GoogleId = googleId
	this.Group = group
	this.Provider = provider
	return &this
}

// NewGoogleWorkspaceProviderGroupRequestWithDefaults instantiates a new GoogleWorkspaceProviderGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleWorkspaceProviderGroupRequestWithDefaults() *GoogleWorkspaceProviderGroupRequest {
	this := GoogleWorkspaceProviderGroupRequest{}
	return &this
}

// GetGoogleId returns the GoogleId field value
func (o *GoogleWorkspaceProviderGroupRequest) GetGoogleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GoogleId
}

// GetGoogleIdOk returns a tuple with the GoogleId field value
// and a boolean to check if the value has been set.
func (o *GoogleWorkspaceProviderGroupRequest) GetGoogleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GoogleId, true
}

// SetGoogleId sets field value
func (o *GoogleWorkspaceProviderGroupRequest) SetGoogleId(v string) {
	o.GoogleId = v
}

// GetGroup returns the Group field value
func (o *GoogleWorkspaceProviderGroupRequest) GetGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *GoogleWorkspaceProviderGroupRequest) GetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *GoogleWorkspaceProviderGroupRequest) SetGroup(v string) {
	o.Group = v
}

// GetProvider returns the Provider field value
func (o *GoogleWorkspaceProviderGroupRequest) GetProvider() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *GoogleWorkspaceProviderGroupRequest) GetProviderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *GoogleWorkspaceProviderGroupRequest) SetProvider(v int32) {
	o.Provider = v
}

func (o GoogleWorkspaceProviderGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleWorkspaceProviderGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["google_id"] = o.GoogleId
	toSerialize["group"] = o.Group
	toSerialize["provider"] = o.Provider
	return toSerialize, nil
}

func (o *GoogleWorkspaceProviderGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"google_id",
		"group",
		"provider",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGoogleWorkspaceProviderGroupRequest := _GoogleWorkspaceProviderGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGoogleWorkspaceProviderGroupRequest)

	if err != nil {
		return err
	}

	*o = GoogleWorkspaceProviderGroupRequest(varGoogleWorkspaceProviderGroupRequest)

	return err
}

type NullableGoogleWorkspaceProviderGroupRequest struct {
	value *GoogleWorkspaceProviderGroupRequest
	isSet bool
}

func (v NullableGoogleWorkspaceProviderGroupRequest) Get() *GoogleWorkspaceProviderGroupRequest {
	return v.value
}

func (v *NullableGoogleWorkspaceProviderGroupRequest) Set(val *GoogleWorkspaceProviderGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleWorkspaceProviderGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleWorkspaceProviderGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleWorkspaceProviderGroupRequest(val *GoogleWorkspaceProviderGroupRequest) *NullableGoogleWorkspaceProviderGroupRequest {
	return &NullableGoogleWorkspaceProviderGroupRequest{value: val, isSet: true}
}

func (v NullableGoogleWorkspaceProviderGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleWorkspaceProviderGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
