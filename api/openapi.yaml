openapi: 3.0.3
info:
  contact:
    email: hello@goauthentik.io
  description: Making authentication simple.
  license:
    name: MIT
    url: https://github.com/goauthentik/authentik/blob/main/LICENSE
  title: authentik
  version: 2025.6.3
servers:
- url: /api/v3/
paths:
  /admin/apps/:
    get:
      description: Read-only view list all installed apps
      operationId: admin_apps_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/App'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /admin/models/:
    get:
      description: Read-only view list all installed models
      operationId: admin_models_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/App'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /admin/settings/:
    get:
      description: Settings view
      operationId: admin_settings_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
    patch:
      description: Settings view
      operationId: admin_settings_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
    put:
      description: Settings view
      operationId: admin_settings_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /admin/system/:
    get:
      description: Get system information.
      operationId: admin_system_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
    post:
      description: Get system information.
      operationId: admin_system_create
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /admin/version/:
    get:
      description: Get running and latest version.
      operationId: admin_version_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /admin/version/history/:
    get:
      description: VersionHistory Viewset
      operationId: admin_version_history_list
      parameters:
      - explode: true
        in: query
        name: build
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VersionHistory'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /admin/version/history/{id}/:
    get:
      description: VersionHistory Viewset
      operationId: admin_version_history_retrieve
      parameters:
      - description: A unique integer value identifying this Version history.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionHistory'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /admin/workers/:
    get:
      description: Get currently connected worker count.
      operationId: admin_workers_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Worker'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - admin
  /authenticators/admin/all/:
    get:
      description: Get all devices for current user
      operationId: authenticators_admin_all_list
      parameters:
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/duo/:
    get:
      description: Viewset for Duo authenticator devices (for admins)
      operationId: authenticators_admin_duo_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDuoDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    post:
      description: Viewset for Duo authenticator devices (for admins)
      operationId: authenticators_admin_duo_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuoDeviceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/duo/{id}/:
    delete:
      description: Viewset for Duo authenticator devices (for admins)
      operationId: authenticators_admin_duo_destroy
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for Duo authenticator devices (for admins)
      operationId: authenticators_admin_duo_retrieve
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for Duo authenticator devices (for admins)
      operationId: authenticators_admin_duo_partial_update
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDuoDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for Duo authenticator devices (for admins)
      operationId: authenticators_admin_duo_update
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuoDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/email/:
    get:
      description: Viewset for email authenticator devices (for admins)
      operationId: authenticators_admin_email_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    post:
      description: Viewset for email authenticator devices (for admins)
      operationId: authenticators_admin_email_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDeviceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/email/{id}/:
    delete:
      description: Viewset for email authenticator devices (for admins)
      operationId: authenticators_admin_email_destroy
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for email authenticator devices (for admins)
      operationId: authenticators_admin_email_retrieve
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for email authenticator devices (for admins)
      operationId: authenticators_admin_email_partial_update
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for email authenticator devices (for admins)
      operationId: authenticators_admin_email_update
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/endpoint/:
    get:
      description: Viewset for Endpoint authenticator devices (for admins)
      operationId: authenticators_admin_endpoint_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEndpointDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    post:
      description: Viewset for Endpoint authenticator devices (for admins)
      operationId: authenticators_admin_endpoint_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointDeviceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/endpoint/{uuid}/:
    delete:
      description: Viewset for Endpoint authenticator devices (for admins)
      operationId: authenticators_admin_endpoint_destroy
      parameters:
      - description: A UUID string identifying this Endpoint Device.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for Endpoint authenticator devices (for admins)
      operationId: authenticators_admin_endpoint_retrieve
      parameters:
      - description: A UUID string identifying this Endpoint Device.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for Endpoint authenticator devices (for admins)
      operationId: authenticators_admin_endpoint_partial_update
      parameters:
      - description: A UUID string identifying this Endpoint Device.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEndpointDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for Endpoint authenticator devices (for admins)
      operationId: authenticators_admin_endpoint_update
      parameters:
      - description: A UUID string identifying this Endpoint Device.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/sms/:
    get:
      description: Viewset for sms authenticator devices (for admins)
      operationId: authenticators_admin_sms_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSMSDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    post:
      description: Viewset for sms authenticator devices (for admins)
      operationId: authenticators_admin_sms_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSDeviceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/sms/{id}/:
    delete:
      description: Viewset for sms authenticator devices (for admins)
      operationId: authenticators_admin_sms_destroy
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for sms authenticator devices (for admins)
      operationId: authenticators_admin_sms_retrieve
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for sms authenticator devices (for admins)
      operationId: authenticators_admin_sms_partial_update
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSMSDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for sms authenticator devices (for admins)
      operationId: authenticators_admin_sms_update
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/static/:
    get:
      description: Viewset for static authenticator devices (for admins)
      operationId: authenticators_admin_static_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaticDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    post:
      description: Viewset for static authenticator devices (for admins)
      operationId: authenticators_admin_static_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticDeviceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/static/{id}/:
    delete:
      description: Viewset for static authenticator devices (for admins)
      operationId: authenticators_admin_static_destroy
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for static authenticator devices (for admins)
      operationId: authenticators_admin_static_retrieve
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for static authenticator devices (for admins)
      operationId: authenticators_admin_static_partial_update
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaticDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for static authenticator devices (for admins)
      operationId: authenticators_admin_static_update
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/totp/:
    get:
      description: Viewset for totp authenticator devices (for admins)
      operationId: authenticators_admin_totp_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTOTPDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    post:
      description: Viewset for totp authenticator devices (for admins)
      operationId: authenticators_admin_totp_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TOTPDeviceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/totp/{id}/:
    delete:
      description: Viewset for totp authenticator devices (for admins)
      operationId: authenticators_admin_totp_destroy
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for totp authenticator devices (for admins)
      operationId: authenticators_admin_totp_retrieve
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for totp authenticator devices (for admins)
      operationId: authenticators_admin_totp_partial_update
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTOTPDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for totp authenticator devices (for admins)
      operationId: authenticators_admin_totp_update
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TOTPDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/webauthn/:
    get:
      description: Viewset for WebAuthn authenticator devices (for admins)
      operationId: authenticators_admin_webauthn_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebAuthnDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    post:
      description: Viewset for WebAuthn authenticator devices (for admins)
      operationId: authenticators_admin_webauthn_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebAuthnDeviceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/admin/webauthn/{id}/:
    delete:
      description: Viewset for WebAuthn authenticator devices (for admins)
      operationId: authenticators_admin_webauthn_destroy
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for WebAuthn authenticator devices (for admins)
      operationId: authenticators_admin_webauthn_retrieve
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for WebAuthn authenticator devices (for admins)
      operationId: authenticators_admin_webauthn_partial_update
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWebAuthnDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for WebAuthn authenticator devices (for admins)
      operationId: authenticators_admin_webauthn_update
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebAuthnDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/all/:
    get:
      description: Get all devices for current user
      operationId: authenticators_all_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/duo/:
    get:
      description: Viewset for Duo authenticator devices
      operationId: authenticators_duo_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDuoDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/duo/{id}/:
    delete:
      description: Viewset for Duo authenticator devices
      operationId: authenticators_duo_destroy
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for Duo authenticator devices
      operationId: authenticators_duo_retrieve
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for Duo authenticator devices
      operationId: authenticators_duo_partial_update
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDuoDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for Duo authenticator devices
      operationId: authenticators_duo_update
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuoDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/duo/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: authenticators_duo_used_by_list
      parameters:
      - description: A unique integer value identifying this Duo Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/email/:
    get:
      description: Viewset for email authenticator devices
      operationId: authenticators_email_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/email/{id}/:
    delete:
      description: Viewset for email authenticator devices
      operationId: authenticators_email_destroy
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for email authenticator devices
      operationId: authenticators_email_retrieve
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for email authenticator devices
      operationId: authenticators_email_partial_update
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for email authenticator devices
      operationId: authenticators_email_update
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/email/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: authenticators_email_used_by_list
      parameters:
      - description: A unique integer value identifying this Email Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/endpoint/:
    get:
      description: Viewset for Endpoint authenticator devices
      operationId: authenticators_endpoint_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEndpointDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/endpoint/{uuid}/:
    get:
      description: Viewset for Endpoint authenticator devices
      operationId: authenticators_endpoint_retrieve
      parameters:
      - description: A UUID string identifying this Endpoint Device.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/endpoint/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: authenticators_endpoint_used_by_list
      parameters:
      - description: A UUID string identifying this Endpoint Device.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/sms/:
    get:
      description: Viewset for sms authenticator devices
      operationId: authenticators_sms_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSMSDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/sms/{id}/:
    delete:
      description: Viewset for sms authenticator devices
      operationId: authenticators_sms_destroy
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for sms authenticator devices
      operationId: authenticators_sms_retrieve
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for sms authenticator devices
      operationId: authenticators_sms_partial_update
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSMSDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for sms authenticator devices
      operationId: authenticators_sms_update
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/sms/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: authenticators_sms_used_by_list
      parameters:
      - description: A unique integer value identifying this SMS Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/static/:
    get:
      description: Viewset for static authenticator devices
      operationId: authenticators_static_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaticDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/static/{id}/:
    delete:
      description: Viewset for static authenticator devices
      operationId: authenticators_static_destroy
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for static authenticator devices
      operationId: authenticators_static_retrieve
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for static authenticator devices
      operationId: authenticators_static_partial_update
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaticDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for static authenticator devices
      operationId: authenticators_static_update
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/static/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: authenticators_static_used_by_list
      parameters:
      - description: A unique integer value identifying this Static Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/totp/:
    get:
      description: Viewset for totp authenticator devices
      operationId: authenticators_totp_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTOTPDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/totp/{id}/:
    delete:
      description: Viewset for totp authenticator devices
      operationId: authenticators_totp_destroy
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for totp authenticator devices
      operationId: authenticators_totp_retrieve
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for totp authenticator devices
      operationId: authenticators_totp_partial_update
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTOTPDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for totp authenticator devices
      operationId: authenticators_totp_update
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TOTPDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/totp/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: authenticators_totp_used_by_list
      parameters:
      - description: A unique integer value identifying this TOTP Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/webauthn/:
    get:
      description: Viewset for WebAuthn authenticator devices
      operationId: authenticators_webauthn_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebAuthnDeviceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/webauthn/{id}/:
    delete:
      description: Viewset for WebAuthn authenticator devices
      operationId: authenticators_webauthn_destroy
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    get:
      description: Viewset for WebAuthn authenticator devices
      operationId: authenticators_webauthn_retrieve
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    patch:
      description: Viewset for WebAuthn authenticator devices
      operationId: authenticators_webauthn_partial_update
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWebAuthnDeviceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
    put:
      description: Viewset for WebAuthn authenticator devices
      operationId: authenticators_webauthn_update
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebAuthnDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDevice'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /authenticators/webauthn/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: authenticators_webauthn_used_by_list
      parameters:
      - description: A unique integer value identifying this WebAuthn Device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - authenticators
  /core/application_entitlements/:
    get:
      description: ApplicationEntitlement Viewset
      operationId: core_application_entitlements_list
      parameters:
      - explode: true
        in: query
        name: app
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationEntitlementList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    post:
      description: ApplicationEntitlement Viewset
      operationId: core_application_entitlements_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationEntitlementRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntitlement'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/application_entitlements/{pbm_uuid}/:
    delete:
      description: ApplicationEntitlement Viewset
      operationId: core_application_entitlements_destroy
      parameters:
      - description: A UUID string identifying this Application Entitlement.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: ApplicationEntitlement Viewset
      operationId: core_application_entitlements_retrieve
      parameters:
      - description: A UUID string identifying this Application Entitlement.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntitlement'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    patch:
      description: ApplicationEntitlement Viewset
      operationId: core_application_entitlements_partial_update
      parameters:
      - description: A UUID string identifying this Application Entitlement.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplicationEntitlementRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntitlement'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    put:
      description: ApplicationEntitlement Viewset
      operationId: core_application_entitlements_update
      parameters:
      - description: A UUID string identifying this Application Entitlement.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationEntitlementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntitlement'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/application_entitlements/{pbm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_application_entitlements_used_by_list
      parameters:
      - description: A UUID string identifying this Application Entitlement.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/applications/:
    get:
      description: Custom list method that checks Policy based access instead of guardian
      operationId: core_applications_list
      parameters:
      - explode: true
        in: query
        name: for_user
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: meta_description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: meta_launch_url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: meta_publisher
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: only_with_launch_url
        required: false
        schema:
          type: boolean
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: superuser_full_list
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    post:
      description: Application Viewset
      operationId: core_applications_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/applications/{slug}/:
    delete:
      description: Application Viewset
      operationId: core_applications_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: Application Viewset
      operationId: core_applications_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    patch:
      description: Application Viewset
      operationId: core_applications_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplicationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    put:
      description: Application Viewset
      operationId: core_applications_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/applications/{slug}/check_access/:
    get:
      description: Check access to a single application by slug
      operationId: core_applications_check_access_retrieve
      parameters:
      - explode: true
        in: query
        name: for_user
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTestResult'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/applications/{slug}/set_icon/:
    post:
      description: Set application icon
      operationId: core_applications_set_icon_create
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/applications/{slug}/set_icon_url/:
    post:
      description: Set application icon (as URL)
      operationId: core_applications_set_icon_url_create
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathRequest'
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/applications/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_applications_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal application name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/authenticated_sessions/:
    get:
      description: AuthenticatedSession Viewset
      operationId: core_authenticated_sessions_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: session__last_ip
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: session__last_user_agent
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user__username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatedSessionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/authenticated_sessions/{uuid}/:
    delete:
      description: AuthenticatedSession Viewset
      operationId: core_authenticated_sessions_destroy
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: AuthenticatedSession Viewset
      operationId: core_authenticated_sessions_retrieve
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatedSession'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/authenticated_sessions/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_authenticated_sessions_used_by_list
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/brands/:
    get:
      description: Brand Viewset
      operationId: core_brands_list
      parameters:
      - explode: true
        in: query
        name: brand_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: branding_default_flow_background
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: branding_favicon
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: branding_logo
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: branding_title
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_certificates
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: default
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: flow_authentication
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: flow_device_code
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: flow_invalidation
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: flow_recovery
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: flow_unenrollment
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: flow_user_settings
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: web_certificate
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBrandList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    post:
      description: Brand Viewset
      operationId: core_brands_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/brands/{brand_uuid}/:
    delete:
      description: Brand Viewset
      operationId: core_brands_destroy
      parameters:
      - description: A UUID string identifying this Brand.
        explode: false
        in: path
        name: brand_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: Brand Viewset
      operationId: core_brands_retrieve
      parameters:
      - description: A UUID string identifying this Brand.
        explode: false
        in: path
        name: brand_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    patch:
      description: Brand Viewset
      operationId: core_brands_partial_update
      parameters:
      - description: A UUID string identifying this Brand.
        explode: false
        in: path
        name: brand_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrandRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    put:
      description: Brand Viewset
      operationId: core_brands_update
      parameters:
      - description: A UUID string identifying this Brand.
        explode: false
        in: path
        name: brand_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/brands/{brand_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_brands_used_by_list
      parameters:
      - description: A UUID string identifying this Brand.
        explode: false
        in: path
        name: brand_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/brands/current/:
    get:
      description: Get current brand
      operationId: core_brands_current_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentBrand'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      - {}
      tags:
      - core
  /core/groups/:
    get:
      description: Group Viewset
      operationId: core_groups_list
      parameters:
      - description: Attributes
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include_users
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: is_superuser
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: members_by_pk
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
          \ only."
        explode: true
        in: query
        name: members_by_username
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    post:
      description: Group Viewset
      operationId: core_groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/groups/{group_uuid}/:
    delete:
      description: Group Viewset
      operationId: core_groups_destroy
      parameters:
      - description: A UUID string identifying this Group.
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: Group Viewset
      operationId: core_groups_retrieve
      parameters:
      - description: A UUID string identifying this Group.
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: include_users
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    patch:
      description: Group Viewset
      operationId: core_groups_partial_update
      parameters:
      - description: A UUID string identifying this Group.
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    put:
      description: Group Viewset
      operationId: core_groups_update
      parameters:
      - description: A UUID string identifying this Group.
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/groups/{group_uuid}/add_user/:
    post:
      description: Add user to group
      operationId: core_groups_add_user_create
      parameters:
      - description: A UUID string identifying this Group.
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountRequest'
        required: true
      responses:
        "204":
          description: User added
        "404":
          description: User not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/groups/{group_uuid}/remove_user/:
    post:
      description: Add user to group
      operationId: core_groups_remove_user_create
      parameters:
      - description: A UUID string identifying this Group.
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountRequest'
        required: true
      responses:
        "204":
          description: User added
        "404":
          description: User not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/groups/{group_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_groups_used_by_list
      parameters:
      - description: A UUID string identifying this Group.
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/tokens/:
    get:
      description: Token Viewset
      operationId: core_tokens_list
      parameters:
      - explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expires
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: expiring
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: identifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: intent
        required: false
        schema:
          enum:
          - api
          - app_password
          - recovery
          - verification
          type: string
        style: form
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user__username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTokenList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    post:
      description: Token Viewset
      operationId: core_tokens_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/tokens/{identifier}/:
    delete:
      description: Token Viewset
      operationId: core_tokens_destroy
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: Token Viewset
      operationId: core_tokens_retrieve
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    patch:
      description: Token Viewset
      operationId: core_tokens_partial_update
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTokenRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    put:
      description: Token Viewset
      operationId: core_tokens_update
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/tokens/{identifier}/set_key/:
    post:
      description: |-
        Set token key. Action is logged as event. `authentik_core.set_token_key` permission
        is required.
      operationId: core_tokens_set_key_create
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenSetKeyRequest'
        required: true
      responses:
        "204":
          description: Successfully changed key
        "400":
          description: Missing key
        "404":
          description: Token not found or expired
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/tokens/{identifier}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_tokens_used_by_list
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/tokens/{identifier}/view_key/:
    get:
      description: Return token key and log access
      operationId: core_tokens_view_key_retrieve
      parameters:
      - explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenView'
          description: ""
        "404":
          description: Token not found or expired
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/transactional/applications/:
    put:
      description: "Convert data into a blueprint, validate it and apply it"
      operationId: core_transactional_applications_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionApplicationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionApplicationResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/user_consent/:
    get:
      description: UserConsent Viewset
      operationId: core_user_consent_list
      parameters:
      - explode: true
        in: query
        name: application
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserConsentList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/user_consent/{id}/:
    delete:
      description: UserConsent Viewset
      operationId: core_user_consent_destroy
      parameters:
      - description: A unique integer value identifying this User Consent.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: UserConsent Viewset
      operationId: core_user_consent_retrieve
      parameters:
      - description: A unique integer value identifying this User Consent.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConsent'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/user_consent/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_user_consent_used_by_list
      parameters:
      - description: A unique integer value identifying this User Consent.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/:
    get:
      description: User Viewset
      operationId: core_users_list
      parameters:
      - description: Attributes
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: groups_by_name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: groups_by_pk
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: include_groups
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: is_active
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: is_superuser
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: path_startswith
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - external
            - internal
            - internal_service_account
            - service_account
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    post:
      description: User Viewset
      operationId: core_users_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/{id}/:
    delete:
      description: User Viewset
      operationId: core_users_destroy
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    get:
      description: User Viewset
      operationId: core_users_retrieve
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    patch:
      description: User Viewset
      operationId: core_users_partial_update
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
    put:
      description: User Viewset
      operationId: core_users_update
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/{id}/impersonate/:
    post:
      description: Impersonate a user
      operationId: core_users_impersonate_create
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpersonationRequest'
        required: true
      responses:
        "204":
          description: Successfully started impersonation
        "401":
          description: Access denied
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/{id}/recovery/:
    post:
      description: Create a temporary link that a user can use to recover their accounts
      operationId: core_users_recovery_create
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/{id}/recovery_email/:
    post:
      description: Create a temporary link that a user can use to recover their accounts
      operationId: core_users_recovery_email_create
      parameters:
      - explode: true
        in: query
        name: email_stage
        required: true
        schema:
          type: string
        style: form
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Successfully sent recover email
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/{id}/set_password/:
    post:
      description: Set password for user
      operationId: core_users_set_password_create
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordSetRequest'
        required: true
      responses:
        "204":
          description: Successfully changed password
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: core_users_used_by_list
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/impersonate_end/:
    get:
      description: End Impersonation a user
      operationId: core_users_impersonate_end_retrieve
      responses:
        "204":
          description: Successfully started impersonation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/me/:
    get:
      description: Get information about current user
      operationId: core_users_me_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/paths/:
    get:
      description: Get all user paths
      operationId: core_users_paths_retrieve
      parameters:
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPath'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /core/users/service_account/:
    post:
      description: Create a new user account that is marked as a service account
      operationId: core_users_service_account_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserServiceAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserServiceAccountResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - core
  /crypto/certificatekeypairs/:
    get:
      description: CertificateKeyPair Viewset
      operationId: crypto_certificatekeypairs_list
      parameters:
      - description: Only return certificate-key pairs with keys
        explode: true
        in: query
        name: has_key
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: include_details
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCertificateKeyPairList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
    post:
      description: CertificateKeyPair Viewset
      operationId: crypto_certificatekeypairs_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateKeyPairRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateKeyPair'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
  /crypto/certificatekeypairs/{kp_uuid}/:
    delete:
      description: CertificateKeyPair Viewset
      operationId: crypto_certificatekeypairs_destroy
      parameters:
      - description: A UUID string identifying this Certificate-Key Pair.
        explode: false
        in: path
        name: kp_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
    get:
      description: CertificateKeyPair Viewset
      operationId: crypto_certificatekeypairs_retrieve
      parameters:
      - description: A UUID string identifying this Certificate-Key Pair.
        explode: false
        in: path
        name: kp_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateKeyPair'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
    patch:
      description: CertificateKeyPair Viewset
      operationId: crypto_certificatekeypairs_partial_update
      parameters:
      - description: A UUID string identifying this Certificate-Key Pair.
        explode: false
        in: path
        name: kp_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCertificateKeyPairRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateKeyPair'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
    put:
      description: CertificateKeyPair Viewset
      operationId: crypto_certificatekeypairs_update
      parameters:
      - description: A UUID string identifying this Certificate-Key Pair.
        explode: false
        in: path
        name: kp_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateKeyPairRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateKeyPair'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
  /crypto/certificatekeypairs/{kp_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: crypto_certificatekeypairs_used_by_list
      parameters:
      - description: A UUID string identifying this Certificate-Key Pair.
        explode: false
        in: path
        name: kp_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
  /crypto/certificatekeypairs/{kp_uuid}/view_certificate/:
    get:
      description: Return certificate-key pairs certificate and log access
      operationId: crypto_certificatekeypairs_view_certificate_retrieve
      parameters:
      - explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      - description: A UUID string identifying this Certificate-Key Pair.
        explode: false
        in: path
        name: kp_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateData'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
  /crypto/certificatekeypairs/{kp_uuid}/view_private_key/:
    get:
      description: Return certificate-key pairs private key and log access
      operationId: crypto_certificatekeypairs_view_private_key_retrieve
      parameters:
      - explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      - description: A UUID string identifying this Certificate-Key Pair.
        explode: false
        in: path
        name: kp_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateData'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
  /crypto/certificatekeypairs/generate/:
    post:
      description: "Generate a new, self-signed certificate-key pair"
      operationId: crypto_certificatekeypairs_generate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateGenerationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateKeyPair'
          description: ""
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - crypto
  /enterprise/license/:
    get:
      description: License Viewset
      operationId: enterprise_license_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLicenseList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
    post:
      description: License Viewset
      operationId: enterprise_license_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
  /enterprise/license/{license_uuid}/:
    delete:
      description: License Viewset
      operationId: enterprise_license_destroy
      parameters:
      - description: A UUID string identifying this License.
        explode: false
        in: path
        name: license_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
    get:
      description: License Viewset
      operationId: enterprise_license_retrieve
      parameters:
      - description: A UUID string identifying this License.
        explode: false
        in: path
        name: license_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
    patch:
      description: License Viewset
      operationId: enterprise_license_partial_update
      parameters:
      - description: A UUID string identifying this License.
        explode: false
        in: path
        name: license_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLicenseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
    put:
      description: License Viewset
      operationId: enterprise_license_update
      parameters:
      - description: A UUID string identifying this License.
        explode: false
        in: path
        name: license_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
  /enterprise/license/{license_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: enterprise_license_used_by_list
      parameters:
      - description: A UUID string identifying this License.
        explode: false
        in: path
        name: license_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
  /enterprise/license/forecast/:
    get:
      description: Forecast how many users will be required in a year
      operationId: enterprise_license_forecast_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseForecast'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
  /enterprise/license/install_id/:
    get:
      description: Get install_id
      operationId: enterprise_license_install_id_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallID'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
  /enterprise/license/summary/:
    get:
      description: Get the total license status
      operationId: enterprise_license_summary_retrieve
      parameters:
      - explode: true
        in: query
        name: cached
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseSummary'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - enterprise
  /events/events/:
    get:
      description: Event Read-Only Viewset
      operationId: events_events_list
      parameters:
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: actions
        required: false
        schema:
          items:
            enum:
            - authorize_application
            - configuration_error
            - custom_
            - email_sent
            - flow_execution
            - impersonation_ended
            - impersonation_started
            - invitation_used
            - login
            - login_failed
            - logout
            - model_created
            - model_deleted
            - model_updated
            - password_set
            - policy_exception
            - policy_execution
            - property_mapping_exception
            - secret_rotate
            - secret_view
            - source_linked
            - suspicious_request
            - system_exception
            - system_task_exception
            - system_task_execution
            - update_available
            - user_write
            type: string
          type: array
        style: form
      - description: Brand name
        explode: true
        in: query
        name: brand_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_ip
        required: false
        schema:
          type: string
        style: form
      - description: Context Authorized application
        explode: true
        in: query
        name: context_authorized_app
        required: false
        schema:
          type: string
        style: form
      - description: Context Model App
        explode: true
        in: query
        name: context_model_app
        required: false
        schema:
          type: string
        style: form
      - description: Context Model Name
        explode: true
        in: query
        name: context_model_name
        required: false
        schema:
          type: string
        style: form
      - description: Context Model Primary Key
        explode: true
        in: query
        name: context_model_pk
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Username
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    post:
      description: Event Read-Only Viewset
      operationId: events_events_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/events/{event_uuid}/:
    delete:
      description: Event Read-Only Viewset
      operationId: events_events_destroy
      parameters:
      - description: A UUID string identifying this Event.
        explode: false
        in: path
        name: event_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    get:
      description: Event Read-Only Viewset
      operationId: events_events_retrieve
      parameters:
      - description: A UUID string identifying this Event.
        explode: false
        in: path
        name: event_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    patch:
      description: Event Read-Only Viewset
      operationId: events_events_partial_update
      parameters:
      - description: A UUID string identifying this Event.
        explode: false
        in: path
        name: event_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    put:
      description: Event Read-Only Viewset
      operationId: events_events_update
      parameters:
      - description: A UUID string identifying this Event.
        explode: false
        in: path
        name: event_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/events/actions/:
    get:
      description: Get all actions
      operationId: events_events_actions_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/events/top_per_user/:
    get:
      description: Get the top_n events grouped by user count
      operationId: events_events_top_per_user_list
      parameters:
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: top_n
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventTopPerUser'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/events/volume/:
    get:
      description: Get event volume for specified filters and timeframe
      operationId: events_events_volume_list
      parameters:
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: actions
        required: false
        schema:
          items:
            enum:
            - authorize_application
            - configuration_error
            - custom_
            - email_sent
            - flow_execution
            - impersonation_ended
            - impersonation_started
            - invitation_used
            - login
            - login_failed
            - logout
            - model_created
            - model_deleted
            - model_updated
            - password_set
            - policy_exception
            - policy_execution
            - property_mapping_exception
            - secret_rotate
            - secret_view
            - source_linked
            - suspicious_request
            - system_exception
            - system_task_exception
            - system_task_execution
            - update_available
            - user_write
            type: string
          type: array
        style: form
      - description: Brand name
        explode: true
        in: query
        name: brand_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_ip
        required: false
        schema:
          type: string
        style: form
      - description: Context Authorized application
        explode: true
        in: query
        name: context_authorized_app
        required: false
        schema:
          type: string
        style: form
      - description: Context Model App
        explode: true
        in: query
        name: context_model_app
        required: false
        schema:
          type: string
        style: form
      - description: Context Model Name
        explode: true
        in: query
        name: context_model_name
        required: false
        schema:
          type: string
        style: form
      - description: Context Model Primary Key
        explode: true
        in: query
        name: context_model_pk
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: history_days
        required: false
        schema:
          default: 7
          type: number
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Username
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventVolume'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/notifications/:
    get:
      description: Notification Viewset
      operationId: events_notifications_list
      parameters:
      - explode: true
        in: query
        name: body
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: event
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: seen
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: severity
        required: false
        schema:
          enum:
          - alert
          - notice
          - warning
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/notifications/{uuid}/:
    delete:
      description: Notification Viewset
      operationId: events_notifications_destroy
      parameters:
      - description: A UUID string identifying this Notification.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    get:
      description: Notification Viewset
      operationId: events_notifications_retrieve
      parameters:
      - description: A UUID string identifying this Notification.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    patch:
      description: Notification Viewset
      operationId: events_notifications_partial_update
      parameters:
      - description: A UUID string identifying this Notification.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    put:
      description: Notification Viewset
      operationId: events_notifications_update
      parameters:
      - description: A UUID string identifying this Notification.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/notifications/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: events_notifications_used_by_list
      parameters:
      - description: A UUID string identifying this Notification.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/notifications/mark_all_seen/:
    post:
      description: Mark all the user's notifications as seen
      operationId: events_notifications_mark_all_seen_create
      responses:
        "204":
          description: Marked tasks as read successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/rules/:
    get:
      description: NotificationRule Viewset
      operationId: events_rules_list
      parameters:
      - explode: true
        in: query
        name: destination_group__name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: |+
          Controls which severity level the created notifications will have.

        explode: true
        in: query
        name: severity
        required: false
        schema:
          enum:
          - alert
          - notice
          - warning
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationRuleList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    post:
      description: NotificationRule Viewset
      operationId: events_rules_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/rules/{pbm_uuid}/:
    delete:
      description: NotificationRule Viewset
      operationId: events_rules_destroy
      parameters:
      - description: A UUID string identifying this Notification Rule.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    get:
      description: NotificationRule Viewset
      operationId: events_rules_retrieve
      parameters:
      - description: A UUID string identifying this Notification Rule.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    patch:
      description: NotificationRule Viewset
      operationId: events_rules_partial_update
      parameters:
      - description: A UUID string identifying this Notification Rule.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRuleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    put:
      description: NotificationRule Viewset
      operationId: events_rules_update
      parameters:
      - description: A UUID string identifying this Notification Rule.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/rules/{pbm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: events_rules_used_by_list
      parameters:
      - description: A UUID string identifying this Notification Rule.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/system_tasks/:
    get:
      description: Read-only view set that returns all background tasks
      operationId: events_system_tasks_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - error
          - successful
          - unknown
          - warning
          type: string
        style: form
      - explode: true
        in: query
        name: uid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemTaskList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/system_tasks/{uuid}/:
    get:
      description: Read-only view set that returns all background tasks
      operationId: events_system_tasks_retrieve
      parameters:
      - description: A UUID string identifying this System Task.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTask'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/system_tasks/{uuid}/run/:
    post:
      description: Run task
      operationId: events_system_tasks_run_create
      parameters:
      - description: A UUID string identifying this System Task.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Task retried successfully
        "404":
          description: Task not found
        "500":
          description: Failed to retry task
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/transports/:
    get:
      description: NotificationTransport Viewset
      operationId: events_transports_list
      parameters:
      - explode: true
        in: query
        name: mode
        required: false
        schema:
          enum:
          - email
          - local
          - webhook
          - webhook_slack
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: send_once
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: webhook_url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationTransportList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    post:
      description: NotificationTransport Viewset
      operationId: events_transports_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTransportRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTransport'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/transports/{uuid}/:
    delete:
      description: NotificationTransport Viewset
      operationId: events_transports_destroy
      parameters:
      - description: A UUID string identifying this Notification Transport.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    get:
      description: NotificationTransport Viewset
      operationId: events_transports_retrieve
      parameters:
      - description: A UUID string identifying this Notification Transport.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTransport'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    patch:
      description: NotificationTransport Viewset
      operationId: events_transports_partial_update
      parameters:
      - description: A UUID string identifying this Notification Transport.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTransportRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTransport'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
    put:
      description: NotificationTransport Viewset
      operationId: events_transports_update
      parameters:
      - description: A UUID string identifying this Notification Transport.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTransportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTransport'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/transports/{uuid}/test/:
    post:
      description: |-
        Send example notification using selected transport. Requires
        Modify permissions.
      operationId: events_transports_test_create
      parameters:
      - description: A UUID string identifying this Notification Transport.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTransportTest'
          description: ""
        "500":
          description: Failed to test transport
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /events/transports/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: events_transports_used_by_list
      parameters:
      - description: A UUID string identifying this Notification Transport.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - events
  /flows/bindings/:
    get:
      description: FlowStageBinding Viewset
      operationId: flows_bindings_list
      parameters:
      - explode: true
        in: query
        name: evaluate_on_plan
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: fsb_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: |+
          Configure how the flow executor should handle an invalid response to a challenge. RETRY returns the error message and a similar challenge to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT restarts the flow while keeping the current context.

        explode: true
        in: query
        name: invalid_response_action
        required: false
        schema:
          enum:
          - restart
          - restart_with_context
          - retry
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: integer
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: policies
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: policy_engine_mode
        required: false
        schema:
          enum:
          - all
          - any
          type: string
        style: form
      - explode: true
        in: query
        name: re_evaluate_policies
        required: false
        schema:
          type: boolean
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: target
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlowStageBindingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    post:
      description: FlowStageBinding Viewset
      operationId: flows_bindings_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowStageBindingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowStageBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/bindings/{fsb_uuid}/:
    delete:
      description: FlowStageBinding Viewset
      operationId: flows_bindings_destroy
      parameters:
      - description: A UUID string identifying this Flow Stage Binding.
        explode: false
        in: path
        name: fsb_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    get:
      description: FlowStageBinding Viewset
      operationId: flows_bindings_retrieve
      parameters:
      - description: A UUID string identifying this Flow Stage Binding.
        explode: false
        in: path
        name: fsb_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowStageBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    patch:
      description: FlowStageBinding Viewset
      operationId: flows_bindings_partial_update
      parameters:
      - description: A UUID string identifying this Flow Stage Binding.
        explode: false
        in: path
        name: fsb_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlowStageBindingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowStageBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    put:
      description: FlowStageBinding Viewset
      operationId: flows_bindings_update
      parameters:
      - description: A UUID string identifying this Flow Stage Binding.
        explode: false
        in: path
        name: fsb_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowStageBindingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowStageBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/bindings/{fsb_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: flows_bindings_used_by_list
      parameters:
      - description: A UUID string identifying this Flow Stage Binding.
        explode: false
        in: path
        name: fsb_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/executor/{flow_slug}/:
    get:
      description: Get the next pending challenge from the currently active flow.
      operationId: flows_executor_get
      parameters:
      - explode: false
        in: path
        name: flow_slug
        required: true
        schema:
          type: string
        style: simple
      - description: Querystring as received
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeTypes'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      - {}
      tags:
      - flows
    post:
      description: Solve the previously retrieved challenge and advanced to the next
        stage.
      operationId: flows_executor_solve
      parameters:
      - explode: false
        in: path
        name: flow_slug
        required: true
        schema:
          type: string
        style: simple
      - description: Querystring as received
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowChallengeResponseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeTypes'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      - {}
      tags:
      - flows
  /flows/inspector/{flow_slug}/:
    get:
      description: Get current flow state and record it
      operationId: flows_inspector_get
      parameters:
      - explode: false
        in: path
        name: flow_slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowInspection'
          description: ""
        "400":
          description: No flow plan in session.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/:
    get:
      description: Flow Viewset
      operationId: flows_instances_list
      parameters:
      - description: |+
          Configure what should happen when a flow denies access to a user.

        explode: true
        in: query
        name: denied_action
        required: false
        schema:
          enum:
          - continue
          - message
          - message_continue
          type: string
        style: form
      - description: |+
          Decides what this Flow is used for. For example, the Authentication flow is redirect to when an un-authenticated user visits authentik.

        explode: true
        in: query
        name: designation
        required: false
        schema:
          enum:
          - authentication
          - authorization
          - enrollment
          - invalidation
          - recovery
          - stage_configuration
          - unenrollment
          type: string
        style: form
      - explode: true
        in: query
        name: flow_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlowList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    post:
      description: Flow Viewset
      operationId: flows_instances_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/{slug}/:
    delete:
      description: Flow Viewset
      operationId: flows_instances_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    get:
      description: Flow Viewset
      operationId: flows_instances_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    patch:
      description: Flow Viewset
      operationId: flows_instances_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlowRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
    put:
      description: Flow Viewset
      operationId: flows_instances_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/{slug}/diagram/:
    get:
      description: "Return diagram for flow with slug `slug`, in the format used by\
        \ flowchart.js"
      operationId: flows_instances_diagram_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowDiagram'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/{slug}/execute/:
    get:
      description: Execute flow for current user
      operationId: flows_instances_execute_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: ""
        "400":
          description: Flow not applicable
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/{slug}/export/:
    get:
      description: Export flow to .yaml file
      operationId: flows_instances_export_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/{slug}/set_background/:
    post:
      description: Set Flow background
      operationId: flows_instances_set_background_create
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/{slug}/set_background_url/:
    post:
      description: Set Flow background (as URL)
      operationId: flows_instances_set_background_url_create
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathRequest'
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: flows_instances_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: Visible in the URL.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/cache_clear/:
    post:
      description: Clear flow cache
      operationId: flows_instances_cache_clear_create
      responses:
        "204":
          description: Successfully cleared cache
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/cache_info/:
    get:
      description: Info about cached flows
      operationId: flows_instances_cache_info_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /flows/instances/import/:
    post:
      description: Import flow from .yaml file
      operationId: flows_instances_import_create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowImportResult'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowImportResult'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - flows
  /managed/blueprints/:
    get:
      description: Blueprint instances
      operationId: managed_blueprints_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlueprintInstanceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
    post:
      description: Blueprint instances
      operationId: managed_blueprints_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlueprintInstanceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintInstance'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
  /managed/blueprints/{instance_uuid}/:
    delete:
      description: Blueprint instances
      operationId: managed_blueprints_destroy
      parameters:
      - description: A UUID string identifying this Blueprint Instance.
        explode: false
        in: path
        name: instance_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
    get:
      description: Blueprint instances
      operationId: managed_blueprints_retrieve
      parameters:
      - description: A UUID string identifying this Blueprint Instance.
        explode: false
        in: path
        name: instance_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintInstance'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
    patch:
      description: Blueprint instances
      operationId: managed_blueprints_partial_update
      parameters:
      - description: A UUID string identifying this Blueprint Instance.
        explode: false
        in: path
        name: instance_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlueprintInstanceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintInstance'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
    put:
      description: Blueprint instances
      operationId: managed_blueprints_update
      parameters:
      - description: A UUID string identifying this Blueprint Instance.
        explode: false
        in: path
        name: instance_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlueprintInstanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintInstance'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
  /managed/blueprints/{instance_uuid}/apply/:
    post:
      description: Apply a blueprint
      operationId: managed_blueprints_apply_create
      parameters:
      - description: A UUID string identifying this Blueprint Instance.
        explode: false
        in: path
        name: instance_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintInstance'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
  /managed/blueprints/{instance_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: managed_blueprints_used_by_list
      parameters:
      - description: A UUID string identifying this Blueprint Instance.
        explode: false
        in: path
        name: instance_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
  /managed/blueprints/available/:
    get:
      description: Get blueprints
      operationId: managed_blueprints_available_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlueprintFile'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - managed
  /oauth2/access_tokens/:
    get:
      description: AccessToken Viewset
      operationId: oauth2_access_tokens_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTokenModelList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/access_tokens/{id}/:
    delete:
      description: AccessToken Viewset
      operationId: oauth2_access_tokens_destroy
      parameters:
      - description: A unique integer value identifying this OAuth2 Access Token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
    get:
      description: AccessToken Viewset
      operationId: oauth2_access_tokens_retrieve
      parameters:
      - description: A unique integer value identifying this OAuth2 Access Token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/access_tokens/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: oauth2_access_tokens_used_by_list
      parameters:
      - description: A unique integer value identifying this OAuth2 Access Token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/authorization_codes/:
    get:
      description: AuthorizationCode Viewset
      operationId: oauth2_authorization_codes_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpiringBaseGrantModelList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/authorization_codes/{id}/:
    delete:
      description: AuthorizationCode Viewset
      operationId: oauth2_authorization_codes_destroy
      parameters:
      - description: A unique integer value identifying this Authorization Code.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
    get:
      description: AuthorizationCode Viewset
      operationId: oauth2_authorization_codes_retrieve
      parameters:
      - description: A unique integer value identifying this Authorization Code.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiringBaseGrantModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/authorization_codes/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: oauth2_authorization_codes_used_by_list
      parameters:
      - description: A unique integer value identifying this Authorization Code.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/refresh_tokens/:
    get:
      description: RefreshToken Viewset
      operationId: oauth2_refresh_tokens_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTokenModelList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/refresh_tokens/{id}/:
    delete:
      description: RefreshToken Viewset
      operationId: oauth2_refresh_tokens_destroy
      parameters:
      - description: A unique integer value identifying this OAuth2 Refresh Token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
    get:
      description: RefreshToken Viewset
      operationId: oauth2_refresh_tokens_retrieve
      parameters:
      - description: A unique integer value identifying this OAuth2 Refresh Token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /oauth2/refresh_tokens/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: oauth2_refresh_tokens_used_by_list
      parameters:
      - description: A unique integer value identifying this OAuth2 Refresh Token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - oauth2
  /outposts/instances/:
    get:
      description: Outpost Viewset
      operationId: outposts_instances_list
      parameters:
      - explode: true
        in: query
        name: managed__icontains
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: managed__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name__icontains
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: providers__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: providers_by_pk
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: service_connection__name__icontains
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: service_connection__name__iexact
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOutpostList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    post:
      description: Outpost Viewset
      operationId: outposts_instances_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutpostRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outpost'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/instances/{uuid}/:
    delete:
      description: Outpost Viewset
      operationId: outposts_instances_destroy
      parameters:
      - description: A UUID string identifying this Outpost.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    get:
      description: Outpost Viewset
      operationId: outposts_instances_retrieve
      parameters:
      - description: A UUID string identifying this Outpost.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outpost'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    patch:
      description: Outpost Viewset
      operationId: outposts_instances_partial_update
      parameters:
      - description: A UUID string identifying this Outpost.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOutpostRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outpost'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    put:
      description: Outpost Viewset
      operationId: outposts_instances_update
      parameters:
      - description: A UUID string identifying this Outpost.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutpostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outpost'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/instances/{uuid}/health/:
    get:
      description: Get outposts current health
      operationId: outposts_instances_health_list
      parameters:
      - explode: true
        in: query
        name: managed__icontains
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: managed__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name__icontains
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: providers__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: providers_by_pk
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: service_connection__name__icontains
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: service_connection__name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: A UUID string identifying this Outpost.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutpostHealth'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/instances/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: outposts_instances_used_by_list
      parameters:
      - description: A UUID string identifying this Outpost.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/instances/default_settings/:
    get:
      description: Global default outpost config
      operationId: outposts_instances_default_settings_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutpostDefaultConfig'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/ldap/:
    get:
      description: LDAPProvider Viewset
      operationId: outposts_ldap_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLDAPOutpostConfigList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/ldap/{id}/check_access/:
    get:
      description: Check access to a single application by slug
      operationId: outposts_ldap_access_check
      parameters:
      - explode: true
        in: query
        name: app_slug
        required: false
        schema:
          type: string
        style: form
      - description: A unique integer value identifying this LDAP Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPCheckAccess'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/proxy/:
    get:
      description: ProxyProvider Viewset
      operationId: outposts_proxy_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProxyOutpostConfigList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/radius/:
    get:
      description: RadiusProvider Viewset
      operationId: outposts_radius_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRadiusOutpostConfigList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/radius/{id}/check_access/:
    get:
      description: Check access to a single application by slug
      operationId: outposts_radius_access_check
      parameters:
      - explode: true
        in: query
        name: app_slug
        required: false
        schema:
          type: string
        style: form
      - description: A unique integer value identifying this Radius Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusCheckAccess'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/all/:
    get:
      description: ServiceConnection Viewset
      operationId: outposts_service_connections_all_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/all/{uuid}/:
    delete:
      description: ServiceConnection Viewset
      operationId: outposts_service_connections_all_destroy
      parameters:
      - description: A UUID string identifying this Outpost Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    get:
      description: ServiceConnection Viewset
      operationId: outposts_service_connections_all_retrieve
      parameters:
      - description: A UUID string identifying this Outpost Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/all/{uuid}/state/:
    get:
      description: Get the service connection's state
      operationId: outposts_service_connections_all_state_retrieve
      parameters:
      - description: A UUID string identifying this Outpost Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionState'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/all/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: outposts_service_connections_all_used_by_list
      parameters:
      - description: A UUID string identifying this Outpost Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/all/types/:
    get:
      description: Get all creatable types
      operationId: outposts_service_connections_all_types_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/docker/:
    get:
      description: DockerServiceConnection Viewset
      operationId: outposts_service_connections_docker_list
      parameters:
      - explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tls_authentication
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: tls_verification
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDockerServiceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    post:
      description: DockerServiceConnection Viewset
      operationId: outposts_service_connections_docker_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/docker/{uuid}/:
    delete:
      description: DockerServiceConnection Viewset
      operationId: outposts_service_connections_docker_destroy
      parameters:
      - description: A UUID string identifying this Docker Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    get:
      description: DockerServiceConnection Viewset
      operationId: outposts_service_connections_docker_retrieve
      parameters:
      - description: A UUID string identifying this Docker Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    patch:
      description: DockerServiceConnection Viewset
      operationId: outposts_service_connections_docker_partial_update
      parameters:
      - description: A UUID string identifying this Docker Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDockerServiceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    put:
      description: DockerServiceConnection Viewset
      operationId: outposts_service_connections_docker_update
      parameters:
      - description: A UUID string identifying this Docker Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/docker/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: outposts_service_connections_docker_used_by_list
      parameters:
      - description: A UUID string identifying this Docker Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/kubernetes/:
    get:
      description: KubernetesServiceConnection Viewset
      operationId: outposts_service_connections_kubernetes_list
      parameters:
      - explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedKubernetesServiceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    post:
      description: KubernetesServiceConnection Viewset
      operationId: outposts_service_connections_kubernetes_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesServiceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/kubernetes/{uuid}/:
    delete:
      description: KubernetesServiceConnection Viewset
      operationId: outposts_service_connections_kubernetes_destroy
      parameters:
      - description: A UUID string identifying this Kubernetes Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    get:
      description: KubernetesServiceConnection Viewset
      operationId: outposts_service_connections_kubernetes_retrieve
      parameters:
      - description: A UUID string identifying this Kubernetes Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    patch:
      description: KubernetesServiceConnection Viewset
      operationId: outposts_service_connections_kubernetes_partial_update
      parameters:
      - description: A UUID string identifying this Kubernetes Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKubernetesServiceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
    put:
      description: KubernetesServiceConnection Viewset
      operationId: outposts_service_connections_kubernetes_update
      parameters:
      - description: A UUID string identifying this Kubernetes Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesServiceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesServiceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /outposts/service_connections/kubernetes/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: outposts_service_connections_kubernetes_used_by_list
      parameters:
      - description: A UUID string identifying this Kubernetes Service-Connection.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - outposts
  /policies/all/:
    get:
      description: Policy Viewset
      operationId: policies_all_list
      parameters:
      - explode: true
        in: query
        name: bindings__isnull
        required: false
        schema:
          type: boolean
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: promptstage__isnull
        required: false
        schema:
          type: boolean
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/all/{policy_uuid}/:
    delete:
      description: Policy Viewset
      operationId: policies_all_destroy
      parameters:
      - description: A UUID string identifying this Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Policy Viewset
      operationId: policies_all_retrieve
      parameters:
      - description: A UUID string identifying this Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/all/{policy_uuid}/test/:
    post:
      description: Test policy
      operationId: policies_all_test_create
      parameters:
      - description: A UUID string identifying this Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyTestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTestResult'
          description: ""
        "400":
          description: Invalid parameters
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/all/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_all_used_by_list
      parameters:
      - description: A UUID string identifying this Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/all/cache_clear/:
    post:
      description: Clear policy cache
      operationId: policies_all_cache_clear_create
      responses:
        "204":
          description: Successfully cleared cache
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/all/cache_info/:
    get:
      description: Info about cached policies
      operationId: policies_all_cache_info_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/all/types/:
    get:
      description: Get all creatable types
      operationId: policies_all_types_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/bindings/:
    get:
      description: PolicyBinding Viewset
      operationId: policies_bindings_list
      parameters:
      - explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: integer
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: policy
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: policy__isnull
        required: false
        schema:
          type: boolean
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: target
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: target_in
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: timeout
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPolicyBindingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: PolicyBinding Viewset
      operationId: policies_bindings_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyBindingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/bindings/{policy_binding_uuid}/:
    delete:
      description: PolicyBinding Viewset
      operationId: policies_bindings_destroy
      parameters:
      - description: A UUID string identifying this Policy Binding.
        explode: false
        in: path
        name: policy_binding_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: PolicyBinding Viewset
      operationId: policies_bindings_retrieve
      parameters:
      - description: A UUID string identifying this Policy Binding.
        explode: false
        in: path
        name: policy_binding_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: PolicyBinding Viewset
      operationId: policies_bindings_partial_update
      parameters:
      - description: A UUID string identifying this Policy Binding.
        explode: false
        in: path
        name: policy_binding_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPolicyBindingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: PolicyBinding Viewset
      operationId: policies_bindings_update
      parameters:
      - description: A UUID string identifying this Policy Binding.
        explode: false
        in: path
        name: policy_binding_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyBindingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBinding'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/bindings/{policy_binding_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_bindings_used_by_list
      parameters:
      - description: A UUID string identifying this Policy Binding.
        explode: false
        in: path
        name: policy_binding_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/dummy/:
    get:
      description: Dummy Viewset
      operationId: policies_dummy_list
      parameters:
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: execution_logging
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_updated
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: policy_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: result
        required: false
        schema:
          type: boolean
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: wait_max
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: wait_min
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDummyPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: Dummy Viewset
      operationId: policies_dummy_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DummyPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/dummy/{policy_uuid}/:
    delete:
      description: Dummy Viewset
      operationId: policies_dummy_destroy
      parameters:
      - description: A UUID string identifying this Dummy Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Dummy Viewset
      operationId: policies_dummy_retrieve
      parameters:
      - description: A UUID string identifying this Dummy Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: Dummy Viewset
      operationId: policies_dummy_partial_update
      parameters:
      - description: A UUID string identifying this Dummy Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDummyPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: Dummy Viewset
      operationId: policies_dummy_update
      parameters:
      - description: A UUID string identifying this Dummy Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DummyPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/dummy/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_dummy_used_by_list
      parameters:
      - description: A UUID string identifying this Dummy Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/event_matcher/:
    get:
      description: Event Matcher Policy Viewset
      operationId: policies_event_matcher_list
      parameters:
      - description: |+
          Match created events with this action type. When left empty, all action types will be matched.

        explode: true
        in: query
        name: action
        required: false
        schema:
          enum:
          - authorize_application
          - configuration_error
          - custom_
          - email_sent
          - flow_execution
          - impersonation_ended
          - impersonation_started
          - invitation_used
          - login
          - login_failed
          - logout
          - model_created
          - model_deleted
          - model_updated
          - password_set
          - policy_exception
          - policy_execution
          - property_mapping_exception
          - secret_rotate
          - secret_view
          - source_linked
          - suspicious_request
          - system_exception
          - system_task_exception
          - system_task_execution
          - update_available
          - user_write
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: app
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_ip
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: execution_logging
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_updated
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: model
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: policy_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventMatcherPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: Event Matcher Policy Viewset
      operationId: policies_event_matcher_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventMatcherPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMatcherPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/event_matcher/{policy_uuid}/:
    delete:
      description: Event Matcher Policy Viewset
      operationId: policies_event_matcher_destroy
      parameters:
      - description: A UUID string identifying this Event Matcher Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Event Matcher Policy Viewset
      operationId: policies_event_matcher_retrieve
      parameters:
      - description: A UUID string identifying this Event Matcher Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMatcherPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: Event Matcher Policy Viewset
      operationId: policies_event_matcher_partial_update
      parameters:
      - description: A UUID string identifying this Event Matcher Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventMatcherPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMatcherPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: Event Matcher Policy Viewset
      operationId: policies_event_matcher_update
      parameters:
      - description: A UUID string identifying this Event Matcher Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventMatcherPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMatcherPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/event_matcher/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_event_matcher_used_by_list
      parameters:
      - description: A UUID string identifying this Event Matcher Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/expression/:
    get:
      description: Source Viewset
      operationId: policies_expression_list
      parameters:
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: execution_logging
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: expression
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: last_updated
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: policy_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpressionPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: Source Viewset
      operationId: policies_expression_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressionPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressionPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/expression/{policy_uuid}/:
    delete:
      description: Source Viewset
      operationId: policies_expression_destroy
      parameters:
      - description: A UUID string identifying this Expression Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Source Viewset
      operationId: policies_expression_retrieve
      parameters:
      - description: A UUID string identifying this Expression Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressionPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: Source Viewset
      operationId: policies_expression_partial_update
      parameters:
      - description: A UUID string identifying this Expression Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpressionPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressionPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: Source Viewset
      operationId: policies_expression_update
      parameters:
      - description: A UUID string identifying this Expression Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpressionPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpressionPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/expression/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_expression_used_by_list
      parameters:
      - description: A UUID string identifying this Expression Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/geoip/:
    get:
      description: GeoIP Viewset
      operationId: policies_geoip_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeoIPPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: GeoIP Viewset
      operationId: policies_geoip_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoIPPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoIPPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/geoip/{policy_uuid}/:
    delete:
      description: GeoIP Viewset
      operationId: policies_geoip_destroy
      parameters:
      - description: A UUID string identifying this GeoIP Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: GeoIP Viewset
      operationId: policies_geoip_retrieve
      parameters:
      - description: A UUID string identifying this GeoIP Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoIPPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: GeoIP Viewset
      operationId: policies_geoip_partial_update
      parameters:
      - description: A UUID string identifying this GeoIP Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGeoIPPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoIPPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: GeoIP Viewset
      operationId: policies_geoip_update
      parameters:
      - description: A UUID string identifying this GeoIP Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoIPPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoIPPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/geoip/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_geoip_used_by_list
      parameters:
      - description: A UUID string identifying this GeoIP Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/geoip_iso3166/:
    get:
      description: Get all countries in ISO-3166-1
      operationId: policies_geoip_iso3166_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DetailedCountry'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      - {}
      tags:
      - policies
  /policies/password/:
    get:
      description: Password Policy Viewset
      operationId: policies_password_list
      parameters:
      - explode: true
        in: query
        name: amount_digits
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: amount_lowercase
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: amount_symbols
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: amount_uppercase
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: check_have_i_been_pwned
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: check_static_rules
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: check_zxcvbn
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: error_message
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: execution_logging
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: hibp_allowed_count
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: last_updated
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: length_min
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: password_field
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: policy_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: symbol_charset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: zxcvbn_score_threshold
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPasswordPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: Password Policy Viewset
      operationId: policies_password_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/password/{policy_uuid}/:
    delete:
      description: Password Policy Viewset
      operationId: policies_password_destroy
      parameters:
      - description: A UUID string identifying this Password Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Password Policy Viewset
      operationId: policies_password_retrieve
      parameters:
      - description: A UUID string identifying this Password Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: Password Policy Viewset
      operationId: policies_password_partial_update
      parameters:
      - description: A UUID string identifying this Password Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: Password Policy Viewset
      operationId: policies_password_update
      parameters:
      - description: A UUID string identifying this Password Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/password/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_password_used_by_list
      parameters:
      - description: A UUID string identifying this Password Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/password_expiry/:
    get:
      description: Password Expiry Viewset
      operationId: policies_password_expiry_list
      parameters:
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: days
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: deny_only
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: execution_logging
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_updated
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: policy_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPasswordExpiryPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: Password Expiry Viewset
      operationId: policies_password_expiry_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordExpiryPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordExpiryPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/password_expiry/{policy_uuid}/:
    delete:
      description: Password Expiry Viewset
      operationId: policies_password_expiry_destroy
      parameters:
      - description: A UUID string identifying this Password Expiry Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Password Expiry Viewset
      operationId: policies_password_expiry_retrieve
      parameters:
      - description: A UUID string identifying this Password Expiry Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordExpiryPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: Password Expiry Viewset
      operationId: policies_password_expiry_partial_update
      parameters:
      - description: A UUID string identifying this Password Expiry Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordExpiryPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordExpiryPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: Password Expiry Viewset
      operationId: policies_password_expiry_update
      parameters:
      - description: A UUID string identifying this Password Expiry Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordExpiryPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordExpiryPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/password_expiry/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_password_expiry_used_by_list
      parameters:
      - description: A UUID string identifying this Password Expiry Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/reputation/:
    get:
      description: Reputation Policy Viewset
      operationId: policies_reputation_list
      parameters:
      - explode: true
        in: query
        name: check_ip
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: check_username
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: execution_logging
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_updated
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: policy_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: threshold
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReputationPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: Reputation Policy Viewset
      operationId: policies_reputation_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReputationPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReputationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/reputation/{policy_uuid}/:
    delete:
      description: Reputation Policy Viewset
      operationId: policies_reputation_destroy
      parameters:
      - description: A UUID string identifying this Reputation Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Reputation Policy Viewset
      operationId: policies_reputation_retrieve
      parameters:
      - description: A UUID string identifying this Reputation Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReputationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: Reputation Policy Viewset
      operationId: policies_reputation_partial_update
      parameters:
      - description: A UUID string identifying this Reputation Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReputationPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReputationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: Reputation Policy Viewset
      operationId: policies_reputation_update
      parameters:
      - description: A UUID string identifying this Reputation Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReputationPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReputationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/reputation/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_reputation_used_by_list
      parameters:
      - description: A UUID string identifying this Reputation Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/reputation/scores/:
    get:
      description: Reputation Viewset
      operationId: policies_reputation_scores_list
      parameters:
      - explode: true
        in: query
        name: identifier
        required: false
        schema:
          type: string
        style: form
      - description: Multiple values may be separated by commas.
        explode: false
        in: query
        name: identifier_in
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: ip
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: score
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReputationList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/reputation/scores/{reputation_uuid}/:
    delete:
      description: Reputation Viewset
      operationId: policies_reputation_scores_destroy
      parameters:
      - description: A UUID string identifying this Reputation Score.
        explode: false
        in: path
        name: reputation_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Reputation Viewset
      operationId: policies_reputation_scores_retrieve
      parameters:
      - description: A UUID string identifying this Reputation Score.
        explode: false
        in: path
        name: reputation_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reputation'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/reputation/scores/{reputation_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_reputation_scores_used_by_list
      parameters:
      - description: A UUID string identifying this Reputation Score.
        explode: false
        in: path
        name: reputation_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/unique_password/:
    get:
      description: Password Uniqueness Policy Viewset
      operationId: policies_unique_password_list
      parameters:
      - explode: true
        in: query
        name: created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: execution_logging
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_updated
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: num_historical_passwords
        required: false
        schema:
          type: integer
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: password_field
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: policy_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUniquePasswordPolicyList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    post:
      description: Password Uniqueness Policy Viewset
      operationId: policies_unique_password_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniquePasswordPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniquePasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/unique_password/{policy_uuid}/:
    delete:
      description: Password Uniqueness Policy Viewset
      operationId: policies_unique_password_destroy
      parameters:
      - description: A UUID string identifying this Password Uniqueness Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    get:
      description: Password Uniqueness Policy Viewset
      operationId: policies_unique_password_retrieve
      parameters:
      - description: A UUID string identifying this Password Uniqueness Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniquePasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    patch:
      description: Password Uniqueness Policy Viewset
      operationId: policies_unique_password_partial_update
      parameters:
      - description: A UUID string identifying this Password Uniqueness Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUniquePasswordPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniquePasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
    put:
      description: Password Uniqueness Policy Viewset
      operationId: policies_unique_password_update
      parameters:
      - description: A UUID string identifying this Password Uniqueness Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniquePasswordPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniquePasswordPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /policies/unique_password/{policy_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: policies_unique_password_used_by_list
      parameters:
      - description: A UUID string identifying this Password Uniqueness Policy.
        explode: false
        in: path
        name: policy_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - policies
  /propertymappings/all/:
    get:
      description: PropertyMapping Viewset
      operationId: propertymappings_all_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/all/{pm_uuid}/:
    delete:
      description: PropertyMapping Viewset
      operationId: propertymappings_all_destroy
      parameters:
      - description: A UUID string identifying this Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: PropertyMapping Viewset
      operationId: propertymappings_all_retrieve
      parameters:
      - description: A UUID string identifying this Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/all/{pm_uuid}/test/:
    post:
      description: Test Property Mapping
      operationId: propertymappings_all_test_create
      parameters:
      - explode: true
        in: query
        name: format_result
        required: false
        schema:
          type: boolean
        style: form
      - description: A UUID string identifying this Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyMappingTestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyMappingTestResult'
          description: ""
        "400":
          description: Invalid parameters
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/all/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_all_used_by_list
      parameters:
      - description: A UUID string identifying this Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/all/types/:
    get:
      description: Get all creatable types
      operationId: propertymappings_all_types_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/notification/:
    get:
      description: NotificationWebhookMapping Viewset
      operationId: propertymappings_notification_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationWebhookMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: NotificationWebhookMapping Viewset
      operationId: propertymappings_notification_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationWebhookMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationWebhookMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/notification/{pm_uuid}/:
    delete:
      description: NotificationWebhookMapping Viewset
      operationId: propertymappings_notification_destroy
      parameters:
      - description: A UUID string identifying this Webhook Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: NotificationWebhookMapping Viewset
      operationId: propertymappings_notification_retrieve
      parameters:
      - description: A UUID string identifying this Webhook Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationWebhookMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: NotificationWebhookMapping Viewset
      operationId: propertymappings_notification_partial_update
      parameters:
      - description: A UUID string identifying this Webhook Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationWebhookMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationWebhookMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: NotificationWebhookMapping Viewset
      operationId: propertymappings_notification_update
      parameters:
      - description: A UUID string identifying this Webhook Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationWebhookMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationWebhookMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/notification/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_notification_used_by_list
      parameters:
      - description: A UUID string identifying this Webhook Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/google_workspace/:
    get:
      description: GoogleWorkspaceProviderMapping Viewset
      operationId: propertymappings_provider_google_workspace_list
      parameters:
      - explode: true
        in: query
        name: expression
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoogleWorkspaceProviderMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: GoogleWorkspaceProviderMapping Viewset
      operationId: propertymappings_provider_google_workspace_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleWorkspaceProviderMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/google_workspace/{pm_uuid}/:
    delete:
      description: GoogleWorkspaceProviderMapping Viewset
      operationId: propertymappings_provider_google_workspace_destroy
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: GoogleWorkspaceProviderMapping Viewset
      operationId: propertymappings_provider_google_workspace_retrieve
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: GoogleWorkspaceProviderMapping Viewset
      operationId: propertymappings_provider_google_workspace_partial_update
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoogleWorkspaceProviderMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: GoogleWorkspaceProviderMapping Viewset
      operationId: propertymappings_provider_google_workspace_update
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleWorkspaceProviderMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/google_workspace/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_provider_google_workspace_used_by_list
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/microsoft_entra/:
    get:
      description: MicrosoftEntraProviderMapping Viewset
      operationId: propertymappings_provider_microsoft_entra_list
      parameters:
      - explode: true
        in: query
        name: expression
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMicrosoftEntraProviderMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: MicrosoftEntraProviderMapping Viewset
      operationId: propertymappings_provider_microsoft_entra_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraProviderMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/microsoft_entra/{pm_uuid}/:
    delete:
      description: MicrosoftEntraProviderMapping Viewset
      operationId: propertymappings_provider_microsoft_entra_destroy
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: MicrosoftEntraProviderMapping Viewset
      operationId: propertymappings_provider_microsoft_entra_retrieve
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: MicrosoftEntraProviderMapping Viewset
      operationId: propertymappings_provider_microsoft_entra_partial_update
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMicrosoftEntraProviderMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: MicrosoftEntraProviderMapping Viewset
      operationId: propertymappings_provider_microsoft_entra_update
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraProviderMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/microsoft_entra/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_provider_microsoft_entra_used_by_list
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/rac/:
    get:
      description: RACPropertyMapping Viewset
      operationId: propertymappings_provider_rac_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRACPropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: RACPropertyMapping Viewset
      operationId: propertymappings_provider_rac_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RACPropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/rac/{pm_uuid}/:
    delete:
      description: RACPropertyMapping Viewset
      operationId: propertymappings_provider_rac_destroy
      parameters:
      - description: A UUID string identifying this RAC Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: RACPropertyMapping Viewset
      operationId: propertymappings_provider_rac_retrieve
      parameters:
      - description: A UUID string identifying this RAC Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: RACPropertyMapping Viewset
      operationId: propertymappings_provider_rac_partial_update
      parameters:
      - description: A UUID string identifying this RAC Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRACPropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: RACPropertyMapping Viewset
      operationId: propertymappings_provider_rac_update
      parameters:
      - description: A UUID string identifying this RAC Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RACPropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/rac/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_provider_rac_used_by_list
      parameters:
      - description: A UUID string identifying this RAC Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/radius/:
    get:
      description: RadiusProviderPropertyMapping Viewset
      operationId: propertymappings_provider_radius_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRadiusProviderPropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: RadiusProviderPropertyMapping Viewset
      operationId: propertymappings_provider_radius_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusProviderPropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProviderPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/radius/{pm_uuid}/:
    delete:
      description: RadiusProviderPropertyMapping Viewset
      operationId: propertymappings_provider_radius_destroy
      parameters:
      - description: A UUID string identifying this Radius Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: RadiusProviderPropertyMapping Viewset
      operationId: propertymappings_provider_radius_retrieve
      parameters:
      - description: A UUID string identifying this Radius Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProviderPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: RadiusProviderPropertyMapping Viewset
      operationId: propertymappings_provider_radius_partial_update
      parameters:
      - description: A UUID string identifying this Radius Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRadiusProviderPropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProviderPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: RadiusProviderPropertyMapping Viewset
      operationId: propertymappings_provider_radius_update
      parameters:
      - description: A UUID string identifying this Radius Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusProviderPropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProviderPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/radius/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_provider_radius_used_by_list
      parameters:
      - description: A UUID string identifying this Radius Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/saml/:
    get:
      description: SAMLPropertyMapping Viewset
      operationId: propertymappings_provider_saml_list
      parameters:
      - explode: true
        in: query
        name: friendly_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: saml_name
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSAMLPropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: SAMLPropertyMapping Viewset
      operationId: propertymappings_provider_saml_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLPropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/saml/{pm_uuid}/:
    delete:
      description: SAMLPropertyMapping Viewset
      operationId: propertymappings_provider_saml_destroy
      parameters:
      - description: A UUID string identifying this SAML Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: SAMLPropertyMapping Viewset
      operationId: propertymappings_provider_saml_retrieve
      parameters:
      - description: A UUID string identifying this SAML Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: SAMLPropertyMapping Viewset
      operationId: propertymappings_provider_saml_partial_update
      parameters:
      - description: A UUID string identifying this SAML Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSAMLPropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: SAMLPropertyMapping Viewset
      operationId: propertymappings_provider_saml_update
      parameters:
      - description: A UUID string identifying this SAML Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLPropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLPropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/saml/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_provider_saml_used_by_list
      parameters:
      - description: A UUID string identifying this SAML Provider Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/scim/:
    get:
      description: SCIMMapping Viewset
      operationId: propertymappings_provider_scim_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: SCIMMapping Viewset
      operationId: propertymappings_provider_scim_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/scim/{pm_uuid}/:
    delete:
      description: SCIMMapping Viewset
      operationId: propertymappings_provider_scim_destroy
      parameters:
      - description: A UUID string identifying this SCIM Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: SCIMMapping Viewset
      operationId: propertymappings_provider_scim_retrieve
      parameters:
      - description: A UUID string identifying this SCIM Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: SCIMMapping Viewset
      operationId: propertymappings_provider_scim_partial_update
      parameters:
      - description: A UUID string identifying this SCIM Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSCIMMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: SCIMMapping Viewset
      operationId: propertymappings_provider_scim_update
      parameters:
      - description: A UUID string identifying this SCIM Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/scim/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_provider_scim_used_by_list
      parameters:
      - description: A UUID string identifying this SCIM Provider Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/scope/:
    get:
      description: ScopeMapping Viewset
      operationId: propertymappings_provider_scope_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: scope_name
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScopeMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: ScopeMapping Viewset
      operationId: propertymappings_provider_scope_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/scope/{pm_uuid}/:
    delete:
      description: ScopeMapping Viewset
      operationId: propertymappings_provider_scope_destroy
      parameters:
      - description: A UUID string identifying this Scope Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: ScopeMapping Viewset
      operationId: propertymappings_provider_scope_retrieve
      parameters:
      - description: A UUID string identifying this Scope Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: ScopeMapping Viewset
      operationId: propertymappings_provider_scope_partial_update
      parameters:
      - description: A UUID string identifying this Scope Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScopeMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: ScopeMapping Viewset
      operationId: propertymappings_provider_scope_update
      parameters:
      - description: A UUID string identifying this Scope Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/provider/scope/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_provider_scope_used_by_list
      parameters:
      - description: A UUID string identifying this Scope Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/kerberos/:
    get:
      description: KerberosSource PropertyMapping Viewset
      operationId: propertymappings_source_kerberos_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedKerberosSourcePropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: KerberosSource PropertyMapping Viewset
      operationId: propertymappings_source_kerberos_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosSourcePropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/kerberos/{pm_uuid}/:
    delete:
      description: KerberosSource PropertyMapping Viewset
      operationId: propertymappings_source_kerberos_destroy
      parameters:
      - description: A UUID string identifying this Kerberos Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: KerberosSource PropertyMapping Viewset
      operationId: propertymappings_source_kerberos_retrieve
      parameters:
      - description: A UUID string identifying this Kerberos Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: KerberosSource PropertyMapping Viewset
      operationId: propertymappings_source_kerberos_partial_update
      parameters:
      - description: A UUID string identifying this Kerberos Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKerberosSourcePropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: KerberosSource PropertyMapping Viewset
      operationId: propertymappings_source_kerberos_update
      parameters:
      - description: A UUID string identifying this Kerberos Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosSourcePropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/kerberos/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_source_kerberos_used_by_list
      parameters:
      - description: A UUID string identifying this Kerberos Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/ldap/:
    get:
      description: LDAP PropertyMapping Viewset
      operationId: propertymappings_source_ldap_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLDAPSourcePropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: LDAP PropertyMapping Viewset
      operationId: propertymappings_source_ldap_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPSourcePropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/ldap/{pm_uuid}/:
    delete:
      description: LDAP PropertyMapping Viewset
      operationId: propertymappings_source_ldap_destroy
      parameters:
      - description: A UUID string identifying this LDAP Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: LDAP PropertyMapping Viewset
      operationId: propertymappings_source_ldap_retrieve
      parameters:
      - description: A UUID string identifying this LDAP Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: LDAP PropertyMapping Viewset
      operationId: propertymappings_source_ldap_partial_update
      parameters:
      - description: A UUID string identifying this LDAP Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLDAPSourcePropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: LDAP PropertyMapping Viewset
      operationId: propertymappings_source_ldap_update
      parameters:
      - description: A UUID string identifying this LDAP Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPSourcePropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/ldap/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_source_ldap_used_by_list
      parameters:
      - description: A UUID string identifying this LDAP Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/oauth/:
    get:
      description: OAuthSourcePropertyMapping Viewset
      operationId: propertymappings_source_oauth_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOAuthSourcePropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: OAuthSourcePropertyMapping Viewset
      operationId: propertymappings_source_oauth_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthSourcePropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/oauth/{pm_uuid}/:
    delete:
      description: OAuthSourcePropertyMapping Viewset
      operationId: propertymappings_source_oauth_destroy
      parameters:
      - description: A UUID string identifying this OAuth Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: OAuthSourcePropertyMapping Viewset
      operationId: propertymappings_source_oauth_retrieve
      parameters:
      - description: A UUID string identifying this OAuth Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: OAuthSourcePropertyMapping Viewset
      operationId: propertymappings_source_oauth_partial_update
      parameters:
      - description: A UUID string identifying this OAuth Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOAuthSourcePropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: OAuthSourcePropertyMapping Viewset
      operationId: propertymappings_source_oauth_update
      parameters:
      - description: A UUID string identifying this OAuth Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthSourcePropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/oauth/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_source_oauth_used_by_list
      parameters:
      - description: A UUID string identifying this OAuth Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/plex/:
    get:
      description: PlexSourcePropertyMapping Viewset
      operationId: propertymappings_source_plex_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlexSourcePropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: PlexSourcePropertyMapping Viewset
      operationId: propertymappings_source_plex_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlexSourcePropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/plex/{pm_uuid}/:
    delete:
      description: PlexSourcePropertyMapping Viewset
      operationId: propertymappings_source_plex_destroy
      parameters:
      - description: A UUID string identifying this Plex Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: PlexSourcePropertyMapping Viewset
      operationId: propertymappings_source_plex_retrieve
      parameters:
      - description: A UUID string identifying this Plex Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: PlexSourcePropertyMapping Viewset
      operationId: propertymappings_source_plex_partial_update
      parameters:
      - description: A UUID string identifying this Plex Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlexSourcePropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: PlexSourcePropertyMapping Viewset
      operationId: propertymappings_source_plex_update
      parameters:
      - description: A UUID string identifying this Plex Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlexSourcePropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/plex/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_source_plex_used_by_list
      parameters:
      - description: A UUID string identifying this Plex Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/saml/:
    get:
      description: SAMLSourcePropertyMapping Viewset
      operationId: propertymappings_source_saml_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSAMLSourcePropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: SAMLSourcePropertyMapping Viewset
      operationId: propertymappings_source_saml_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLSourcePropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/saml/{pm_uuid}/:
    delete:
      description: SAMLSourcePropertyMapping Viewset
      operationId: propertymappings_source_saml_destroy
      parameters:
      - description: A UUID string identifying this SAML Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: SAMLSourcePropertyMapping Viewset
      operationId: propertymappings_source_saml_retrieve
      parameters:
      - description: A UUID string identifying this SAML Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: SAMLSourcePropertyMapping Viewset
      operationId: propertymappings_source_saml_partial_update
      parameters:
      - description: A UUID string identifying this SAML Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSAMLSourcePropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: SAMLSourcePropertyMapping Viewset
      operationId: propertymappings_source_saml_update
      parameters:
      - description: A UUID string identifying this SAML Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLSourcePropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/saml/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_source_saml_used_by_list
      parameters:
      - description: A UUID string identifying this SAML Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/scim/:
    get:
      description: SCIMSourcePropertyMapping Viewset
      operationId: propertymappings_source_scim_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: managed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMSourcePropertyMappingList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    post:
      description: SCIMSourcePropertyMapping Viewset
      operationId: propertymappings_source_scim_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourcePropertyMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/scim/{pm_uuid}/:
    delete:
      description: SCIMSourcePropertyMapping Viewset
      operationId: propertymappings_source_scim_destroy
      parameters:
      - description: A UUID string identifying this SCIM Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    get:
      description: SCIMSourcePropertyMapping Viewset
      operationId: propertymappings_source_scim_retrieve
      parameters:
      - description: A UUID string identifying this SCIM Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    patch:
      description: SCIMSourcePropertyMapping Viewset
      operationId: propertymappings_source_scim_partial_update
      parameters:
      - description: A UUID string identifying this SCIM Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSCIMSourcePropertyMappingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
    put:
      description: SCIMSourcePropertyMapping Viewset
      operationId: propertymappings_source_scim_update
      parameters:
      - description: A UUID string identifying this SCIM Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourcePropertyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourcePropertyMapping'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /propertymappings/source/scim/{pm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: propertymappings_source_scim_used_by_list
      parameters:
      - description: A UUID string identifying this SCIM Source Property Mapping.
        explode: false
        in: path
        name: pm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - propertymappings
  /providers/all/:
    get:
      description: Provider Viewset
      operationId: providers_all_list
      parameters:
      - explode: true
        in: query
        name: application__isnull
        required: false
        schema:
          type: boolean
        style: form
      - description: "When not set all providers are returned. When set to true, only\
          \ backchannel providers are returned. When set to false, backchannel providers\
          \ are excluded"
        explode: true
        in: query
        name: backchannel
        required: false
        schema:
          type: boolean
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/all/{id}/:
    delete:
      description: Provider Viewset
      operationId: providers_all_destroy
      parameters:
      - description: A unique integer value identifying this provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: Provider Viewset
      operationId: providers_all_retrieve
      parameters:
      - description: A unique integer value identifying this provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/all/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_all_used_by_list
      parameters:
      - description: A unique integer value identifying this provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/all/types/:
    get:
      description: Get all creatable types
      operationId: providers_all_types_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace/:
    get:
      description: GoogleWorkspaceProvider Viewset
      operationId: providers_google_workspace_list
      parameters:
      - explode: true
        in: query
        name: delegated_subject
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: exclude_users_service_account
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: filter_group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoogleWorkspaceProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: GoogleWorkspaceProvider Viewset
      operationId: providers_google_workspace_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleWorkspaceProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace/{id}/:
    delete:
      description: GoogleWorkspaceProvider Viewset
      operationId: providers_google_workspace_destroy
      parameters:
      - description: A unique integer value identifying this Google Workspace Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: GoogleWorkspaceProvider Viewset
      operationId: providers_google_workspace_retrieve
      parameters:
      - description: A unique integer value identifying this Google Workspace Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: GoogleWorkspaceProvider Viewset
      operationId: providers_google_workspace_partial_update
      parameters:
      - description: A unique integer value identifying this Google Workspace Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoogleWorkspaceProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: GoogleWorkspaceProvider Viewset
      operationId: providers_google_workspace_update
      parameters:
      - description: A unique integer value identifying this Google Workspace Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleWorkspaceProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace/{id}/sync/object/:
    post:
      description: Sync/Re-sync a single user/group object
      operationId: providers_google_workspace_sync_object_create
      parameters:
      - description: A unique integer value identifying this Google Workspace Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncObjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncObjectResult'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace/{id}/sync/status/:
    get:
      description: Get provider's sync status
      operationId: providers_google_workspace_sync_status_retrieve
      parameters:
      - description: A unique integer value identifying this Google Workspace Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatus'
          description: ""
        "404":
          description: Task not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_google_workspace_used_by_list
      parameters:
      - description: A unique integer value identifying this Google Workspace Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace_groups/:
    get:
      description: GoogleWorkspaceProviderGroup Viewset
      operationId: providers_google_workspace_groups_list
      parameters:
      - explode: true
        in: query
        name: group__group_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: group__name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider__id
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoogleWorkspaceProviderGroupList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: GoogleWorkspaceProviderGroup Viewset
      operationId: providers_google_workspace_groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleWorkspaceProviderGroupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace_groups/{id}/:
    delete:
      description: GoogleWorkspaceProviderGroup Viewset
      operationId: providers_google_workspace_groups_destroy
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: GoogleWorkspaceProviderGroup Viewset
      operationId: providers_google_workspace_groups_retrieve
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace_groups/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_google_workspace_groups_used_by_list
      parameters:
      - description: A UUID string identifying this Google Workspace Provider Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace_users/:
    get:
      description: GoogleWorkspaceProviderUser Viewset
      operationId: providers_google_workspace_users_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider__id
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user__id
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: user__username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoogleWorkspaceProviderUserList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: GoogleWorkspaceProviderUser Viewset
      operationId: providers_google_workspace_users_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleWorkspaceProviderUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace_users/{id}/:
    delete:
      description: GoogleWorkspaceProviderUser Viewset
      operationId: providers_google_workspace_users_destroy
      parameters:
      - description: A UUID string identifying this Google Workspace Provider User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: GoogleWorkspaceProviderUser Viewset
      operationId: providers_google_workspace_users_retrieve
      parameters:
      - description: A UUID string identifying this Google Workspace Provider User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleWorkspaceProviderUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/google_workspace_users/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_google_workspace_users_used_by_list
      parameters:
      - description: A UUID string identifying this Google Workspace Provider User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/ldap/:
    get:
      description: LDAPProvider Viewset
      operationId: providers_ldap_list
      parameters:
      - explode: true
        in: query
        name: application__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: authorization_flow__slug__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: base_dn__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: certificate__kp_uuid__iexact
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: certificate__name__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: gid_start_number__iexact
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tls_server_name__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: uid_start_number__iexact
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLDAPProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: LDAPProvider Viewset
      operationId: providers_ldap_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/ldap/{id}/:
    delete:
      description: LDAPProvider Viewset
      operationId: providers_ldap_destroy
      parameters:
      - description: A unique integer value identifying this LDAP Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: LDAPProvider Viewset
      operationId: providers_ldap_retrieve
      parameters:
      - description: A unique integer value identifying this LDAP Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: LDAPProvider Viewset
      operationId: providers_ldap_partial_update
      parameters:
      - description: A unique integer value identifying this LDAP Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLDAPProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: LDAPProvider Viewset
      operationId: providers_ldap_update
      parameters:
      - description: A unique integer value identifying this LDAP Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/ldap/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_ldap_used_by_list
      parameters:
      - description: A unique integer value identifying this LDAP Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra/:
    get:
      description: MicrosoftEntraProvider Viewset
      operationId: providers_microsoft_entra_list
      parameters:
      - explode: true
        in: query
        name: exclude_users_service_account
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: filter_group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMicrosoftEntraProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: MicrosoftEntraProvider Viewset
      operationId: providers_microsoft_entra_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra/{id}/:
    delete:
      description: MicrosoftEntraProvider Viewset
      operationId: providers_microsoft_entra_destroy
      parameters:
      - description: A unique integer value identifying this Microsoft Entra Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: MicrosoftEntraProvider Viewset
      operationId: providers_microsoft_entra_retrieve
      parameters:
      - description: A unique integer value identifying this Microsoft Entra Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: MicrosoftEntraProvider Viewset
      operationId: providers_microsoft_entra_partial_update
      parameters:
      - description: A unique integer value identifying this Microsoft Entra Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMicrosoftEntraProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: MicrosoftEntraProvider Viewset
      operationId: providers_microsoft_entra_update
      parameters:
      - description: A unique integer value identifying this Microsoft Entra Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra/{id}/sync/object/:
    post:
      description: Sync/Re-sync a single user/group object
      operationId: providers_microsoft_entra_sync_object_create
      parameters:
      - description: A unique integer value identifying this Microsoft Entra Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncObjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncObjectResult'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra/{id}/sync/status/:
    get:
      description: Get provider's sync status
      operationId: providers_microsoft_entra_sync_status_retrieve
      parameters:
      - description: A unique integer value identifying this Microsoft Entra Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatus'
          description: ""
        "404":
          description: Task not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_microsoft_entra_used_by_list
      parameters:
      - description: A unique integer value identifying this Microsoft Entra Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra_groups/:
    get:
      description: MicrosoftEntraProviderGroup Viewset
      operationId: providers_microsoft_entra_groups_list
      parameters:
      - explode: true
        in: query
        name: group__group_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: group__name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider__id
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMicrosoftEntraProviderGroupList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: MicrosoftEntraProviderGroup Viewset
      operationId: providers_microsoft_entra_groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraProviderGroupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra_groups/{id}/:
    delete:
      description: MicrosoftEntraProviderGroup Viewset
      operationId: providers_microsoft_entra_groups_destroy
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: MicrosoftEntraProviderGroup Viewset
      operationId: providers_microsoft_entra_groups_retrieve
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra_groups/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_microsoft_entra_groups_used_by_list
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider Group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra_users/:
    get:
      description: MicrosoftEntraProviderUser Viewset
      operationId: providers_microsoft_entra_users_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider__id
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user__id
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: user__username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMicrosoftEntraProviderUserList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: MicrosoftEntraProviderUser Viewset
      operationId: providers_microsoft_entra_users_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraProviderUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra_users/{id}/:
    delete:
      description: MicrosoftEntraProviderUser Viewset
      operationId: providers_microsoft_entra_users_destroy
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: MicrosoftEntraProviderUser Viewset
      operationId: providers_microsoft_entra_users_retrieve
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftEntraProviderUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/microsoft_entra_users/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_microsoft_entra_users_used_by_list
      parameters:
      - description: A UUID string identifying this Microsoft Entra Provider User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/oauth2/:
    get:
      description: OAuth2Provider Viewset
      operationId: providers_oauth2_list
      parameters:
      - explode: true
        in: query
        name: access_code_validity
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: access_token_validity
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: application
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: authorization_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - description: |+
          Confidential clients are capable of maintaining the confidentiality of their credentials. Public clients are incapable

        explode: true
        in: query
        name: client_type
        required: false
        schema:
          enum:
          - confidential
          - public
          type: string
        style: form
      - explode: true
        in: query
        name: include_claims_in_id_token
        required: false
        schema:
          type: boolean
        style: form
      - description: |+
          Configure how the issuer field of the ID Token should be filled.

        explode: true
        in: query
        name: issuer_mode
        required: false
        schema:
          enum:
          - global
          - per_provider
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: property_mappings
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: refresh_token_validity
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: signing_key
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: |+
          Configure what data should be used as unique User Identifier. For most cases, the default should be fine.

        explode: true
        in: query
        name: sub_mode
        required: false
        schema:
          enum:
          - hashed_user_id
          - user_email
          - user_id
          - user_upn
          - user_username
          - user_uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOAuth2ProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: OAuth2Provider Viewset
      operationId: providers_oauth2_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Provider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/oauth2/{id}/:
    delete:
      description: OAuth2Provider Viewset
      operationId: providers_oauth2_destroy
      parameters:
      - description: A unique integer value identifying this OAuth2/OpenID Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: OAuth2Provider Viewset
      operationId: providers_oauth2_retrieve
      parameters:
      - description: A unique integer value identifying this OAuth2/OpenID Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Provider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: OAuth2Provider Viewset
      operationId: providers_oauth2_partial_update
      parameters:
      - description: A unique integer value identifying this OAuth2/OpenID Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOAuth2ProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Provider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: OAuth2Provider Viewset
      operationId: providers_oauth2_update
      parameters:
      - description: A unique integer value identifying this OAuth2/OpenID Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Provider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/oauth2/{id}/preview_user/:
    get:
      description: Preview user data for provider
      operationId: providers_oauth2_preview_user_retrieve
      parameters:
      - explode: true
        in: query
        name: for_user
        required: false
        schema:
          type: integer
        style: form
      - description: A unique integer value identifying this OAuth2/OpenID Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyMappingPreview'
          description: ""
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/oauth2/{id}/setup_urls/:
    get:
      description: Get Providers setup URLs
      operationId: providers_oauth2_setup_urls_retrieve
      parameters:
      - description: A unique integer value identifying this OAuth2/OpenID Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ProviderSetupURLs'
          description: ""
        "404":
          description: Provider has no application assigned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/oauth2/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_oauth2_used_by_list
      parameters:
      - description: A unique integer value identifying this OAuth2/OpenID Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/proxy/:
    get:
      description: ProxyProvider Viewset
      operationId: providers_proxy_list
      parameters:
      - explode: true
        in: query
        name: application__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: authorization_flow__slug__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: basic_auth_enabled__iexact
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: basic_auth_password_attribute__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: basic_auth_user_attribute__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: certificate__kp_uuid__iexact
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: certificate__name__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cookie_domain__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: external_host__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: internal_host__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: internal_host_ssl_validation__iexact
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: mode__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: property_mappings__iexact
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: skip_path_regex__iexact
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProxyProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: ProxyProvider Viewset
      operationId: providers_proxy_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/proxy/{id}/:
    delete:
      description: ProxyProvider Viewset
      operationId: providers_proxy_destroy
      parameters:
      - description: A unique integer value identifying this Proxy Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: ProxyProvider Viewset
      operationId: providers_proxy_retrieve
      parameters:
      - description: A unique integer value identifying this Proxy Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: ProxyProvider Viewset
      operationId: providers_proxy_partial_update
      parameters:
      - description: A unique integer value identifying this Proxy Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProxyProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: ProxyProvider Viewset
      operationId: providers_proxy_update
      parameters:
      - description: A unique integer value identifying this Proxy Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/proxy/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_proxy_used_by_list
      parameters:
      - description: A unique integer value identifying this Proxy Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/rac/:
    get:
      description: RACProvider Viewset
      operationId: providers_rac_list
      parameters:
      - explode: true
        in: query
        name: application__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRACProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: RACProvider Viewset
      operationId: providers_rac_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RACProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/rac/{id}/:
    delete:
      description: RACProvider Viewset
      operationId: providers_rac_destroy
      parameters:
      - description: A unique integer value identifying this RAC Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: RACProvider Viewset
      operationId: providers_rac_retrieve
      parameters:
      - description: A unique integer value identifying this RAC Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: RACProvider Viewset
      operationId: providers_rac_partial_update
      parameters:
      - description: A unique integer value identifying this RAC Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRACProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: RACProvider Viewset
      operationId: providers_rac_update
      parameters:
      - description: A unique integer value identifying this RAC Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RACProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RACProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/rac/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_rac_used_by_list
      parameters:
      - description: A unique integer value identifying this RAC Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/radius/:
    get:
      description: RadiusProvider Viewset
      operationId: providers_radius_list
      parameters:
      - explode: true
        in: query
        name: application__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: authorization_flow__slug__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_networks__iexact
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRadiusProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: RadiusProvider Viewset
      operationId: providers_radius_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/radius/{id}/:
    delete:
      description: RadiusProvider Viewset
      operationId: providers_radius_destroy
      parameters:
      - description: A unique integer value identifying this Radius Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: RadiusProvider Viewset
      operationId: providers_radius_retrieve
      parameters:
      - description: A unique integer value identifying this Radius Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: RadiusProvider Viewset
      operationId: providers_radius_partial_update
      parameters:
      - description: A unique integer value identifying this Radius Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRadiusProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: RadiusProvider Viewset
      operationId: providers_radius_update
      parameters:
      - description: A unique integer value identifying this Radius Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/radius/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_radius_used_by_list
      parameters:
      - description: A unique integer value identifying this Radius Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/saml/:
    get:
      description: SAMLProvider Viewset
      operationId: providers_saml_list
      parameters:
      - explode: true
        in: query
        name: acs_url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: assertion_valid_not_before
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: assertion_valid_not_on_or_after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: audience
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: authentication_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: authn_context_class_ref_mapping
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: authorization_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: backchannel_application
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: default_relay_state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: digest_algorithm
        required: false
        schema:
          enum:
          - http://www.w3.org/2000/09/xmldsig#sha1
          - http://www.w3.org/2001/04/xmldsig-more#sha384
          - http://www.w3.org/2001/04/xmlenc#sha256
          - http://www.w3.org/2001/04/xmlenc#sha512
          type: string
        style: form
      - explode: true
        in: query
        name: encryption_kp
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: invalidation_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: is_backchannel
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: issuer
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name_id_mapping
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: property_mappings
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: session_valid_not_on_or_after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sign_assertion
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sign_response
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: signature_algorithm
        required: false
        schema:
          enum:
          - http://www.w3.org/2000/09/xmldsig#dsa-sha1
          - http://www.w3.org/2000/09/xmldsig#rsa-sha1
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512
          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha256
          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha384
          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha512
          type: string
        style: form
      - explode: true
        in: query
        name: signing_kp
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: |+
          This determines how authentik sends the response back to the Service Provider.

        explode: true
        in: query
        name: sp_binding
        required: false
        schema:
          enum:
          - post
          - redirect
          title: Service Provider Binding
          type: string
        style: form
      - explode: true
        in: query
        name: verification_kp
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSAMLProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: SAMLProvider Viewset
      operationId: providers_saml_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/saml/{id}/:
    delete:
      description: SAMLProvider Viewset
      operationId: providers_saml_destroy
      parameters:
      - description: A unique integer value identifying this SAML Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: SAMLProvider Viewset
      operationId: providers_saml_retrieve
      parameters:
      - description: A unique integer value identifying this SAML Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: SAMLProvider Viewset
      operationId: providers_saml_partial_update
      parameters:
      - description: A unique integer value identifying this SAML Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSAMLProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: SAMLProvider Viewset
      operationId: providers_saml_update
      parameters:
      - description: A unique integer value identifying this SAML Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/saml/{id}/metadata/:
    get:
      description: Return metadata as XML string
      operationId: providers_saml_metadata_retrieve
      parameters:
      - explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      - description: Optionally force the metadata to only include one binding.
        explode: true
        in: query
        name: force_binding
        required: false
        schema:
          enum:
          - urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
          - urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
          type: string
        style: form
      - description: A unique integer value identifying this SAML Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLMetadata'
            application/xml:
              schema:
                $ref: '#/components/schemas/SAMLMetadata'
          description: ""
        "404":
          description: Provider has no application assigned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      - {}
      tags:
      - providers
  /providers/saml/{id}/preview_user/:
    get:
      description: Preview user data for provider
      operationId: providers_saml_preview_user_retrieve
      parameters:
      - explode: true
        in: query
        name: for_user
        required: false
        schema:
          type: integer
        style: form
      - description: A unique integer value identifying this SAML Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyMappingPreview'
          description: ""
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/saml/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_saml_used_by_list
      parameters:
      - description: A unique integer value identifying this SAML Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/saml/import_metadata/:
    post:
      description: Create provider from SAML Metadata
      operationId: providers_saml_import_metadata_create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SAMLProviderImportRequest'
        required: true
      responses:
        "204":
          description: Successfully imported provider
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim/:
    get:
      description: SCIMProvider Viewset
      operationId: providers_scim_list
      parameters:
      - explode: true
        in: query
        name: exclude_users_service_account
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: filter_group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: SCIMProvider Viewset
      operationId: providers_scim_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim/{id}/:
    delete:
      description: SCIMProvider Viewset
      operationId: providers_scim_destroy
      parameters:
      - description: A unique integer value identifying this SCIM Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: SCIMProvider Viewset
      operationId: providers_scim_retrieve
      parameters:
      - description: A unique integer value identifying this SCIM Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: SCIMProvider Viewset
      operationId: providers_scim_partial_update
      parameters:
      - description: A unique integer value identifying this SCIM Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSCIMProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: SCIMProvider Viewset
      operationId: providers_scim_update
      parameters:
      - description: A unique integer value identifying this SCIM Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim/{id}/sync/object/:
    post:
      description: Sync/Re-sync a single user/group object
      operationId: providers_scim_sync_object_create
      parameters:
      - description: A unique integer value identifying this SCIM Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncObjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncObjectResult'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim/{id}/sync/status/:
    get:
      description: Get provider's sync status
      operationId: providers_scim_sync_status_retrieve
      parameters:
      - description: A unique integer value identifying this SCIM Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatus'
          description: ""
        "404":
          description: Task not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_scim_used_by_list
      parameters:
      - description: A unique integer value identifying this SCIM Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim_groups/:
    get:
      description: SCIMProviderGroup Viewset
      operationId: providers_scim_groups_list
      parameters:
      - explode: true
        in: query
        name: group__group_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: group__name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider__id
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMProviderGroupList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: SCIMProviderGroup Viewset
      operationId: providers_scim_groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMProviderGroupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProviderGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim_groups/{id}/:
    delete:
      description: SCIMProviderGroup Viewset
      operationId: providers_scim_groups_destroy
      parameters:
      - description: A UUID string identifying this scim provider group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: SCIMProviderGroup Viewset
      operationId: providers_scim_groups_retrieve
      parameters:
      - description: A UUID string identifying this scim provider group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProviderGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim_groups/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_scim_groups_used_by_list
      parameters:
      - description: A UUID string identifying this scim provider group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim_users/:
    get:
      description: SCIMProviderUser Viewset
      operationId: providers_scim_users_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider__id
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user__id
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: user__username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMProviderUserList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: SCIMProviderUser Viewset
      operationId: providers_scim_users_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMProviderUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProviderUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim_users/{id}/:
    delete:
      description: SCIMProviderUser Viewset
      operationId: providers_scim_users_destroy
      parameters:
      - description: A UUID string identifying this scim provider user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: SCIMProviderUser Viewset
      operationId: providers_scim_users_retrieve
      parameters:
      - description: A UUID string identifying this scim provider user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMProviderUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/scim_users/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_scim_users_used_by_list
      parameters:
      - description: A UUID string identifying this scim provider user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/ssf/:
    get:
      description: SSFProvider Viewset
      operationId: providers_ssf_list
      parameters:
      - explode: true
        in: query
        name: application__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name__iexact
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSSFProviderList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    post:
      description: SSFProvider Viewset
      operationId: providers_ssf_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSFProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSFProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/ssf/{id}/:
    delete:
      description: SSFProvider Viewset
      operationId: providers_ssf_destroy
      parameters:
      - description: A unique integer value identifying this Shared Signals Framework
          Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    get:
      description: SSFProvider Viewset
      operationId: providers_ssf_retrieve
      parameters:
      - description: A unique integer value identifying this Shared Signals Framework
          Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSFProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    patch:
      description: SSFProvider Viewset
      operationId: providers_ssf_partial_update
      parameters:
      - description: A unique integer value identifying this Shared Signals Framework
          Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSSFProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSFProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
    put:
      description: SSFProvider Viewset
      operationId: providers_ssf_update
      parameters:
      - description: A unique integer value identifying this Shared Signals Framework
          Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSFProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSFProvider'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /providers/ssf/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: providers_ssf_used_by_list
      parameters:
      - description: A unique integer value identifying this Shared Signals Framework
          Provider.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - providers
  /rac/connection_tokens/:
    get:
      description: ConnectionToken Viewset
      operationId: rac_connection_tokens_list
      parameters:
      - explode: true
        in: query
        name: endpoint
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: session__user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConnectionTokenList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
  /rac/connection_tokens/{connection_token_uuid}/:
    delete:
      description: ConnectionToken Viewset
      operationId: rac_connection_tokens_destroy
      parameters:
      - description: A UUID string identifying this RAC Connection token.
        explode: false
        in: path
        name: connection_token_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
    get:
      description: ConnectionToken Viewset
      operationId: rac_connection_tokens_retrieve
      parameters:
      - description: A UUID string identifying this RAC Connection token.
        explode: false
        in: path
        name: connection_token_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionToken'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
    patch:
      description: ConnectionToken Viewset
      operationId: rac_connection_tokens_partial_update
      parameters:
      - description: A UUID string identifying this RAC Connection token.
        explode: false
        in: path
        name: connection_token_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConnectionTokenRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionToken'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
    put:
      description: ConnectionToken Viewset
      operationId: rac_connection_tokens_update
      parameters:
      - description: A UUID string identifying this RAC Connection token.
        explode: false
        in: path
        name: connection_token_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionToken'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
  /rac/connection_tokens/{connection_token_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: rac_connection_tokens_used_by_list
      parameters:
      - description: A UUID string identifying this RAC Connection token.
        explode: false
        in: path
        name: connection_token_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
  /rac/endpoints/:
    get:
      description: List accessible endpoints
      operationId: rac_endpoints_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: superuser_full_list
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEndpointList'
          description: ""
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
    post:
      description: Endpoint Viewset
      operationId: rac_endpoints_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
  /rac/endpoints/{pbm_uuid}/:
    delete:
      description: Endpoint Viewset
      operationId: rac_endpoints_destroy
      parameters:
      - description: A UUID string identifying this RAC Endpoint.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
    get:
      description: Endpoint Viewset
      operationId: rac_endpoints_retrieve
      parameters:
      - description: A UUID string identifying this RAC Endpoint.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
    patch:
      description: Endpoint Viewset
      operationId: rac_endpoints_partial_update
      parameters:
      - description: A UUID string identifying this RAC Endpoint.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEndpointRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
    put:
      description: Endpoint Viewset
      operationId: rac_endpoints_update
      parameters:
      - description: A UUID string identifying this RAC Endpoint.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
  /rac/endpoints/{pbm_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: rac_endpoints_used_by_list
      parameters:
      - description: A UUID string identifying this RAC Endpoint.
        explode: false
        in: path
        name: pbm_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rac
  /rbac/initial_permissions/:
    get:
      description: InitialPermissions viewset
      operationId: rbac_initial_permissions_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInitialPermissionsList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    post:
      description: InitialPermissions viewset
      operationId: rbac_initial_permissions_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitialPermissionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitialPermissions'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/initial_permissions/{id}/:
    delete:
      description: InitialPermissions viewset
      operationId: rbac_initial_permissions_destroy
      parameters:
      - description: A unique integer value identifying this Initial Permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    get:
      description: InitialPermissions viewset
      operationId: rbac_initial_permissions_retrieve
      parameters:
      - description: A unique integer value identifying this Initial Permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitialPermissions'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    patch:
      description: InitialPermissions viewset
      operationId: rbac_initial_permissions_partial_update
      parameters:
      - description: A unique integer value identifying this Initial Permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInitialPermissionsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitialPermissions'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    put:
      description: InitialPermissions viewset
      operationId: rbac_initial_permissions_update
      parameters:
      - description: A unique integer value identifying this Initial Permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitialPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitialPermissions'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/initial_permissions/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: rbac_initial_permissions_used_by_list
      parameters:
      - description: A unique integer value identifying this Initial Permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/:
    get:
      description: "Read-only list of all permissions, filterable by model and app"
      operationId: rbac_permissions_list
      parameters:
      - explode: true
        in: query
        name: codename
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: content_type__app_label
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: content_type__model
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: role
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/{id}/:
    get:
      description: "Read-only list of all permissions, filterable by model and app"
      operationId: rbac_permissions_retrieve
      parameters:
      - description: A unique integer value identifying this permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/assigned_by_roles/:
    get:
      description: Get assigned object permissions for a single object
      operationId: rbac_permissions_assigned_by_roles_list
      parameters:
      - explode: true
        in: query
        name: model
        required: true
        schema:
          enum:
          - authentik_blueprints.blueprintinstance
          - authentik_brands.brand
          - authentik_core.application
          - authentik_core.applicationentitlement
          - authentik_core.group
          - authentik_core.token
          - authentik_core.user
          - authentik_crypto.certificatekeypair
          - authentik_enterprise.license
          - authentik_events.event
          - authentik_events.notification
          - authentik_events.notificationrule
          - authentik_events.notificationtransport
          - authentik_events.notificationwebhookmapping
          - authentik_flows.flow
          - authentik_flows.flowstagebinding
          - authentik_outposts.dockerserviceconnection
          - authentik_outposts.kubernetesserviceconnection
          - authentik_outposts.outpost
          - authentik_policies.policybinding
          - authentik_policies_dummy.dummypolicy
          - authentik_policies_event_matcher.eventmatcherpolicy
          - authentik_policies_expiry.passwordexpirypolicy
          - authentik_policies_expression.expressionpolicy
          - authentik_policies_geoip.geoippolicy
          - authentik_policies_password.passwordpolicy
          - authentik_policies_reputation.reputationpolicy
          - authentik_policies_unique_password.uniquepasswordpolicy
          - authentik_providers_google_workspace.googleworkspaceprovider
          - authentik_providers_google_workspace.googleworkspaceprovidermapping
          - authentik_providers_ldap.ldapprovider
          - authentik_providers_microsoft_entra.microsoftentraprovider
          - authentik_providers_microsoft_entra.microsoftentraprovidermapping
          - authentik_providers_oauth2.oauth2provider
          - authentik_providers_oauth2.scopemapping
          - authentik_providers_proxy.proxyprovider
          - authentik_providers_rac.endpoint
          - authentik_providers_rac.racpropertymapping
          - authentik_providers_rac.racprovider
          - authentik_providers_radius.radiusprovider
          - authentik_providers_radius.radiusproviderpropertymapping
          - authentik_providers_saml.samlpropertymapping
          - authentik_providers_saml.samlprovider
          - authentik_providers_scim.scimmapping
          - authentik_providers_scim.scimprovider
          - authentik_providers_ssf.ssfprovider
          - authentik_rbac.initialpermissions
          - authentik_rbac.role
          - authentik_sources_kerberos.groupkerberossourceconnection
          - authentik_sources_kerberos.kerberossource
          - authentik_sources_kerberos.kerberossourcepropertymapping
          - authentik_sources_kerberos.userkerberossourceconnection
          - authentik_sources_ldap.groupldapsourceconnection
          - authentik_sources_ldap.ldapsource
          - authentik_sources_ldap.ldapsourcepropertymapping
          - authentik_sources_ldap.userldapsourceconnection
          - authentik_sources_oauth.groupoauthsourceconnection
          - authentik_sources_oauth.oauthsource
          - authentik_sources_oauth.oauthsourcepropertymapping
          - authentik_sources_oauth.useroauthsourceconnection
          - authentik_sources_plex.groupplexsourceconnection
          - authentik_sources_plex.plexsource
          - authentik_sources_plex.plexsourcepropertymapping
          - authentik_sources_plex.userplexsourceconnection
          - authentik_sources_saml.groupsamlsourceconnection
          - authentik_sources_saml.samlsource
          - authentik_sources_saml.samlsourcepropertymapping
          - authentik_sources_saml.usersamlsourceconnection
          - authentik_sources_scim.scimsource
          - authentik_sources_scim.scimsourcepropertymapping
          - authentik_stages_authenticator_duo.authenticatorduostage
          - authentik_stages_authenticator_duo.duodevice
          - authentik_stages_authenticator_email.authenticatoremailstage
          - authentik_stages_authenticator_email.emaildevice
          - authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage
          - authentik_stages_authenticator_sms.authenticatorsmsstage
          - authentik_stages_authenticator_sms.smsdevice
          - authentik_stages_authenticator_static.authenticatorstaticstage
          - authentik_stages_authenticator_static.staticdevice
          - authentik_stages_authenticator_totp.authenticatortotpstage
          - authentik_stages_authenticator_totp.totpdevice
          - authentik_stages_authenticator_validate.authenticatorvalidatestage
          - authentik_stages_authenticator_webauthn.authenticatorwebauthnstage
          - authentik_stages_authenticator_webauthn.webauthndevice
          - authentik_stages_captcha.captchastage
          - authentik_stages_consent.consentstage
          - authentik_stages_consent.userconsent
          - authentik_stages_deny.denystage
          - authentik_stages_dummy.dummystage
          - authentik_stages_email.emailstage
          - authentik_stages_identification.identificationstage
          - authentik_stages_invitation.invitation
          - authentik_stages_invitation.invitationstage
          - authentik_stages_mtls.mutualtlsstage
          - authentik_stages_password.passwordstage
          - authentik_stages_prompt.prompt
          - authentik_stages_prompt.promptstage
          - authentik_stages_redirect.redirectstage
          - authentik_stages_source.sourcestage
          - authentik_stages_user_delete.userdeletestage
          - authentik_stages_user_login.userloginstage
          - authentik_stages_user_logout.userlogoutstage
          - authentik_stages_user_write.userwritestage
          - authentik_tenants.domain
          type: string
        style: form
      - explode: true
        in: query
        name: object_pk
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleAssignedObjectPermissionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/assigned_by_roles/{uuid}/assign/:
    post:
      description: |-
        Assign permission(s) to role. When `object_pk` is set, the permissions
        are only assigned to the specific object, otherwise they are assigned globally.
      operationId: rbac_permissions_assigned_by_roles_assign
      parameters:
      - description: A UUID string identifying this Role.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionAssignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionAssignResult'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/assigned_by_roles/{uuid}/unassign/:
    patch:
      description: |-
        Unassign permission(s) to role. When `object_pk` is set, the permissions
        are only assigned to the specific object, otherwise they are assigned globally.
      operationId: rbac_permissions_assigned_by_roles_unassign_partial_update
      parameters:
      - description: A UUID string identifying this Role.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissionAssignRequest'
      responses:
        "204":
          description: Successfully unassigned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/assigned_by_users/:
    get:
      description: Get assigned object permissions for a single object
      operationId: rbac_permissions_assigned_by_users_list
      parameters:
      - explode: true
        in: query
        name: model
        required: true
        schema:
          enum:
          - authentik_blueprints.blueprintinstance
          - authentik_brands.brand
          - authentik_core.application
          - authentik_core.applicationentitlement
          - authentik_core.group
          - authentik_core.token
          - authentik_core.user
          - authentik_crypto.certificatekeypair
          - authentik_enterprise.license
          - authentik_events.event
          - authentik_events.notification
          - authentik_events.notificationrule
          - authentik_events.notificationtransport
          - authentik_events.notificationwebhookmapping
          - authentik_flows.flow
          - authentik_flows.flowstagebinding
          - authentik_outposts.dockerserviceconnection
          - authentik_outposts.kubernetesserviceconnection
          - authentik_outposts.outpost
          - authentik_policies.policybinding
          - authentik_policies_dummy.dummypolicy
          - authentik_policies_event_matcher.eventmatcherpolicy
          - authentik_policies_expiry.passwordexpirypolicy
          - authentik_policies_expression.expressionpolicy
          - authentik_policies_geoip.geoippolicy
          - authentik_policies_password.passwordpolicy
          - authentik_policies_reputation.reputationpolicy
          - authentik_policies_unique_password.uniquepasswordpolicy
          - authentik_providers_google_workspace.googleworkspaceprovider
          - authentik_providers_google_workspace.googleworkspaceprovidermapping
          - authentik_providers_ldap.ldapprovider
          - authentik_providers_microsoft_entra.microsoftentraprovider
          - authentik_providers_microsoft_entra.microsoftentraprovidermapping
          - authentik_providers_oauth2.oauth2provider
          - authentik_providers_oauth2.scopemapping
          - authentik_providers_proxy.proxyprovider
          - authentik_providers_rac.endpoint
          - authentik_providers_rac.racpropertymapping
          - authentik_providers_rac.racprovider
          - authentik_providers_radius.radiusprovider
          - authentik_providers_radius.radiusproviderpropertymapping
          - authentik_providers_saml.samlpropertymapping
          - authentik_providers_saml.samlprovider
          - authentik_providers_scim.scimmapping
          - authentik_providers_scim.scimprovider
          - authentik_providers_ssf.ssfprovider
          - authentik_rbac.initialpermissions
          - authentik_rbac.role
          - authentik_sources_kerberos.groupkerberossourceconnection
          - authentik_sources_kerberos.kerberossource
          - authentik_sources_kerberos.kerberossourcepropertymapping
          - authentik_sources_kerberos.userkerberossourceconnection
          - authentik_sources_ldap.groupldapsourceconnection
          - authentik_sources_ldap.ldapsource
          - authentik_sources_ldap.ldapsourcepropertymapping
          - authentik_sources_ldap.userldapsourceconnection
          - authentik_sources_oauth.groupoauthsourceconnection
          - authentik_sources_oauth.oauthsource
          - authentik_sources_oauth.oauthsourcepropertymapping
          - authentik_sources_oauth.useroauthsourceconnection
          - authentik_sources_plex.groupplexsourceconnection
          - authentik_sources_plex.plexsource
          - authentik_sources_plex.plexsourcepropertymapping
          - authentik_sources_plex.userplexsourceconnection
          - authentik_sources_saml.groupsamlsourceconnection
          - authentik_sources_saml.samlsource
          - authentik_sources_saml.samlsourcepropertymapping
          - authentik_sources_saml.usersamlsourceconnection
          - authentik_sources_scim.scimsource
          - authentik_sources_scim.scimsourcepropertymapping
          - authentik_stages_authenticator_duo.authenticatorduostage
          - authentik_stages_authenticator_duo.duodevice
          - authentik_stages_authenticator_email.authenticatoremailstage
          - authentik_stages_authenticator_email.emaildevice
          - authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage
          - authentik_stages_authenticator_sms.authenticatorsmsstage
          - authentik_stages_authenticator_sms.smsdevice
          - authentik_stages_authenticator_static.authenticatorstaticstage
          - authentik_stages_authenticator_static.staticdevice
          - authentik_stages_authenticator_totp.authenticatortotpstage
          - authentik_stages_authenticator_totp.totpdevice
          - authentik_stages_authenticator_validate.authenticatorvalidatestage
          - authentik_stages_authenticator_webauthn.authenticatorwebauthnstage
          - authentik_stages_authenticator_webauthn.webauthndevice
          - authentik_stages_captcha.captchastage
          - authentik_stages_consent.consentstage
          - authentik_stages_consent.userconsent
          - authentik_stages_deny.denystage
          - authentik_stages_dummy.dummystage
          - authentik_stages_email.emailstage
          - authentik_stages_identification.identificationstage
          - authentik_stages_invitation.invitation
          - authentik_stages_invitation.invitationstage
          - authentik_stages_mtls.mutualtlsstage
          - authentik_stages_password.passwordstage
          - authentik_stages_prompt.prompt
          - authentik_stages_prompt.promptstage
          - authentik_stages_redirect.redirectstage
          - authentik_stages_source.sourcestage
          - authentik_stages_user_delete.userdeletestage
          - authentik_stages_user_login.userloginstage
          - authentik_stages_user_logout.userlogoutstage
          - authentik_stages_user_write.userwritestage
          - authentik_tenants.domain
          type: string
        style: form
      - explode: true
        in: query
        name: object_pk
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAssignedObjectPermissionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/assigned_by_users/{id}/assign/:
    post:
      description: Assign permission(s) to user
      operationId: rbac_permissions_assigned_by_users_assign
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionAssignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionAssignResult'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/assigned_by_users/{id}/unassign/:
    patch:
      description: |-
        Unassign permission(s) to user. When `object_pk` is set, the permissions
        are only assigned to the specific object, otherwise they are assigned globally.
      operationId: rbac_permissions_assigned_by_users_unassign_partial_update
      parameters:
      - description: A unique integer value identifying this User.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissionAssignRequest'
      responses:
        "204":
          description: Successfully unassigned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/roles/:
    get:
      description: Get a role's assigned object permissions
      operationId: rbac_permissions_roles_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExtraRoleObjectPermissionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/roles/{id}/:
    delete:
      description: Get a role's assigned object permissions
      operationId: rbac_permissions_roles_destroy
      parameters:
      - description: A unique integer value identifying this group object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    get:
      description: Get a role's assigned object permissions
      operationId: rbac_permissions_roles_retrieve
      parameters:
      - description: A unique integer value identifying this group object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraRoleObjectPermission'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    patch:
      description: Get a role's assigned object permissions
      operationId: rbac_permissions_roles_partial_update
      parameters:
      - description: A unique integer value identifying this group object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExtraRoleObjectPermissionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraRoleObjectPermission'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    put:
      description: Get a role's assigned object permissions
      operationId: rbac_permissions_roles_update
      parameters:
      - description: A unique integer value identifying this group object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraRoleObjectPermissionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraRoleObjectPermission'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/users/:
    get:
      description: Get a users's assigned object permissions
      operationId: rbac_permissions_users_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExtraUserObjectPermissionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/permissions/users/{id}/:
    delete:
      description: Get a users's assigned object permissions
      operationId: rbac_permissions_users_destroy
      parameters:
      - description: A unique integer value identifying this user object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    get:
      description: Get a users's assigned object permissions
      operationId: rbac_permissions_users_retrieve
      parameters:
      - description: A unique integer value identifying this user object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraUserObjectPermission'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    patch:
      description: Get a users's assigned object permissions
      operationId: rbac_permissions_users_partial_update
      parameters:
      - description: A unique integer value identifying this user object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExtraUserObjectPermissionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraUserObjectPermission'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    put:
      description: Get a users's assigned object permissions
      operationId: rbac_permissions_users_update
      parameters:
      - description: A unique integer value identifying this user object permission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraUserObjectPermissionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraUserObjectPermission'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/roles/:
    get:
      description: Role viewset
      operationId: rbac_roles_list
      parameters:
      - explode: true
        in: query
        name: group__name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    post:
      description: Role viewset
      operationId: rbac_roles_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/roles/{uuid}/:
    delete:
      description: Role viewset
      operationId: rbac_roles_destroy
      parameters:
      - description: A UUID string identifying this Role.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    get:
      description: Role viewset
      operationId: rbac_roles_retrieve
      parameters:
      - description: A UUID string identifying this Role.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    patch:
      description: Role viewset
      operationId: rbac_roles_partial_update
      parameters:
      - description: A UUID string identifying this Role.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
    put:
      description: Role viewset
      operationId: rbac_roles_update
      parameters:
      - description: A UUID string identifying this Role.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /rbac/roles/{uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: rbac_roles_used_by_list
      parameters:
      - description: A UUID string identifying this Role.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - rbac
  /root/config/:
    get:
      description: Retrieve public configuration options
      operationId: root_config_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      - {}
      tags:
      - root
  /schema/:
    get:
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      operationId: schema_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - yaml
          type: string
        style: form
      - explode: true
        in: query
        name: lang
        required: false
        schema:
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                additionalProperties: {}
                type: object
            application/yaml:
              schema:
                additionalProperties: {}
                type: object
            application/vnd.oai.openapi+json:
              schema:
                additionalProperties: {}
                type: object
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      - {}
      tags:
      - schema
  /sources/all/:
    get:
      description: Source Viewset
      operationId: sources_all_list
      parameters:
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSourceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/all/{slug}/:
    delete:
      description: Prevent deletion of built-in sources
      operationId: sources_all_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Source Viewset
      operationId: sources_all_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/all/{slug}/set_icon/:
    post:
      description: Set source icon
      operationId: sources_all_set_icon_create
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/all/{slug}/set_icon_url/:
    post:
      description: Set source icon (as URL)
      operationId: sources_all_set_icon_url_create
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathRequest'
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/all/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_all_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/all/types/:
    get:
      description: Get all creatable types
      operationId: sources_all_types_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/all/user_settings/:
    get:
      description: Get all sources the user can configure
      operationId: sources_all_user_settings_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSetting'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/all/:
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_all_list
      parameters:
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/all/{id}/:
    delete:
      description: Group-source connection Viewset
      operationId: sources_group_connections_all_destroy
      parameters:
      - description: A unique integer value identifying this group source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_all_retrieve
      parameters:
      - description: A unique integer value identifying this group source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Group-source connection Viewset
      operationId: sources_group_connections_all_partial_update
      parameters:
      - description: A unique integer value identifying this group source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Group-source connection Viewset
      operationId: sources_group_connections_all_update
      parameters:
      - description: A unique integer value identifying this group source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/all/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_group_connections_all_used_by_list
      parameters:
      - description: A unique integer value identifying this group source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/kerberos/:
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_kerberos_list
      parameters:
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupKerberosSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Group-source connection Viewset
      operationId: sources_group_connections_kerberos_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupKerberosSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/kerberos/{id}/:
    delete:
      description: Group-source connection Viewset
      operationId: sources_group_connections_kerberos_destroy
      parameters:
      - description: A unique integer value identifying this Group Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_kerberos_retrieve
      parameters:
      - description: A unique integer value identifying this Group Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Group-source connection Viewset
      operationId: sources_group_connections_kerberos_partial_update
      parameters:
      - description: A unique integer value identifying this Group Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupKerberosSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Group-source connection Viewset
      operationId: sources_group_connections_kerberos_update
      parameters:
      - description: A unique integer value identifying this Group Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupKerberosSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/kerberos/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_group_connections_kerberos_used_by_list
      parameters:
      - description: A unique integer value identifying this Group Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/ldap/:
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_ldap_list
      parameters:
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupLDAPSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Group-source connection Viewset
      operationId: sources_group_connections_ldap_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupLDAPSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/ldap/{id}/:
    delete:
      description: Group-source connection Viewset
      operationId: sources_group_connections_ldap_destroy
      parameters:
      - description: A unique integer value identifying this Group LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_ldap_retrieve
      parameters:
      - description: A unique integer value identifying this Group LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Group-source connection Viewset
      operationId: sources_group_connections_ldap_partial_update
      parameters:
      - description: A unique integer value identifying this Group LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupLDAPSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Group-source connection Viewset
      operationId: sources_group_connections_ldap_update
      parameters:
      - description: A unique integer value identifying this Group LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupLDAPSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/ldap/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_group_connections_ldap_used_by_list
      parameters:
      - description: A unique integer value identifying this Group LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/oauth/:
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_oauth_list
      parameters:
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupOAuthSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Group-source connection Viewset
      operationId: sources_group_connections_oauth_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupOAuthSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/oauth/{id}/:
    delete:
      description: Group-source connection Viewset
      operationId: sources_group_connections_oauth_destroy
      parameters:
      - description: A unique integer value identifying this Group OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_oauth_retrieve
      parameters:
      - description: A unique integer value identifying this Group OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Group-source connection Viewset
      operationId: sources_group_connections_oauth_partial_update
      parameters:
      - description: A unique integer value identifying this Group OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupOAuthSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Group-source connection Viewset
      operationId: sources_group_connections_oauth_update
      parameters:
      - description: A unique integer value identifying this Group OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupOAuthSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/oauth/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_group_connections_oauth_used_by_list
      parameters:
      - description: A unique integer value identifying this Group OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/plex/:
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_plex_list
      parameters:
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupPlexSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Group-source connection Viewset
      operationId: sources_group_connections_plex_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPlexSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/plex/{id}/:
    delete:
      description: Group-source connection Viewset
      operationId: sources_group_connections_plex_destroy
      parameters:
      - description: A unique integer value identifying this Group Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_plex_retrieve
      parameters:
      - description: A unique integer value identifying this Group Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Group-source connection Viewset
      operationId: sources_group_connections_plex_partial_update
      parameters:
      - description: A unique integer value identifying this Group Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupPlexSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Group-source connection Viewset
      operationId: sources_group_connections_plex_update
      parameters:
      - description: A unique integer value identifying this Group Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPlexSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/plex/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_group_connections_plex_used_by_list
      parameters:
      - description: A unique integer value identifying this Group Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/saml/:
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_saml_list
      parameters:
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupSAMLSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Group-source connection Viewset
      operationId: sources_group_connections_saml_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSAMLSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/saml/{id}/:
    delete:
      description: Group-source connection Viewset
      operationId: sources_group_connections_saml_destroy
      parameters:
      - description: A unique integer value identifying this Group SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Group-source connection Viewset
      operationId: sources_group_connections_saml_retrieve
      parameters:
      - description: A unique integer value identifying this Group SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Group-source connection Viewset
      operationId: sources_group_connections_saml_partial_update
      parameters:
      - description: A unique integer value identifying this Group SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupSAMLSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Group-source connection Viewset
      operationId: sources_group_connections_saml_update
      parameters:
      - description: A unique integer value identifying this Group SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSAMLSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/group_connections/saml/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_group_connections_saml_used_by_list
      parameters:
      - description: A unique integer value identifying this Group SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/kerberos/:
    get:
      description: Kerberos Source Viewset
      operationId: sources_kerberos_list
      parameters:
      - explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - description: |+
          KAdmin server type

        explode: true
        in: query
        name: kadmin_type
        required: false
        schema:
          enum:
          - Heimdal
          - MIT
          - other
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: password_login_update_internal_password
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: realm
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: spnego_server_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sync_principal
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sync_users
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sync_users_password
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedKerberosSourceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Kerberos Source Viewset
      operationId: sources_kerberos_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosSourceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/kerberos/{slug}/:
    delete:
      description: Kerberos Source Viewset
      operationId: sources_kerberos_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Kerberos Source Viewset
      operationId: sources_kerberos_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Kerberos Source Viewset
      operationId: sources_kerberos_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKerberosSourceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Kerberos Source Viewset
      operationId: sources_kerberos_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosSourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/kerberos/{slug}/sync/status/:
    get:
      description: Get source's sync status
      operationId: sources_kerberos_sync_status_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosSyncStatus'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/kerberos/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_kerberos_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/ldap/:
    get:
      description: LDAP Source Viewset
      operationId: sources_ldap_list
      parameters:
      - explode: true
        in: query
        name: additional_group_dn
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: additional_user_dn
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: base_dn
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: bind_cn
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_certificate
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: delete_not_found_objects
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: group_membership_field
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group_object_filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group_property_mappings
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: lookup_groups_from_user
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: object_uniqueness_field
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: password_login_update_internal_password
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: peer_certificate
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: server_uri
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sni
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: start_tls
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sync_groups
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sync_parent_group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: sync_users
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sync_users_password
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: user_membership_attribute
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_object_filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_property_mappings
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLDAPSourceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: LDAP Source Viewset
      operationId: sources_ldap_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPSourceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/ldap/{slug}/:
    delete:
      description: LDAP Source Viewset
      operationId: sources_ldap_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: LDAP Source Viewset
      operationId: sources_ldap_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: LDAP Source Viewset
      operationId: sources_ldap_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLDAPSourceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: LDAP Source Viewset
      operationId: sources_ldap_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPSourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/ldap/{slug}/debug/:
    get:
      description: Get raw LDAP data to debug
      operationId: sources_ldap_debug_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPDebug'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/ldap/{slug}/sync/status/:
    get:
      description: Get source's sync status
      operationId: sources_ldap_sync_status_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatus'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/ldap/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_ldap_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/oauth/:
    get:
      description: Source Viewset
      operationId: sources_oauth_list
      parameters:
      - explode: true
        in: query
        name: access_token_url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: additional_scopes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: authentication_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: authorization_url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: consumer_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: enrollment_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: |+
          How the source determines if an existing group should be used or a new group created.

        explode: true
        in: query
        name: group_matching_mode
        required: false
        schema:
          enum:
          - identifier
          - name_deny
          - name_link
          type: string
        style: form
      - description: Only return sources with JWKS data
        explode: true
        in: query
        name: has_jwks
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: policy_engine_mode
        required: false
        schema:
          enum:
          - all
          - any
          type: string
        style: form
      - explode: true
        in: query
        name: profile_url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: provider_type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: request_token_url
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      - description: |+
          How the source determines if an existing user should be authenticated or a new user enrolled.

        explode: true
        in: query
        name: user_matching_mode
        required: false
        schema:
          enum:
          - email_deny
          - email_link
          - identifier
          - username_deny
          - username_link
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOAuthSourceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Source Viewset
      operationId: sources_oauth_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthSourceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/oauth/{slug}/:
    delete:
      description: Source Viewset
      operationId: sources_oauth_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Source Viewset
      operationId: sources_oauth_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Source Viewset
      operationId: sources_oauth_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOAuthSourceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Source Viewset
      operationId: sources_oauth_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthSourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/oauth/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_oauth_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/oauth/source_types/:
    get:
      description: |-
        Get all creatable source types. If ?name is set, only returns the type for <name>.
        If <name> isn't found, returns the default type.
      operationId: sources_oauth_source_types_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceType'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/plex/:
    get:
      description: Plex source Viewset
      operationId: sources_plex_list
      parameters:
      - explode: true
        in: query
        name: allow_friends
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: authentication_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: enrollment_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: |+
          How the source determines if an existing group should be used or a new group created.

        explode: true
        in: query
        name: group_matching_mode
        required: false
        schema:
          enum:
          - identifier
          - name_deny
          - name_link
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: policy_engine_mode
        required: false
        schema:
          enum:
          - all
          - any
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      - description: |+
          How the source determines if an existing user should be authenticated or a new user enrolled.

        explode: true
        in: query
        name: user_matching_mode
        required: false
        schema:
          enum:
          - email_deny
          - email_link
          - identifier
          - username_deny
          - username_link
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlexSourceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: Plex source Viewset
      operationId: sources_plex_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlexSourceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/plex/{slug}/:
    delete:
      description: Plex source Viewset
      operationId: sources_plex_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: Plex source Viewset
      operationId: sources_plex_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: Plex source Viewset
      operationId: sources_plex_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlexSourceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: Plex source Viewset
      operationId: sources_plex_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlexSourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlexSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/plex/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_plex_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/plex/redeem_token/:
    post:
      description: |-
        Redeem a plex token, check it's access to resources against what's allowed
        for the source, and redirect to an authentication/enrollment flow.
      operationId: sources_plex_redeem_token_create
      parameters:
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlexTokenRedeemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectChallenge'
          description: ""
        "400":
          description: Token not found
        "403":
          description: Access denied
      security:
      - authentik: []
      - {}
      tags:
      - sources
  /sources/plex/redeem_token_authenticated/:
    post:
      description: "Redeem a plex token for an authenticated user, creating a connection"
      operationId: sources_plex_redeem_token_authenticated_create
      parameters:
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlexTokenRedeemRequest'
        required: true
      responses:
        "204":
          description: No response body
        "400":
          description: Token not found
        "403":
          description: Access denied
      security:
      - authentik: []
      tags:
      - sources
  /sources/saml/:
    get:
      description: SAMLSource Viewset
      operationId: sources_saml_list
      parameters:
      - explode: true
        in: query
        name: allow_idp_initiated
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: authentication_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: binding_type
        required: false
        schema:
          enum:
          - POST
          - POST_AUTO
          - REDIRECT
          type: string
        style: form
      - explode: true
        in: query
        name: digest_algorithm
        required: false
        schema:
          enum:
          - http://www.w3.org/2000/09/xmldsig#sha1
          - http://www.w3.org/2001/04/xmldsig-more#sha384
          - http://www.w3.org/2001/04/xmlenc#sha256
          - http://www.w3.org/2001/04/xmlenc#sha512
          type: string
        style: form
      - explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: enrollment_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: issuer
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: managed
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |+
          NameID Policy sent to the IdP. Can be unset, in which case no Policy is sent.

        explode: true
        in: query
        name: name_id_policy
        required: false
        schema:
          enum:
          - urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
          - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
          - urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName
          - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
          - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: policy_engine_mode
        required: false
        schema:
          enum:
          - all
          - any
          type: string
        style: form
      - explode: true
        in: query
        name: pre_authentication_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: signature_algorithm
        required: false
        schema:
          enum:
          - http://www.w3.org/2000/09/xmldsig#dsa-sha1
          - http://www.w3.org/2000/09/xmldsig#rsa-sha1
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384
          - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512
          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha256
          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha384
          - http://www.w3.org/2001/04/xmldsig-more#rsa-sha512
          type: string
        style: form
      - explode: true
        in: query
        name: signing_kp
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: slo_url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sso_url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: temporary_user_delete_after
        required: false
        schema:
          type: string
        style: form
      - description: |+
          How the source determines if an existing user should be authenticated or a new user enrolled.

        explode: true
        in: query
        name: user_matching_mode
        required: false
        schema:
          enum:
          - email_deny
          - email_link
          - identifier
          - username_deny
          - username_link
          type: string
        style: form
      - explode: true
        in: query
        name: verification_kp
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSAMLSourceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: SAMLSource Viewset
      operationId: sources_saml_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLSourceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/saml/{slug}/:
    delete:
      description: SAMLSource Viewset
      operationId: sources_saml_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: SAMLSource Viewset
      operationId: sources_saml_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: SAMLSource Viewset
      operationId: sources_saml_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSAMLSourceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: SAMLSource Viewset
      operationId: sources_saml_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLSourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/saml/{slug}/metadata/:
    get:
      description: Return metadata as XML string
      operationId: sources_saml_metadata_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLMetadata'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/saml/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_saml_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim/:
    get:
      description: SCIMSource Viewset
      operationId: sources_scim_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pbm_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMSourceList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: SCIMSource Viewset
      operationId: sources_scim_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim/{slug}/:
    delete:
      description: SCIMSource Viewset
      operationId: sources_scim_destroy
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: SCIMSource Viewset
      operationId: sources_scim_retrieve
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: SCIMSource Viewset
      operationId: sources_scim_partial_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSCIMSourceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: SCIMSource Viewset
      operationId: sources_scim_update
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim/{slug}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_scim_used_by_list
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          description: "Internal source name, used in URLs."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim_groups/:
    get:
      description: SCIMSourceGroup Viewset
      operationId: sources_scim_groups_list
      parameters:
      - explode: true
        in: query
        name: group__group_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: group__name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMSourceGroupList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: SCIMSourceGroup Viewset
      operationId: sources_scim_groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourceGroupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim_groups/{id}/:
    delete:
      description: SCIMSourceGroup Viewset
      operationId: sources_scim_groups_destroy
      parameters:
      - description: A unique value identifying this scim source group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: SCIMSourceGroup Viewset
      operationId: sources_scim_groups_retrieve
      parameters:
      - description: A unique value identifying this scim source group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: SCIMSourceGroup Viewset
      operationId: sources_scim_groups_partial_update
      parameters:
      - description: A unique value identifying this scim source group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSCIMSourceGroupRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: SCIMSourceGroup Viewset
      operationId: sources_scim_groups_update
      parameters:
      - description: A unique value identifying this scim source group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourceGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceGroup'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim_groups/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_scim_groups_used_by_list
      parameters:
      - description: A unique value identifying this scim source group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim_users/:
    get:
      description: SCIMSourceUser Viewset
      operationId: sources_scim_users_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user__id
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: user__username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSCIMSourceUserList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: SCIMSourceUser Viewset
      operationId: sources_scim_users_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourceUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim_users/{id}/:
    delete:
      description: SCIMSourceUser Viewset
      operationId: sources_scim_users_destroy
      parameters:
      - description: A unique value identifying this scim source user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: SCIMSourceUser Viewset
      operationId: sources_scim_users_retrieve
      parameters:
      - description: A unique value identifying this scim source user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: SCIMSourceUser Viewset
      operationId: sources_scim_users_partial_update
      parameters:
      - description: A unique value identifying this scim source user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSCIMSourceUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: SCIMSourceUser Viewset
      operationId: sources_scim_users_update
      parameters:
      - description: A unique value identifying this scim source user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SCIMSourceUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SCIMSourceUser'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/scim_users/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_scim_users_used_by_list
      parameters:
      - description: A unique value identifying this scim source user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/all/:
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_all_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/all/{id}/:
    delete:
      description: User-source connection Viewset
      operationId: sources_user_connections_all_destroy
      parameters:
      - description: A unique integer value identifying this user source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_all_retrieve
      parameters:
      - description: A unique integer value identifying this user source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: User-source connection Viewset
      operationId: sources_user_connections_all_partial_update
      parameters:
      - description: A unique integer value identifying this user source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: User-source connection Viewset
      operationId: sources_user_connections_all_update
      parameters:
      - description: A unique integer value identifying this user source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/all/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_user_connections_all_used_by_list
      parameters:
      - description: A unique integer value identifying this user source connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/kerberos/:
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_kerberos_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserKerberosSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: User-source connection Viewset
      operationId: sources_user_connections_kerberos_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserKerberosSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/kerberos/{id}/:
    delete:
      description: User-source connection Viewset
      operationId: sources_user_connections_kerberos_destroy
      parameters:
      - description: A unique integer value identifying this User Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_kerberos_retrieve
      parameters:
      - description: A unique integer value identifying this User Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: User-source connection Viewset
      operationId: sources_user_connections_kerberos_partial_update
      parameters:
      - description: A unique integer value identifying this User Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserKerberosSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: User-source connection Viewset
      operationId: sources_user_connections_kerberos_update
      parameters:
      - description: A unique integer value identifying this User Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserKerberosSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKerberosSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/kerberos/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_user_connections_kerberos_used_by_list
      parameters:
      - description: A unique integer value identifying this User Kerberos Source
          Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/ldap/:
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_ldap_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserLDAPSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: User-source connection Viewset
      operationId: sources_user_connections_ldap_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLDAPSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/ldap/{id}/:
    delete:
      description: User-source connection Viewset
      operationId: sources_user_connections_ldap_destroy
      parameters:
      - description: A unique integer value identifying this User LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_ldap_retrieve
      parameters:
      - description: A unique integer value identifying this User LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: User-source connection Viewset
      operationId: sources_user_connections_ldap_partial_update
      parameters:
      - description: A unique integer value identifying this User LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLDAPSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: User-source connection Viewset
      operationId: sources_user_connections_ldap_update
      parameters:
      - description: A unique integer value identifying this User LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLDAPSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLDAPSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/ldap/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_user_connections_ldap_used_by_list
      parameters:
      - description: A unique integer value identifying this User LDAP Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/oauth/:
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_oauth_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserOAuthSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: User-source connection Viewset
      operationId: sources_user_connections_oauth_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOAuthSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/oauth/{id}/:
    delete:
      description: User-source connection Viewset
      operationId: sources_user_connections_oauth_destroy
      parameters:
      - description: A unique integer value identifying this User OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_oauth_retrieve
      parameters:
      - description: A unique integer value identifying this User OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: User-source connection Viewset
      operationId: sources_user_connections_oauth_partial_update
      parameters:
      - description: A unique integer value identifying this User OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserOAuthSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: User-source connection Viewset
      operationId: sources_user_connections_oauth_update
      parameters:
      - description: A unique integer value identifying this User OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOAuthSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOAuthSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/oauth/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_user_connections_oauth_used_by_list
      parameters:
      - description: A unique integer value identifying this User OAuth Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/plex/:
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_plex_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserPlexSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: User-source connection Viewset
      operationId: sources_user_connections_plex_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPlexSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/plex/{id}/:
    delete:
      description: User-source connection Viewset
      operationId: sources_user_connections_plex_destroy
      parameters:
      - description: A unique integer value identifying this User Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_plex_retrieve
      parameters:
      - description: A unique integer value identifying this User Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: User-source connection Viewset
      operationId: sources_user_connections_plex_partial_update
      parameters:
      - description: A unique integer value identifying this User Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPlexSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: User-source connection Viewset
      operationId: sources_user_connections_plex_update
      parameters:
      - description: A unique integer value identifying this User Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPlexSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPlexSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/plex/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_user_connections_plex_used_by_list
      parameters:
      - description: A unique integer value identifying this User Plex Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/saml/:
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_saml_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSAMLSourceConnectionList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    post:
      description: User-source connection Viewset
      operationId: sources_user_connections_saml_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSAMLSourceConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/saml/{id}/:
    delete:
      description: User-source connection Viewset
      operationId: sources_user_connections_saml_destroy
      parameters:
      - description: A unique integer value identifying this User SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    get:
      description: User-source connection Viewset
      operationId: sources_user_connections_saml_retrieve
      parameters:
      - description: A unique integer value identifying this User SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    patch:
      description: User-source connection Viewset
      operationId: sources_user_connections_saml_partial_update
      parameters:
      - description: A unique integer value identifying this User SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSAMLSourceConnectionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
    put:
      description: User-source connection Viewset
      operationId: sources_user_connections_saml_update
      parameters:
      - description: A unique integer value identifying this User SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSAMLSourceConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSAMLSourceConnection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /sources/user_connections/saml/{id}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: sources_user_connections_saml_used_by_list
      parameters:
      - description: A unique integer value identifying this User SAML Source Connection.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - sources
  /ssf/streams/:
    get:
      description: SSFStream Viewset
      operationId: ssf_streams_list
      parameters:
      - explode: true
        in: query
        name: delivery_method
        required: false
        schema:
          enum:
          - https://schemas.openid.net/secevent/risc/delivery-method/poll
          - https://schemas.openid.net/secevent/risc/delivery-method/push
          type: string
        style: form
      - explode: true
        in: query
        name: endpoint_url
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSSFStreamList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - ssf
  /ssf/streams/{uuid}/:
    get:
      description: SSFStream Viewset
      operationId: ssf_streams_retrieve
      parameters:
      - description: A UUID string identifying this SSF Stream.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSFStream'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - ssf
  /stages/all/:
    get:
      description: Stage Viewset
      operationId: stages_all_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/all/{stage_uuid}/:
    delete:
      description: Stage Viewset
      operationId: stages_all_destroy
      parameters:
      - description: A UUID string identifying this stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: Stage Viewset
      operationId: stages_all_retrieve
      parameters:
      - description: A UUID string identifying this stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/all/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_all_used_by_list
      parameters:
      - description: A UUID string identifying this stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/all/types/:
    get:
      description: Get all creatable types
      operationId: stages_all_types_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/all/user_settings/:
    get:
      description: Get all stages the user can configure
      operationId: stages_all_user_settings_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSetting'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/duo/:
    get:
      description: AuthenticatorDuoStage Viewset
      operationId: stages_authenticator_duo_list
      parameters:
      - explode: true
        in: query
        name: api_hostname
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorDuoStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorDuoStage Viewset
      operationId: stages_authenticator_duo_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorDuoStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorDuoStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/duo/{stage_uuid}/:
    delete:
      description: AuthenticatorDuoStage Viewset
      operationId: stages_authenticator_duo_destroy
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorDuoStage Viewset
      operationId: stages_authenticator_duo_retrieve
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorDuoStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorDuoStage Viewset
      operationId: stages_authenticator_duo_partial_update
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorDuoStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorDuoStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorDuoStage Viewset
      operationId: stages_authenticator_duo_update
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorDuoStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorDuoStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/duo/{stage_uuid}/enrollment_status/:
    post:
      description: Check enrollment status of user details in current session
      operationId: stages_authenticator_duo_enrollment_status_create
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuoDeviceEnrollmentStatus'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/duo/{stage_uuid}/import_device_manual/:
    post:
      description: Import duo devices into authentik
      operationId: stages_authenticator_duo_import_device_manual_create
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorDuoStageManualDeviceImportRequest'
        required: true
      responses:
        "204":
          description: Enrollment successful
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/duo/{stage_uuid}/import_devices_automatic/:
    post:
      description: Import duo devices into authentik
      operationId: stages_authenticator_duo_import_devices_automatic_create
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorDuoStageDeviceImportResponse'
          description: ""
        "400":
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/duo/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_duo_used_by_list
      parameters:
      - description: A UUID string identifying this Duo Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/email/:
    get:
      description: AuthenticatorEmailStage Viewset
      operationId: stages_authenticator_email_list
      parameters:
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: friendly_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: from_address
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: password
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: port
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: subject
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: template
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: timeout
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: token_expiry
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: use_global_settings
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: use_ssl
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: use_tls
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorEmailStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorEmailStage Viewset
      operationId: stages_authenticator_email_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorEmailStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/email/{stage_uuid}/:
    delete:
      description: AuthenticatorEmailStage Viewset
      operationId: stages_authenticator_email_destroy
      parameters:
      - description: A UUID string identifying this Email Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorEmailStage Viewset
      operationId: stages_authenticator_email_retrieve
      parameters:
      - description: A UUID string identifying this Email Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorEmailStage Viewset
      operationId: stages_authenticator_email_partial_update
      parameters:
      - description: A UUID string identifying this Email Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorEmailStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorEmailStage Viewset
      operationId: stages_authenticator_email_update
      parameters:
      - description: A UUID string identifying this Email Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorEmailStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/email/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_email_used_by_list
      parameters:
      - description: A UUID string identifying this Email Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/endpoint_gdtc/:
    get:
      description: AuthenticatorEndpointGDTCStage Viewset
      operationId: stages_authenticator_endpoint_gdtc_list
      parameters:
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorEndpointGDTCStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorEndpointGDTCStage Viewset
      operationId: stages_authenticator_endpoint_gdtc_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorEndpointGDTCStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEndpointGDTCStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/endpoint_gdtc/{stage_uuid}/:
    delete:
      description: AuthenticatorEndpointGDTCStage Viewset
      operationId: stages_authenticator_endpoint_gdtc_destroy
      parameters:
      - description: A UUID string identifying this Endpoint Authenticator Google
          Device Trust Connector Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorEndpointGDTCStage Viewset
      operationId: stages_authenticator_endpoint_gdtc_retrieve
      parameters:
      - description: A UUID string identifying this Endpoint Authenticator Google
          Device Trust Connector Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEndpointGDTCStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorEndpointGDTCStage Viewset
      operationId: stages_authenticator_endpoint_gdtc_partial_update
      parameters:
      - description: A UUID string identifying this Endpoint Authenticator Google
          Device Trust Connector Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorEndpointGDTCStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEndpointGDTCStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorEndpointGDTCStage Viewset
      operationId: stages_authenticator_endpoint_gdtc_update
      parameters:
      - description: A UUID string identifying this Endpoint Authenticator Google
          Device Trust Connector Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorEndpointGDTCStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEndpointGDTCStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/endpoint_gdtc/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_endpoint_gdtc_used_by_list
      parameters:
      - description: A UUID string identifying this Endpoint Authenticator Google
          Device Trust Connector Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/sms/:
    get:
      description: AuthenticatorSMSStage Viewset
      operationId: stages_authenticator_sms_list
      parameters:
      - explode: true
        in: query
        name: account_sid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: auth
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: auth_password
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: auth_type
        required: false
        schema:
          enum:
          - basic
          - bearer
          type: string
        style: form
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: friendly_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: from_number
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: mapping
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          enum:
          - generic
          - twilio
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: verify_only
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorSMSStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorSMSStage Viewset
      operationId: stages_authenticator_sms_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorSMSStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorSMSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/sms/{stage_uuid}/:
    delete:
      description: AuthenticatorSMSStage Viewset
      operationId: stages_authenticator_sms_destroy
      parameters:
      - description: A UUID string identifying this SMS Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorSMSStage Viewset
      operationId: stages_authenticator_sms_retrieve
      parameters:
      - description: A UUID string identifying this SMS Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorSMSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorSMSStage Viewset
      operationId: stages_authenticator_sms_partial_update
      parameters:
      - description: A UUID string identifying this SMS Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorSMSStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorSMSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorSMSStage Viewset
      operationId: stages_authenticator_sms_update
      parameters:
      - description: A UUID string identifying this SMS Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorSMSStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorSMSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/sms/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_sms_used_by_list
      parameters:
      - description: A UUID string identifying this SMS Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/static/:
    get:
      description: AuthenticatorStaticStage Viewset
      operationId: stages_authenticator_static_list
      parameters:
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: friendly_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: token_count
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: token_length
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorStaticStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorStaticStage Viewset
      operationId: stages_authenticator_static_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorStaticStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorStaticStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/static/{stage_uuid}/:
    delete:
      description: AuthenticatorStaticStage Viewset
      operationId: stages_authenticator_static_destroy
      parameters:
      - description: A UUID string identifying this Static Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorStaticStage Viewset
      operationId: stages_authenticator_static_retrieve
      parameters:
      - description: A UUID string identifying this Static Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorStaticStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorStaticStage Viewset
      operationId: stages_authenticator_static_partial_update
      parameters:
      - description: A UUID string identifying this Static Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorStaticStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorStaticStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorStaticStage Viewset
      operationId: stages_authenticator_static_update
      parameters:
      - description: A UUID string identifying this Static Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorStaticStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorStaticStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/static/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_static_used_by_list
      parameters:
      - description: A UUID string identifying this Static Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/totp/:
    get:
      description: AuthenticatorTOTPStage Viewset
      operationId: stages_authenticator_totp_list
      parameters:
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: digits
        required: false
        schema:
          enum:
          - "6"
          - "8"
          type: string
        style: form
      - explode: true
        in: query
        name: friendly_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorTOTPStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorTOTPStage Viewset
      operationId: stages_authenticator_totp_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorTOTPStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorTOTPStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/totp/{stage_uuid}/:
    delete:
      description: AuthenticatorTOTPStage Viewset
      operationId: stages_authenticator_totp_destroy
      parameters:
      - description: A UUID string identifying this TOTP Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorTOTPStage Viewset
      operationId: stages_authenticator_totp_retrieve
      parameters:
      - description: A UUID string identifying this TOTP Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorTOTPStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorTOTPStage Viewset
      operationId: stages_authenticator_totp_partial_update
      parameters:
      - description: A UUID string identifying this TOTP Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorTOTPStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorTOTPStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorTOTPStage Viewset
      operationId: stages_authenticator_totp_update
      parameters:
      - description: A UUID string identifying this TOTP Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorTOTPStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorTOTPStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/totp/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_totp_used_by_list
      parameters:
      - description: A UUID string identifying this TOTP Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/validate/:
    get:
      description: AuthenticatorValidateStage Viewset
      operationId: stages_authenticator_validate_list
      parameters:
      - explode: true
        in: query
        name: configuration_stages
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: not_configured_action
        required: false
        schema:
          enum:
          - configure
          - deny
          - skip
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorValidateStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorValidateStage Viewset
      operationId: stages_authenticator_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorValidateStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorValidateStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/validate/{stage_uuid}/:
    delete:
      description: AuthenticatorValidateStage Viewset
      operationId: stages_authenticator_validate_destroy
      parameters:
      - description: A UUID string identifying this Authenticator Validation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorValidateStage Viewset
      operationId: stages_authenticator_validate_retrieve
      parameters:
      - description: A UUID string identifying this Authenticator Validation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorValidateStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorValidateStage Viewset
      operationId: stages_authenticator_validate_partial_update
      parameters:
      - description: A UUID string identifying this Authenticator Validation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorValidateStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorValidateStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorValidateStage Viewset
      operationId: stages_authenticator_validate_update
      parameters:
      - description: A UUID string identifying this Authenticator Validation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorValidateStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorValidateStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/validate/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_validate_used_by_list
      parameters:
      - description: A UUID string identifying this Authenticator Validation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/webauthn/:
    get:
      description: AuthenticatorWebAuthnStage Viewset
      operationId: stages_authenticator_webauthn_list
      parameters:
      - explode: true
        in: query
        name: authenticator_attachment
        required: false
        schema:
          enum:
          - cross-platform
          - platform
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: device_type_restrictions
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: friendly_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: max_attempts
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: resident_key_requirement
        required: false
        schema:
          enum:
          - discouraged
          - preferred
          - required
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: user_verification
        required: false
        schema:
          enum:
          - discouraged
          - preferred
          - required
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorWebAuthnStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: AuthenticatorWebAuthnStage Viewset
      operationId: stages_authenticator_webauthn_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorWebAuthnStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorWebAuthnStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/webauthn/{stage_uuid}/:
    delete:
      description: AuthenticatorWebAuthnStage Viewset
      operationId: stages_authenticator_webauthn_destroy
      parameters:
      - description: A UUID string identifying this WebAuthn Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: AuthenticatorWebAuthnStage Viewset
      operationId: stages_authenticator_webauthn_retrieve
      parameters:
      - description: A UUID string identifying this WebAuthn Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorWebAuthnStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: AuthenticatorWebAuthnStage Viewset
      operationId: stages_authenticator_webauthn_partial_update
      parameters:
      - description: A UUID string identifying this WebAuthn Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorWebAuthnStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorWebAuthnStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: AuthenticatorWebAuthnStage Viewset
      operationId: stages_authenticator_webauthn_update
      parameters:
      - description: A UUID string identifying this WebAuthn Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorWebAuthnStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorWebAuthnStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/webauthn/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_authenticator_webauthn_used_by_list
      parameters:
      - description: A UUID string identifying this WebAuthn Authenticator Setup Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/webauthn_device_types/:
    get:
      description: WebAuthnDeviceType Viewset
      operationId: stages_authenticator_webauthn_device_types_list
      parameters:
      - explode: true
        in: query
        name: aaguid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: icon
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebAuthnDeviceTypeList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/authenticator/webauthn_device_types/{aaguid}/:
    get:
      description: WebAuthnDeviceType Viewset
      operationId: stages_authenticator_webauthn_device_types_retrieve
      parameters:
      - description: A UUID string identifying this WebAuthn Device type.
        explode: false
        in: path
        name: aaguid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthnDeviceType'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/captcha/:
    get:
      description: CaptchaStage Viewset
      operationId: stages_captcha_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: public_key
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCaptchaStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: CaptchaStage Viewset
      operationId: stages_captcha_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptchaStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/captcha/{stage_uuid}/:
    delete:
      description: CaptchaStage Viewset
      operationId: stages_captcha_destroy
      parameters:
      - description: A UUID string identifying this Captcha Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: CaptchaStage Viewset
      operationId: stages_captcha_retrieve
      parameters:
      - description: A UUID string identifying this Captcha Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: CaptchaStage Viewset
      operationId: stages_captcha_partial_update
      parameters:
      - description: A UUID string identifying this Captcha Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCaptchaStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: CaptchaStage Viewset
      operationId: stages_captcha_update
      parameters:
      - description: A UUID string identifying this Captcha Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptchaStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/captcha/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_captcha_used_by_list
      parameters:
      - description: A UUID string identifying this Captcha Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/consent/:
    get:
      description: ConsentStage Viewset
      operationId: stages_consent_list
      parameters:
      - explode: true
        in: query
        name: consent_expire_in
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: mode
        required: false
        schema:
          enum:
          - always_require
          - expiring
          - permanent
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConsentStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: ConsentStage Viewset
      operationId: stages_consent_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/consent/{stage_uuid}/:
    delete:
      description: ConsentStage Viewset
      operationId: stages_consent_destroy
      parameters:
      - description: A UUID string identifying this Consent Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: ConsentStage Viewset
      operationId: stages_consent_retrieve
      parameters:
      - description: A UUID string identifying this Consent Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: ConsentStage Viewset
      operationId: stages_consent_partial_update
      parameters:
      - description: A UUID string identifying this Consent Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConsentStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: ConsentStage Viewset
      operationId: stages_consent_update
      parameters:
      - description: A UUID string identifying this Consent Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/consent/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_consent_used_by_list
      parameters:
      - description: A UUID string identifying this Consent Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/deny/:
    get:
      description: DenyStage Viewset
      operationId: stages_deny_list
      parameters:
      - explode: true
        in: query
        name: deny_message
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDenyStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: DenyStage Viewset
      operationId: stages_deny_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DenyStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/deny/{stage_uuid}/:
    delete:
      description: DenyStage Viewset
      operationId: stages_deny_destroy
      parameters:
      - description: A UUID string identifying this Deny Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: DenyStage Viewset
      operationId: stages_deny_retrieve
      parameters:
      - description: A UUID string identifying this Deny Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: DenyStage Viewset
      operationId: stages_deny_partial_update
      parameters:
      - description: A UUID string identifying this Deny Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDenyStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: DenyStage Viewset
      operationId: stages_deny_update
      parameters:
      - description: A UUID string identifying this Deny Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DenyStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/deny/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_deny_used_by_list
      parameters:
      - description: A UUID string identifying this Deny Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/dummy/:
    get:
      description: DummyStage Viewset
      operationId: stages_dummy_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: throw_error
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDummyStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: DummyStage Viewset
      operationId: stages_dummy_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DummyStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/dummy/{stage_uuid}/:
    delete:
      description: DummyStage Viewset
      operationId: stages_dummy_destroy
      parameters:
      - description: A UUID string identifying this Dummy Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: DummyStage Viewset
      operationId: stages_dummy_retrieve
      parameters:
      - description: A UUID string identifying this Dummy Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: DummyStage Viewset
      operationId: stages_dummy_partial_update
      parameters:
      - description: A UUID string identifying this Dummy Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDummyStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: DummyStage Viewset
      operationId: stages_dummy_update
      parameters:
      - description: A UUID string identifying this Dummy Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DummyStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/dummy/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_dummy_used_by_list
      parameters:
      - description: A UUID string identifying this Dummy Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/email/:
    get:
      description: EmailStage Viewset
      operationId: stages_email_list
      parameters:
      - explode: true
        in: query
        name: activate_user_on_success
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: from_address
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: port
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subject
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: template
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: timeout
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: token_expiry
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: use_global_settings
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: use_ssl
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: use_tls
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: EmailStage Viewset
      operationId: stages_email_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/email/{stage_uuid}/:
    delete:
      description: EmailStage Viewset
      operationId: stages_email_destroy
      parameters:
      - description: A UUID string identifying this Email Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: EmailStage Viewset
      operationId: stages_email_retrieve
      parameters:
      - description: A UUID string identifying this Email Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: EmailStage Viewset
      operationId: stages_email_partial_update
      parameters:
      - description: A UUID string identifying this Email Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: EmailStage Viewset
      operationId: stages_email_update
      parameters:
      - description: A UUID string identifying this Email Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/email/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_email_used_by_list
      parameters:
      - description: A UUID string identifying this Email Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/email/templates/:
    get:
      description: "Get all available templates, including custom templates"
      operationId: stages_email_templates_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeCreate'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/identification/:
    get:
      description: IdentificationStage Viewset
      operationId: stages_identification_list
      parameters:
      - explode: true
        in: query
        name: captcha_stage
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: case_insensitive_matching
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: enrollment_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: password_stage
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: passwordless_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: recovery_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: show_matched_user
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: show_source_labels
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIdentificationStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: IdentificationStage Viewset
      operationId: stages_identification_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentificationStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/identification/{stage_uuid}/:
    delete:
      description: IdentificationStage Viewset
      operationId: stages_identification_destroy
      parameters:
      - description: A UUID string identifying this Identification Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: IdentificationStage Viewset
      operationId: stages_identification_retrieve
      parameters:
      - description: A UUID string identifying this Identification Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: IdentificationStage Viewset
      operationId: stages_identification_partial_update
      parameters:
      - description: A UUID string identifying this Identification Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIdentificationStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: IdentificationStage Viewset
      operationId: stages_identification_update
      parameters:
      - description: A UUID string identifying this Identification Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentificationStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/identification/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_identification_used_by_list
      parameters:
      - description: A UUID string identifying this Identification Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/invitation/invitations/:
    get:
      description: Invitation Viewset
      operationId: stages_invitation_invitations_list
      parameters:
      - explode: true
        in: query
        name: created_by__username
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expires
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: flow__slug
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: Invitation Viewset
      operationId: stages_invitation_invitations_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/invitation/invitations/{invite_uuid}/:
    delete:
      description: Invitation Viewset
      operationId: stages_invitation_invitations_destroy
      parameters:
      - description: A UUID string identifying this Invitation.
        explode: false
        in: path
        name: invite_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: Invitation Viewset
      operationId: stages_invitation_invitations_retrieve
      parameters:
      - description: A UUID string identifying this Invitation.
        explode: false
        in: path
        name: invite_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: Invitation Viewset
      operationId: stages_invitation_invitations_partial_update
      parameters:
      - description: A UUID string identifying this Invitation.
        explode: false
        in: path
        name: invite_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: Invitation Viewset
      operationId: stages_invitation_invitations_update
      parameters:
      - description: A UUID string identifying this Invitation.
        explode: false
        in: path
        name: invite_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/invitation/invitations/{invite_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_invitation_invitations_used_by_list
      parameters:
      - description: A UUID string identifying this Invitation.
        explode: false
        in: path
        name: invite_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/invitation/stages/:
    get:
      description: InvitationStage Viewset
      operationId: stages_invitation_stages_list
      parameters:
      - explode: true
        in: query
        name: continue_flow_without_invitation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: no_flows
        required: false
        schema:
          type: boolean
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: InvitationStage Viewset
      operationId: stages_invitation_stages_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/invitation/stages/{stage_uuid}/:
    delete:
      description: InvitationStage Viewset
      operationId: stages_invitation_stages_destroy
      parameters:
      - description: A UUID string identifying this Invitation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: InvitationStage Viewset
      operationId: stages_invitation_stages_retrieve
      parameters:
      - description: A UUID string identifying this Invitation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: InvitationStage Viewset
      operationId: stages_invitation_stages_partial_update
      parameters:
      - description: A UUID string identifying this Invitation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitationStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: InvitationStage Viewset
      operationId: stages_invitation_stages_update
      parameters:
      - description: A UUID string identifying this Invitation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/invitation/stages/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_invitation_stages_used_by_list
      parameters:
      - description: A UUID string identifying this Invitation Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/mtls/:
    get:
      description: MutualTLSStage Viewset
      operationId: stages_mtls_list
      parameters:
      - explode: true
        in: query
        name: cert_attribute
        required: false
        schema:
          enum:
          - common_name
          - email
          - subject
          type: string
        style: form
      - explode: true
        in: query
        name: certificate_authorities
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: mode
        required: false
        schema:
          enum:
          - optional
          - required
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: user_attribute
        required: false
        schema:
          enum:
          - email
          - username
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMutualTLSStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: MutualTLSStage Viewset
      operationId: stages_mtls_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutualTLSStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualTLSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/mtls/{stage_uuid}/:
    delete:
      description: MutualTLSStage Viewset
      operationId: stages_mtls_destroy
      parameters:
      - description: A UUID string identifying this Mutual TLS Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: MutualTLSStage Viewset
      operationId: stages_mtls_retrieve
      parameters:
      - description: A UUID string identifying this Mutual TLS Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualTLSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: MutualTLSStage Viewset
      operationId: stages_mtls_partial_update
      parameters:
      - description: A UUID string identifying this Mutual TLS Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMutualTLSStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualTLSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: MutualTLSStage Viewset
      operationId: stages_mtls_update
      parameters:
      - description: A UUID string identifying this Mutual TLS Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutualTLSStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualTLSStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/mtls/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_mtls_used_by_list
      parameters:
      - description: A UUID string identifying this Mutual TLS Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/password/:
    get:
      description: PasswordStage Viewset
      operationId: stages_password_list
      parameters:
      - explode: true
        in: query
        name: allow_show_password
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: configure_flow
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: failed_attempts_before_cancel
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPasswordStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: PasswordStage Viewset
      operationId: stages_password_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/password/{stage_uuid}/:
    delete:
      description: PasswordStage Viewset
      operationId: stages_password_destroy
      parameters:
      - description: A UUID string identifying this Password Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: PasswordStage Viewset
      operationId: stages_password_retrieve
      parameters:
      - description: A UUID string identifying this Password Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: PasswordStage Viewset
      operationId: stages_password_partial_update
      parameters:
      - description: A UUID string identifying this Password Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: PasswordStage Viewset
      operationId: stages_password_update
      parameters:
      - description: A UUID string identifying this Password Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/password/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_password_used_by_list
      parameters:
      - description: A UUID string identifying this Password Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/prompt/prompts/:
    get:
      description: Prompt Viewset
      operationId: stages_prompt_prompts_list
      parameters:
      - explode: true
        in: query
        name: field_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: placeholder
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - ak-locale
          - checkbox
          - date
          - date-time
          - dropdown
          - email
          - file
          - hidden
          - number
          - password
          - radio-button-group
          - separator
          - static
          - text
          - text_area
          - text_area_read_only
          - text_read_only
          - username
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPromptList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: Prompt Viewset
      operationId: stages_prompt_prompts_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/prompt/prompts/{prompt_uuid}/:
    delete:
      description: Prompt Viewset
      operationId: stages_prompt_prompts_destroy
      parameters:
      - description: A UUID string identifying this Prompt.
        explode: false
        in: path
        name: prompt_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: Prompt Viewset
      operationId: stages_prompt_prompts_retrieve
      parameters:
      - description: A UUID string identifying this Prompt.
        explode: false
        in: path
        name: prompt_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: Prompt Viewset
      operationId: stages_prompt_prompts_partial_update
      parameters:
      - description: A UUID string identifying this Prompt.
        explode: false
        in: path
        name: prompt_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPromptRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: Prompt Viewset
      operationId: stages_prompt_prompts_update
      parameters:
      - description: A UUID string identifying this Prompt.
        explode: false
        in: path
        name: prompt_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/prompt/prompts/{prompt_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_prompt_prompts_used_by_list
      parameters:
      - description: A UUID string identifying this Prompt.
        explode: false
        in: path
        name: prompt_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/prompt/prompts/preview/:
    post:
      description: "Preview a prompt as a challenge, just like a flow would receive"
      operationId: stages_prompt_prompts_preview_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptChallenge'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/prompt/stages/:
    get:
      description: PromptStage Viewset
      operationId: stages_prompt_stages_list
      parameters:
      - explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: validation_policies
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPromptStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: PromptStage Viewset
      operationId: stages_prompt_stages_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/prompt/stages/{stage_uuid}/:
    delete:
      description: PromptStage Viewset
      operationId: stages_prompt_stages_destroy
      parameters:
      - description: A UUID string identifying this Prompt Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: PromptStage Viewset
      operationId: stages_prompt_stages_retrieve
      parameters:
      - description: A UUID string identifying this Prompt Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: PromptStage Viewset
      operationId: stages_prompt_stages_partial_update
      parameters:
      - description: A UUID string identifying this Prompt Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPromptStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: PromptStage Viewset
      operationId: stages_prompt_stages_update
      parameters:
      - description: A UUID string identifying this Prompt Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/prompt/stages/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_prompt_stages_used_by_list
      parameters:
      - description: A UUID string identifying this Prompt Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/redirect/:
    get:
      description: RedirectStage Viewset
      operationId: stages_redirect_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRedirectStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: RedirectStage Viewset
      operationId: stages_redirect_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedirectStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/redirect/{stage_uuid}/:
    delete:
      description: RedirectStage Viewset
      operationId: stages_redirect_destroy
      parameters:
      - description: A UUID string identifying this Redirect Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: RedirectStage Viewset
      operationId: stages_redirect_retrieve
      parameters:
      - description: A UUID string identifying this Redirect Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: RedirectStage Viewset
      operationId: stages_redirect_partial_update
      parameters:
      - description: A UUID string identifying this Redirect Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRedirectStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: RedirectStage Viewset
      operationId: stages_redirect_update
      parameters:
      - description: A UUID string identifying this Redirect Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedirectStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/redirect/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_redirect_used_by_list
      parameters:
      - description: A UUID string identifying this Redirect Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/source/:
    get:
      description: SourceStage Viewset
      operationId: stages_source_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: resume_timeout
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSourceStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: SourceStage Viewset
      operationId: stages_source_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/source/{stage_uuid}/:
    delete:
      description: SourceStage Viewset
      operationId: stages_source_destroy
      parameters:
      - description: A UUID string identifying this Source Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: SourceStage Viewset
      operationId: stages_source_retrieve
      parameters:
      - description: A UUID string identifying this Source Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: SourceStage Viewset
      operationId: stages_source_partial_update
      parameters:
      - description: A UUID string identifying this Source Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSourceStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: SourceStage Viewset
      operationId: stages_source_update
      parameters:
      - description: A UUID string identifying this Source Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/source/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_source_used_by_list
      parameters:
      - description: A UUID string identifying this Source Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_delete/:
    get:
      description: UserDeleteStage Viewset
      operationId: stages_user_delete_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDeleteStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: UserDeleteStage Viewset
      operationId: stages_user_delete_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDeleteStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_delete/{stage_uuid}/:
    delete:
      description: UserDeleteStage Viewset
      operationId: stages_user_delete_destroy
      parameters:
      - description: A UUID string identifying this User Delete Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: UserDeleteStage Viewset
      operationId: stages_user_delete_retrieve
      parameters:
      - description: A UUID string identifying this User Delete Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: UserDeleteStage Viewset
      operationId: stages_user_delete_partial_update
      parameters:
      - description: A UUID string identifying this User Delete Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDeleteStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: UserDeleteStage Viewset
      operationId: stages_user_delete_update
      parameters:
      - description: A UUID string identifying this User Delete Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDeleteStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_delete/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_user_delete_used_by_list
      parameters:
      - description: A UUID string identifying this User Delete Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_login/:
    get:
      description: UserLoginStage Viewset
      operationId: stages_user_login_list
      parameters:
      - description: |+
          Bind sessions created by this stage to the configured GeoIP location

        explode: true
        in: query
        name: geoip_binding
        required: false
        schema:
          enum:
          - bind_continent
          - bind_continent_country
          - bind_continent_country_city
          - no_binding
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |+
          Bind sessions created by this stage to the configured network

        explode: true
        in: query
        name: network_binding
        required: false
        schema:
          enum:
          - bind_asn
          - bind_asn_network
          - bind_asn_network_ip
          - no_binding
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: remember_me_offset
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: session_duration
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: terminate_other_sessions
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserLoginStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: UserLoginStage Viewset
      operationId: stages_user_login_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_login/{stage_uuid}/:
    delete:
      description: UserLoginStage Viewset
      operationId: stages_user_login_destroy
      parameters:
      - description: A UUID string identifying this User Login Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: UserLoginStage Viewset
      operationId: stages_user_login_retrieve
      parameters:
      - description: A UUID string identifying this User Login Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: UserLoginStage Viewset
      operationId: stages_user_login_partial_update
      parameters:
      - description: A UUID string identifying this User Login Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLoginStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: UserLoginStage Viewset
      operationId: stages_user_login_update
      parameters:
      - description: A UUID string identifying this User Login Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_login/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_user_login_used_by_list
      parameters:
      - description: A UUID string identifying this User Login Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_logout/:
    get:
      description: UserLogoutStage Viewset
      operationId: stages_user_logout_list
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserLogoutStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: UserLogoutStage Viewset
      operationId: stages_user_logout_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogoutStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogoutStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_logout/{stage_uuid}/:
    delete:
      description: UserLogoutStage Viewset
      operationId: stages_user_logout_destroy
      parameters:
      - description: A UUID string identifying this User Logout Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: UserLogoutStage Viewset
      operationId: stages_user_logout_retrieve
      parameters:
      - description: A UUID string identifying this User Logout Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogoutStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: UserLogoutStage Viewset
      operationId: stages_user_logout_partial_update
      parameters:
      - description: A UUID string identifying this User Logout Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLogoutStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogoutStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: UserLogoutStage Viewset
      operationId: stages_user_logout_update
      parameters:
      - description: A UUID string identifying this User Logout Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogoutStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogoutStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_logout/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_user_logout_used_by_list
      parameters:
      - description: A UUID string identifying this User Logout Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_write/:
    get:
      description: UserWriteStage Viewset
      operationId: stages_user_write_list
      parameters:
      - explode: true
        in: query
        name: create_users_as_inactive
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: create_users_group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stage_uuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: user_creation_mode
        required: false
        schema:
          enum:
          - always_create
          - create_when_required
          - never_create
          type: string
        style: form
      - explode: true
        in: query
        name: user_path_template
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_type
        required: false
        schema:
          enum:
          - external
          - internal
          - internal_service_account
          - service_account
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserWriteStageList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    post:
      description: UserWriteStage Viewset
      operationId: stages_user_write_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWriteStageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWriteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_write/{stage_uuid}/:
    delete:
      description: UserWriteStage Viewset
      operationId: stages_user_write_destroy
      parameters:
      - description: A UUID string identifying this User Write Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    get:
      description: UserWriteStage Viewset
      operationId: stages_user_write_retrieve
      parameters:
      - description: A UUID string identifying this User Write Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWriteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    patch:
      description: UserWriteStage Viewset
      operationId: stages_user_write_partial_update
      parameters:
      - description: A UUID string identifying this User Write Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserWriteStageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWriteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
    put:
      description: UserWriteStage Viewset
      operationId: stages_user_write_update
      parameters:
      - description: A UUID string identifying this User Write Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWriteStageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWriteStage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /stages/user_write/{stage_uuid}/used_by/:
    get:
      description: Get a list of all objects that use this object
      operationId: stages_user_write_used_by_list
      parameters:
      - description: A UUID string identifying this User Write Stage.
        explode: false
        in: path
        name: stage_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UsedBy'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      security:
      - authentik: []
      tags:
      - stages
  /tenants/domains/:
    get:
      description: Domain ViewSet
      operationId: tenants_domains_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDomainList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    post:
      description: Domain ViewSet
      operationId: tenants_domains_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
  /tenants/domains/{id}/:
    delete:
      description: Domain ViewSet
      operationId: tenants_domains_destroy
      parameters:
      - description: A unique integer value identifying this Domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    get:
      description: Domain ViewSet
      operationId: tenants_domains_retrieve
      parameters:
      - description: A unique integer value identifying this Domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    patch:
      description: Domain ViewSet
      operationId: tenants_domains_partial_update
      parameters:
      - description: A unique integer value identifying this Domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDomainRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    put:
      description: Domain ViewSet
      operationId: tenants_domains_update
      parameters:
      - description: A unique integer value identifying this Domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
  /tenants/tenants/:
    get:
      description: Tenant Viewset
      operationId: tenants_tenants_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTenantList'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    post:
      description: Tenant Viewset
      operationId: tenants_tenants_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
  /tenants/tenants/{tenant_uuid}/:
    delete:
      description: Tenant Viewset
      operationId: tenants_tenants_destroy
      parameters:
      - description: A UUID string identifying this Tenant.
        explode: false
        in: path
        name: tenant_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    get:
      description: Tenant Viewset
      operationId: tenants_tenants_retrieve
      parameters:
      - description: A UUID string identifying this Tenant.
        explode: false
        in: path
        name: tenant_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    patch:
      description: Tenant Viewset
      operationId: tenants_tenants_partial_update
      parameters:
      - description: A UUID string identifying this Tenant.
        explode: false
        in: path
        name: tenant_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
    put:
      description: Tenant Viewset
      operationId: tenants_tenants_update
      parameters:
      - description: A UUID string identifying this Tenant.
        explode: false
        in: path
        name: tenant_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ""
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
  /tenants/tenants/{tenant_uuid}/create_admin_group/:
    post:
      description: Create admin group and add user to it.
      operationId: tenants_tenants_create_admin_group_create
      parameters:
      - description: A UUID string identifying this Tenant.
        explode: false
        in: path
        name: tenant_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantAdminGroupRequestRequest'
        required: true
      responses:
        "204":
          description: Group created successfully.
        "400":
          description: Bad request
        "404":
          description: User not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
  /tenants/tenants/{tenant_uuid}/create_recovery_key/:
    post:
      description: Create recovery key for user.
      operationId: tenants_tenants_create_recovery_key_create
      parameters:
      - description: A UUID string identifying this Tenant.
        explode: false
        in: path
        name: tenant_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRecoveryKeyRequestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantRecoveryKeyResponse'
          description: ""
        "400":
          description: Bad request
        "404":
          description: User not found
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: ""
      tags:
      - tenants
components:
  schemas:
    AccessDeniedChallenge:
      description: Challenge when a flow's active stage calls `stage_invalid()`.
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-access-denied
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        error_message:
          type: string
      required:
      - pending_user
      - pending_user_avatar
      type: object
    AlgEnum:
      enum:
      - rsa
      - ecdsa
      type: string
    App:
      description: Serialize Application info
      example:
        name: name
        label: label
      properties:
        name:
          type: string
        label:
          type: string
      required:
      - label
      - name
      type: object
    AppEnum:
      enum:
      - authentik.tenants
      - authentik.admin
      - authentik.api
      - authentik.crypto
      - authentik.flows
      - authentik.outposts
      - authentik.policies.dummy
      - authentik.policies.event_matcher
      - authentik.policies.expiry
      - authentik.policies.expression
      - authentik.policies.geoip
      - authentik.policies.password
      - authentik.policies.reputation
      - authentik.policies
      - authentik.providers.ldap
      - authentik.providers.oauth2
      - authentik.providers.proxy
      - authentik.providers.rac
      - authentik.providers.radius
      - authentik.providers.saml
      - authentik.providers.scim
      - authentik.rbac
      - authentik.recovery
      - authentik.sources.kerberos
      - authentik.sources.ldap
      - authentik.sources.oauth
      - authentik.sources.plex
      - authentik.sources.saml
      - authentik.sources.scim
      - authentik.stages.authenticator
      - authentik.stages.authenticator_duo
      - authentik.stages.authenticator_email
      - authentik.stages.authenticator_sms
      - authentik.stages.authenticator_static
      - authentik.stages.authenticator_totp
      - authentik.stages.authenticator_validate
      - authentik.stages.authenticator_webauthn
      - authentik.stages.captcha
      - authentik.stages.consent
      - authentik.stages.deny
      - authentik.stages.dummy
      - authentik.stages.email
      - authentik.stages.identification
      - authentik.stages.invitation
      - authentik.stages.password
      - authentik.stages.prompt
      - authentik.stages.redirect
      - authentik.stages.user_delete
      - authentik.stages.user_login
      - authentik.stages.user_logout
      - authentik.stages.user_write
      - authentik.brands
      - authentik.blueprints
      - authentik.core
      - authentik.enterprise
      - authentik.enterprise.audit
      - authentik.enterprise.policies.unique_password
      - authentik.enterprise.providers.google_workspace
      - authentik.enterprise.providers.microsoft_entra
      - authentik.enterprise.providers.ssf
      - authentik.enterprise.search
      - authentik.enterprise.stages.authenticator_endpoint_gdtc
      - authentik.enterprise.stages.mtls
      - authentik.enterprise.stages.source
      - authentik.events
      type: string
    AppleChallengeResponseRequest:
      description: Pseudo class for apple response
      properties:
        component:
          default: ak-source-oauth-apple
          minLength: 1
          type: string
      type: object
    AppleLoginChallenge:
      description: "Special challenge for apple-native authentication flow, which\
        \ happens on the client."
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-source-oauth-apple
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        client_id:
          type: string
        scope:
          type: string
        redirect_uri:
          type: string
        state:
          type: string
      required:
      - client_id
      - redirect_uri
      - scope
      - state
      type: object
    Application:
      description: Application Serializer
      example:
        provider_obj: ""
        backchannel_providers:
        - 6
        - 6
        meta_launch_url: https://openapi-generator.tech
        meta_icon: meta_icon
        meta_publisher: meta_publisher
        policy_engine_mode: null
        meta_description: meta_description
        launch_url: launch_url
        provider: 0
        open_in_new_tab: true
        name: name
        backchannel_providers_obj:
        - verbose_name_plural: verbose_name_plural
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - verbose_name_plural: verbose_name_plural
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
        group: group
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Application's display Name.
          type: string
        slug:
          description: "Internal application name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        provider:
          nullable: true
          type: integer
        provider_obj:
          allOf:
          - $ref: '#/components/schemas/Provider'
          readOnly: true
        backchannel_providers:
          items:
            type: integer
          type: array
        backchannel_providers_obj:
          items:
            $ref: '#/components/schemas/Provider'
          readOnly: true
          type: array
        launch_url:
          description: Allow formatting of launch URL
          nullable: true
          readOnly: true
          type: string
        open_in_new_tab:
          description: Open launch URL in a new browser tab or window.
          type: boolean
        meta_launch_url:
          format: uri
          type: string
        meta_icon:
          description: |-
            Get the URL to the App Icon image. If the name is /static or starts with http
            it is returned as-is
          nullable: true
          readOnly: true
          type: string
        meta_description:
          type: string
        meta_publisher:
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        group:
          type: string
      required:
      - backchannel_providers_obj
      - launch_url
      - meta_icon
      - name
      - pk
      - provider_obj
      - slug
      type: object
    ApplicationEntitlement:
      description: ApplicationEntitlement Serializer
      example:
        app: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pbm_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        attributes:
          key: ""
      properties:
        pbm_uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        app:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - app
      - name
      - pbm_uuid
      type: object
    ApplicationEntitlementRequest:
      description: ApplicationEntitlement Serializer
      example:
        app: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        attributes:
          key: ""
      properties:
        name:
          minLength: 1
          type: string
        app:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - app
      - name
      type: object
    ApplicationRequest:
      description: Application Serializer
      example:
        policy_engine_mode: null
        meta_description: meta_description
        backchannel_providers:
        - 6
        - 6
        provider: 0
        open_in_new_tab: true
        name: name
        meta_launch_url: https://openapi-generator.tech
        slug: slug
        meta_publisher: meta_publisher
        group: group
      properties:
        name:
          description: Application's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal application name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        provider:
          nullable: true
          type: integer
        backchannel_providers:
          items:
            type: integer
          type: array
        open_in_new_tab:
          description: Open launch URL in a new browser tab or window.
          type: boolean
        meta_launch_url:
          format: uri
          type: string
        meta_description:
          type: string
        meta_publisher:
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        group:
          type: string
      required:
      - name
      - slug
      type: object
    AuthModeEnum:
      enum:
      - static
      - prompt
      type: string
    AuthTypeEnum:
      enum:
      - basic
      - bearer
      type: string
    AuthenticatedSession:
      description: AuthenticatedSession Serializer
      example:
        last_ip: last_ip
        current: true
        expires: 2000-01-23T04:56:07.000+00:00
        geo_ip:
          continent: continent
          country: country
          city: city
          lat: 0.8008281904610115
          long: 6.027456183070403
        last_used: 2000-01-23T04:56:07.000+00:00
        last_user_agent: last_user_agent
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        asn:
          as_org: as_org
          asn: 1
          network: network
        user: 5
        user_agent:
          os:
            patch: patch
            patch_minor: patch_minor
            major: major
            minor: minor
            family: family
          string: string
          device:
            model: model
            family: family
            brand: brand
          user_agent:
            patch: patch
            major: major
            minor: minor
            family: family
      properties:
        uuid:
          format: uuid
          type: string
        current:
          description: Check if session is currently active session
          readOnly: true
          type: boolean
        user_agent:
          $ref: '#/components/schemas/AuthenticatedSession_user_agent'
        geo_ip:
          $ref: '#/components/schemas/AuthenticatedSession_geo_ip'
        asn:
          $ref: '#/components/schemas/AuthenticatedSession_asn'
        user:
          type: integer
        last_ip:
          readOnly: true
          type: string
        last_user_agent:
          readOnly: true
          type: string
        last_used:
          format: date-time
          readOnly: true
          type: string
        expires:
          format: date-time
          readOnly: true
          type: string
      required:
      - asn
      - current
      - expires
      - geo_ip
      - last_ip
      - last_used
      - last_user_agent
      - user
      - user_agent
      type: object
    AuthenticationEnum:
      enum:
      - none
      - require_authenticated
      - require_unauthenticated
      - require_superuser
      - require_redirect
      - require_outpost
      type: string
    AuthenticatorAttachmentEnum:
      enum:
      - platform
      - cross-platform
      type: string
    AuthenticatorDuoChallenge:
      description: Duo Challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-authenticator-duo
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        activation_barcode:
          type: string
        activation_code:
          type: string
        stage_uuid:
          type: string
      required:
      - activation_barcode
      - activation_code
      - pending_user
      - pending_user_avatar
      - stage_uuid
      type: object
    AuthenticatorDuoChallengeResponseRequest:
      description: Pseudo class for duo response
      properties:
        component:
          default: ak-stage-authenticator-duo
          minLength: 1
          type: string
      type: object
    AuthenticatorDuoStage:
      description: AuthenticatorDuoStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        api_hostname: api_hostname
        admin_integration_key: admin_integration_key
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        client_id: client_id
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          nullable: true
          type: string
        client_id:
          type: string
        api_hostname:
          type: string
        admin_integration_key:
          type: string
      required:
      - api_hostname
      - client_id
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    AuthenticatorDuoStageDeviceImportResponse:
      example:
        count: 0
        error: error
      properties:
        count:
          readOnly: true
          type: integer
        error:
          readOnly: true
          type: string
      required:
      - count
      - error
      type: object
    AuthenticatorDuoStageManualDeviceImportRequest:
      example:
        duo_user_id: duo_user_id
        username: username
      properties:
        duo_user_id:
          minLength: 1
          type: string
        username:
          minLength: 1
          type: string
      required:
      - duo_user_id
      - username
      type: object
    AuthenticatorDuoStageRequest:
      description: AuthenticatorDuoStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        name: name
        client_secret: client_secret
        api_hostname: api_hostname
        admin_integration_key: admin_integration_key
        admin_secret_key: admin_secret_key
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        client_id: client_id
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        client_id:
          minLength: 1
          type: string
        client_secret:
          minLength: 1
          type: string
          writeOnly: true
        api_hostname:
          minLength: 1
          type: string
        admin_integration_key:
          type: string
        admin_secret_key:
          type: string
          writeOnly: true
      required:
      - api_hostname
      - client_id
      - client_secret
      - name
      type: object
    AuthenticatorEmailChallenge:
      description: Authenticator Email Setup challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-authenticator-email
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        email:
          nullable: true
          type: string
        email_required:
          default: true
          type: boolean
      required:
      - pending_user
      - pending_user_avatar
      type: object
    AuthenticatorEmailChallengeResponseRequest:
      description: "Authenticator Email Challenge response, device is set by get_response_instance"
      properties:
        component:
          default: ak-stage-authenticator-email
          minLength: 1
          type: string
        code:
          type: integer
        email:
          minLength: 1
          type: string
      type: object
    AuthenticatorEmailStage:
      description: AuthenticatorEmailStage Serializer
      example:
        template: template
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        verbose_name_plural: verbose_name_plural
        use_global_settings: true
        use_ssl: true
        subject: subject
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        token_expiry: token_expiry
        timeout: 441289069
        use_tls: true
        component: component
        verbose_name: verbose_name
        password: password
        meta_model_name: meta_model_name
        port: -1803530559
        name: name
        host: host
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        from_address: from_address
        username: username
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          nullable: true
          type: string
        use_global_settings:
          description: "When enabled, global Email connection settings will be used\
            \ and connection settings below will be ignored."
          type: boolean
        host:
          type: string
        port:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        username:
          type: string
        password:
          type: string
        use_tls:
          type: boolean
        use_ssl:
          type: boolean
        timeout:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        from_address:
          format: email
          maxLength: 254
          type: string
        subject:
          type: string
        token_expiry:
          description: "Time the token sent is valid (Format: hours=3,minutes=17,seconds=300)."
          type: string
        template:
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    AuthenticatorEmailStageRequest:
      description: AuthenticatorEmailStage Serializer
      example:
        template: template
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        use_global_settings: true
        use_ssl: true
        subject: subject
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        token_expiry: token_expiry
        timeout: 441289069
        use_tls: true
        password: password
        port: -1803530559
        name: name
        host: host
        from_address: from_address
        username: username
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        use_global_settings:
          description: "When enabled, global Email connection settings will be used\
            \ and connection settings below will be ignored."
          type: boolean
        host:
          minLength: 1
          type: string
        port:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        username:
          type: string
        password:
          type: string
        use_tls:
          type: boolean
        use_ssl:
          type: boolean
        timeout:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        from_address:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        subject:
          minLength: 1
          type: string
        token_expiry:
          description: "Time the token sent is valid (Format: hours=3,minutes=17,seconds=300)."
          minLength: 1
          type: string
        template:
          minLength: 1
          type: string
      required:
      - name
      type: object
    AuthenticatorEndpointGDTCStage:
      description: AuthenticatorEndpointGDTCStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        credentials:
          key: ""
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          nullable: true
          type: string
        credentials:
          additionalProperties: {}
          type: object
      required:
      - component
      - credentials
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    AuthenticatorEndpointGDTCStageRequest:
      description: AuthenticatorEndpointGDTCStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        credentials:
          key: ""
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        credentials:
          additionalProperties: {}
          type: object
      required:
      - credentials
      - name
      type: object
    AuthenticatorSMSChallenge:
      description: SMS Setup challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-authenticator-sms
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        phone_number_required:
          default: true
          type: boolean
      required:
      - pending_user
      - pending_user_avatar
      type: object
    AuthenticatorSMSChallengeResponseRequest:
      description: "SMS Challenge response, device is set by get_response_instance"
      properties:
        component:
          default: ak-stage-authenticator-sms
          minLength: 1
          type: string
        code:
          type: integer
        phone_number:
          minLength: 1
          type: string
      type: object
    AuthenticatorSMSStage:
      description: AuthenticatorSMSStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        auth_type: null
        mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        auth: auth
        auth_password: auth_password
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        verify_only: true
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        provider: null
        from_number: from_number
        name: name
        account_sid: account_sid
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          nullable: true
          type: string
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        from_number:
          type: string
        account_sid:
          type: string
        auth:
          type: string
        auth_password:
          type: string
        auth_type:
          $ref: '#/components/schemas/AuthTypeEnum'
        verify_only:
          description: "When enabled, the Phone number is only used during enrollment\
            \ to verify the users authenticity. Only a hash of the phone number is\
            \ saved to ensure it is not reused in the future."
          type: boolean
        mapping:
          description: Optionally modify the payload being sent to custom providers.
          format: uuid
          nullable: true
          type: string
      required:
      - account_sid
      - auth
      - component
      - from_number
      - meta_model_name
      - name
      - pk
      - provider
      - verbose_name
      - verbose_name_plural
      type: object
    AuthenticatorSMSStageRequest:
      description: AuthenticatorSMSStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        auth_type: null
        mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provider: null
        auth: auth
        from_number: from_number
        name: name
        account_sid: account_sid
        auth_password: auth_password
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        verify_only: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        from_number:
          minLength: 1
          type: string
        account_sid:
          minLength: 1
          type: string
        auth:
          minLength: 1
          type: string
        auth_password:
          type: string
        auth_type:
          $ref: '#/components/schemas/AuthTypeEnum'
        verify_only:
          description: "When enabled, the Phone number is only used during enrollment\
            \ to verify the users authenticity. Only a hash of the phone number is\
            \ saved to ensure it is not reused in the future."
          type: boolean
        mapping:
          description: Optionally modify the payload being sent to custom providers.
          format: uuid
          nullable: true
          type: string
      required:
      - account_sid
      - auth
      - from_number
      - name
      - provider
      type: object
    AuthenticatorStaticChallenge:
      description: Static authenticator challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-authenticator-static
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        codes:
          items:
            type: string
          type: array
      required:
      - codes
      - pending_user
      - pending_user_avatar
      type: object
    AuthenticatorStaticChallengeResponseRequest:
      description: Pseudo class for static response
      properties:
        component:
          default: ak-stage-authenticator-static
          minLength: 1
          type: string
      type: object
    AuthenticatorStaticStage:
      description: AuthenticatorStaticStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        token_count: 171976544
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        token_length: 1294386358
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          nullable: true
          type: string
        token_count:
          maximum: 2147483647
          minimum: 0
          type: integer
        token_length:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    AuthenticatorStaticStageRequest:
      description: AuthenticatorStaticStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        token_count: 171976544
        token_length: 1294386358
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        token_count:
          maximum: 2147483647
          minimum: 0
          type: integer
        token_length:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - name
      type: object
    AuthenticatorTOTPChallenge:
      description: TOTP Setup challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-authenticator-totp
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        config_url:
          type: string
      required:
      - config_url
      - pending_user
      - pending_user_avatar
      type: object
    AuthenticatorTOTPChallengeResponseRequest:
      description: "TOTP Challenge response, device is set by get_response_instance"
      properties:
        component:
          default: ak-stage-authenticator-totp
          minLength: 1
          type: string
        code:
          type: integer
      required:
      - code
      type: object
    AuthenticatorTOTPStage:
      description: AuthenticatorTOTPStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        digits: null
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          nullable: true
          type: string
        digits:
          $ref: '#/components/schemas/DigitsEnum'
      required:
      - component
      - digits
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    AuthenticatorTOTPStageRequest:
      description: AuthenticatorTOTPStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        name: name
        digits: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        digits:
          $ref: '#/components/schemas/DigitsEnum'
      required:
      - digits
      - name
      type: object
    AuthenticatorValidateStage:
      description: AuthenticatorValidateStage Serializer
      example:
        webauthn_user_verification: ""
        webauthn_allowed_device_types:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        device_classes:
        - null
        - null
        webauthn_allowed_device_types_obj:
        - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
        - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
        last_auth_threshold: last_auth_threshold
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        component: component
        verbose_name: verbose_name
        not_configured_action: null
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configuration_stages:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        not_configured_action:
          $ref: '#/components/schemas/NotConfiguredActionEnum'
        device_classes:
          description: Device classes which can be used to authenticate
          items:
            $ref: '#/components/schemas/DeviceClassesEnum'
          type: array
        configuration_stages:
          description: "Stages used to configure Authenticator when user doesn't have\
            \ any compatible devices. After this configuration Stage passes, the user\
            \ is not prompted again."
          items:
            format: uuid
            type: string
          type: array
        last_auth_threshold:
          description: "If any of the user's device has been used within this threshold,\
            \ this stage will be skipped"
          type: string
        webauthn_user_verification:
          allOf:
          - $ref: '#/components/schemas/UserVerificationEnum'
          description: Enforce user verification for WebAuthn devices.
        webauthn_allowed_device_types:
          items:
            format: uuid
            type: string
          type: array
        webauthn_allowed_device_types_obj:
          items:
            $ref: '#/components/schemas/WebAuthnDeviceType'
          readOnly: true
          type: array
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      - webauthn_allowed_device_types_obj
      type: object
    AuthenticatorValidateStageRequest:
      description: AuthenticatorValidateStage Serializer
      example:
        webauthn_user_verification: ""
        not_configured_action: null
        webauthn_allowed_device_types:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        device_classes:
        - null
        - null
        name: name
        last_auth_threshold: last_auth_threshold
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        configuration_stages:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        not_configured_action:
          $ref: '#/components/schemas/NotConfiguredActionEnum'
        device_classes:
          description: Device classes which can be used to authenticate
          items:
            $ref: '#/components/schemas/DeviceClassesEnum'
          type: array
        configuration_stages:
          description: "Stages used to configure Authenticator when user doesn't have\
            \ any compatible devices. After this configuration Stage passes, the user\
            \ is not prompted again."
          items:
            format: uuid
            type: string
          type: array
        last_auth_threshold:
          description: "If any of the user's device has been used within this threshold,\
            \ this stage will be skipped"
          minLength: 1
          type: string
        webauthn_user_verification:
          allOf:
          - $ref: '#/components/schemas/UserVerificationEnum'
          description: Enforce user verification for WebAuthn devices.
        webauthn_allowed_device_types:
          items:
            format: uuid
            type: string
          type: array
      required:
      - name
      type: object
    AuthenticatorValidationChallenge:
      description: Authenticator challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-authenticator-validate
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        device_challenges:
          items:
            $ref: '#/components/schemas/DeviceChallenge'
          type: array
        configuration_stages:
          items:
            $ref: '#/components/schemas/SelectableStage'
          type: array
      required:
      - configuration_stages
      - device_challenges
      - pending_user
      - pending_user_avatar
      type: object
    AuthenticatorValidationChallengeResponseRequest:
      description: Challenge used for Code-based and WebAuthn authenticators
      properties:
        component:
          default: ak-stage-authenticator-validate
          minLength: 1
          type: string
        selected_challenge:
          $ref: '#/components/schemas/DeviceChallengeRequest'
        selected_stage:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        webauthn:
          additionalProperties: {}
          type: object
        duo:
          type: integer
      type: object
    AuthenticatorWebAuthnChallenge:
      description: WebAuthn Challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-authenticator-webauthn
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        registration:
          additionalProperties: {}
          type: object
      required:
      - pending_user
      - pending_user_avatar
      - registration
      type: object
    AuthenticatorWebAuthnChallengeResponseRequest:
      description: WebAuthn Challenge response
      properties:
        component:
          default: ak-stage-authenticator-webauthn
          minLength: 1
          type: string
        response:
          additionalProperties: {}
          type: object
      required:
      - response
      type: object
    AuthenticatorWebAuthnStage:
      description: AuthenticatorWebAuthnStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        device_type_restrictions_obj:
        - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
        - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
        verbose_name_plural: verbose_name_plural
        user_verification: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        authenticator_attachment: ""
        resident_key_requirement: null
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        device_type_restrictions:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        max_attempts: 171976544
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          nullable: true
          type: string
        user_verification:
          $ref: '#/components/schemas/UserVerificationEnum'
        authenticator_attachment:
          allOf:
          - $ref: '#/components/schemas/AuthenticatorAttachmentEnum'
          nullable: true
        resident_key_requirement:
          $ref: '#/components/schemas/ResidentKeyRequirementEnum'
        device_type_restrictions:
          items:
            format: uuid
            type: string
          type: array
        device_type_restrictions_obj:
          items:
            $ref: '#/components/schemas/WebAuthnDeviceType'
          readOnly: true
          type: array
        max_attempts:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - component
      - device_type_restrictions_obj
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    AuthenticatorWebAuthnStageRequest:
      description: AuthenticatorWebAuthnStage Serializer
      example:
        resident_key_requirement: null
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        device_type_restrictions:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        max_attempts: 171976544
        name: name
        user_verification: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        authenticator_attachment: ""
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        user_verification:
          $ref: '#/components/schemas/UserVerificationEnum'
        authenticator_attachment:
          allOf:
          - $ref: '#/components/schemas/AuthenticatorAttachmentEnum'
          nullable: true
        resident_key_requirement:
          $ref: '#/components/schemas/ResidentKeyRequirementEnum'
        device_type_restrictions:
          items:
            format: uuid
            type: string
          type: array
        max_attempts:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - name
      type: object
    AuthorizationCodeAuthMethodEnum:
      enum:
      - basic_auth
      - post_body
      type: string
    AutoSubmitChallengeResponseRequest:
      description: Pseudo class for autosubmit response
      properties:
        component:
          default: ak-stage-autosubmit
          minLength: 1
          type: string
      type: object
    Autocomplete:
      additionalProperties: {}
      type: object
    AutosubmitChallenge:
      description: Autosubmit challenge used to send and navigate a POST request
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-autosubmit
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        url:
          type: string
        attrs:
          additionalProperties:
            type: string
          type: object
        title:
          type: string
      required:
      - attrs
      - url
      type: object
    BackendsEnum:
      enum:
      - authentik.core.auth.InbuiltBackend
      - authentik.core.auth.TokenBackend
      - authentik.sources.ldap.auth.LDAPBackend
      - authentik.sources.kerberos.auth.KerberosBackend
      type: string
    BindingTypeEnum:
      enum:
      - REDIRECT
      - POST
      - POST_AUTO
      type: string
    BlueprintFile:
      example:
        path: path
        meta: ""
        last_m: 2000-01-23T04:56:07.000+00:00
        hash: hash
      properties:
        path:
          type: string
        last_m:
          format: date-time
          type: string
        hash:
          type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          readOnly: true
      required:
      - hash
      - last_m
      - meta
      - path
      type: object
    BlueprintInstance:
      description: Info about a single blueprint instance file
      example:
        path: path
        metadata:
          key: ""
        last_applied_hash: last_applied_hash
        managed_models:
        - managed_models
        - managed_models
        last_applied: 2000-01-23T04:56:07.000+00:00
        name: name
        context:
          key: ""
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enabled: true
        content: content
        status: ""
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Instance uuid
          type: string
        name:
          type: string
        path:
          default: ""
          type: string
        context:
          additionalProperties: {}
          type: object
        last_applied:
          format: date-time
          readOnly: true
          type: string
        last_applied_hash:
          readOnly: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/BlueprintInstanceStatusEnum'
          readOnly: true
        enabled:
          type: boolean
        managed_models:
          items:
            type: string
          readOnly: true
          type: array
        metadata:
          additionalProperties: {}
          readOnly: true
          type: object
        content:
          type: string
      required:
      - last_applied
      - last_applied_hash
      - managed_models
      - metadata
      - name
      - pk
      - status
      type: object
    BlueprintInstanceRequest:
      description: Info about a single blueprint instance file
      example:
        path: path
        name: name
        context:
          key: ""
        enabled: true
        content: content
      properties:
        name:
          minLength: 1
          type: string
        path:
          default: ""
          type: string
        context:
          additionalProperties: {}
          type: object
        enabled:
          type: boolean
        content:
          type: string
      required:
      - name
      type: object
    BlueprintInstanceStatusEnum:
      enum:
      - successful
      - warning
      - error
      - orphaned
      - unknown
      type: string
    Brand:
      description: Brand Serializer
      example:
        branding_logo: branding_logo
        default_application: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_certificates:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_device_code: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        branding_default_flow_background: branding_default_flow_background
        flow_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_recovery: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        default: true
        branding_custom_css: branding_custom_css
        flow_invalidation: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        domain: domain
        flow_unenrollment: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attributes:
          key: ""
        branding_title: branding_title
        branding_favicon: branding_favicon
        flow_user_settings: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        brand_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        web_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        brand_uuid:
          format: uuid
          readOnly: true
          type: string
        domain:
          description: "Domain that activates this brand. Can be a superset, i.e.\
            \ `a.b` for `aa.b` and `ba.b`"
          type: string
        default:
          type: boolean
        branding_title:
          type: string
        branding_logo:
          type: string
        branding_favicon:
          type: string
        branding_custom_css:
          type: string
        branding_default_flow_background:
          type: string
        flow_authentication:
          format: uuid
          nullable: true
          type: string
        flow_invalidation:
          format: uuid
          nullable: true
          type: string
        flow_recovery:
          format: uuid
          nullable: true
          type: string
        flow_unenrollment:
          format: uuid
          nullable: true
          type: string
        flow_user_settings:
          format: uuid
          nullable: true
          type: string
        flow_device_code:
          format: uuid
          nullable: true
          type: string
        default_application:
          description: "When set, external users will be redirected to this application\
            \ after authenticating."
          format: uuid
          nullable: true
          type: string
        web_certificate:
          description: Web Certificate used by the authentik Core webserver.
          format: uuid
          nullable: true
          type: string
        client_certificates:
          description: Certificates used for client authentication.
          items:
            format: uuid
            type: string
          type: array
        attributes:
          additionalProperties: {}
          type: object
      required:
      - brand_uuid
      - domain
      type: object
    BrandRequest:
      description: Brand Serializer
      example:
        branding_logo: branding_logo
        default_application: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_certificates:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_device_code: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        branding_default_flow_background: branding_default_flow_background
        flow_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_recovery: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        default: true
        branding_custom_css: branding_custom_css
        flow_invalidation: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        domain: domain
        flow_unenrollment: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attributes:
          key: ""
        branding_title: branding_title
        branding_favicon: branding_favicon
        flow_user_settings: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        web_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        domain:
          description: "Domain that activates this brand. Can be a superset, i.e.\
            \ `a.b` for `aa.b` and `ba.b`"
          minLength: 1
          type: string
        default:
          type: boolean
        branding_title:
          minLength: 1
          type: string
        branding_logo:
          minLength: 1
          type: string
        branding_favicon:
          minLength: 1
          type: string
        branding_custom_css:
          type: string
        branding_default_flow_background:
          minLength: 1
          type: string
        flow_authentication:
          format: uuid
          nullable: true
          type: string
        flow_invalidation:
          format: uuid
          nullable: true
          type: string
        flow_recovery:
          format: uuid
          nullable: true
          type: string
        flow_unenrollment:
          format: uuid
          nullable: true
          type: string
        flow_user_settings:
          format: uuid
          nullable: true
          type: string
        flow_device_code:
          format: uuid
          nullable: true
          type: string
        default_application:
          description: "When set, external users will be redirected to this application\
            \ after authenticating."
          format: uuid
          nullable: true
          type: string
        web_certificate:
          description: Web Certificate used by the authentik Core webserver.
          format: uuid
          nullable: true
          type: string
        client_certificates:
          description: Certificates used for client authentication.
          items:
            format: uuid
            type: string
          type: array
        attributes:
          additionalProperties: {}
          type: object
      required:
      - domain
      type: object
    Cache:
      description: Generic cache stats for an object
      example:
        count: 0
      properties:
        count:
          readOnly: true
          type: integer
      required:
      - count
      type: object
    CapabilitiesEnum:
      enum:
      - can_save_media
      - can_geo_ip
      - can_asn
      - can_impersonate
      - can_debug
      - is_enterprise
      type: string
    CaptchaChallenge:
      description: Site public key
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-captcha
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        site_key:
          type: string
        js_url:
          type: string
        interactive:
          type: boolean
      required:
      - interactive
      - js_url
      - pending_user
      - pending_user_avatar
      - site_key
      type: object
    CaptchaChallengeResponseRequest:
      description: Validate captcha token
      properties:
        component:
          default: ak-stage-captcha
          minLength: 1
          type: string
        token:
          minLength: 1
          type: string
      required:
      - token
      type: object
    CaptchaStage:
      description: CaptchaStage Serializer
      example:
        public_key: public_key
        error_on_invalid_score: true
        verbose_name_plural: verbose_name_plural
        api_url: api_url
        interactive: true
        score_min_threshold: 0.8008281904610115
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        name: name
        js_url: js_url
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        score_max_threshold: 6.027456183070403
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        public_key:
          description: "Public key, acquired your captcha Provider."
          type: string
        js_url:
          type: string
        api_url:
          type: string
        interactive:
          type: boolean
        score_min_threshold:
          format: double
          type: number
        score_max_threshold:
          format: double
          type: number
        error_on_invalid_score:
          description: "When enabled and the received captcha score is outside of\
            \ the given threshold, the stage will show an error message. When not\
            \ enabled, the flow will continue, but the data from the captcha will\
            \ be available in the context for policy decisions"
          type: boolean
      required:
      - component
      - meta_model_name
      - name
      - pk
      - public_key
      - verbose_name
      - verbose_name_plural
      type: object
    CaptchaStageRequest:
      description: CaptchaStage Serializer
      example:
        public_key: public_key
        error_on_invalid_score: true
        api_url: api_url
        name: name
        interactive: true
        private_key: private_key
        js_url: js_url
        score_min_threshold: 0.8008281904610115
        score_max_threshold: 6.027456183070403
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        public_key:
          description: "Public key, acquired your captcha Provider."
          minLength: 1
          type: string
        private_key:
          description: "Private key, acquired your captcha Provider."
          minLength: 1
          type: string
          writeOnly: true
        js_url:
          minLength: 1
          type: string
        api_url:
          minLength: 1
          type: string
        interactive:
          type: boolean
        score_min_threshold:
          format: double
          type: number
        score_max_threshold:
          format: double
          type: number
        error_on_invalid_score:
          description: "When enabled and the received captcha score is outside of\
            \ the given threshold, the stage will show an error message. When not\
            \ enabled, the flow will continue, but the data from the captcha will\
            \ be available in the context for policy decisions"
          type: boolean
      required:
      - name
      - private_key
      - public_key
      type: object
    CertAttributeEnum:
      enum:
      - subject
      - common_name
      - email
      type: string
    CertificateData:
      description: Get CertificateKeyPair's data
      example:
        data: data
      properties:
        data:
          readOnly: true
          type: string
      required:
      - data
      type: object
    CertificateGenerationRequest:
      description: Certificate generation parameters
      example:
        subject_alt_name: subject_alt_name
        validity_days: 0
        common_name: common_name
        alg: ""
      properties:
        common_name:
          minLength: 1
          type: string
        subject_alt_name:
          type: string
        validity_days:
          type: integer
        alg:
          allOf:
          - $ref: '#/components/schemas/AlgEnum'
      required:
      - common_name
      - validity_days
      type: object
    CertificateKeyPair:
      description: CertificateKeyPair Serializer
      example:
        certificate_download_url: certificate_download_url
        fingerprint_sha1: fingerprint_sha1
        managed: managed
        private_key_type: private_key_type
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cert_expiry: 2000-01-23T04:56:07.000+00:00
        private_key_available: true
        private_key_download_url: private_key_download_url
        fingerprint_sha256: fingerprint_sha256
        cert_subject: cert_subject
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Kp uuid
          type: string
        name:
          type: string
        fingerprint_sha256:
          description: Get certificate Hash (SHA256)
          nullable: true
          readOnly: true
          type: string
        fingerprint_sha1:
          description: Get certificate Hash (SHA1)
          nullable: true
          readOnly: true
          type: string
        cert_expiry:
          description: Get certificate expiry
          format: date-time
          nullable: true
          readOnly: true
          type: string
        cert_subject:
          description: Get certificate subject as full rfc4514
          nullable: true
          readOnly: true
          type: string
        private_key_available:
          description: Show if this keypair has a private key configured or not
          readOnly: true
          type: boolean
        private_key_type:
          description: "Get the private key's type, if set"
          nullable: true
          readOnly: true
          type: string
        certificate_download_url:
          description: Get URL to download certificate
          readOnly: true
          type: string
        private_key_download_url:
          description: Get URL to download private key
          readOnly: true
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
      required:
      - cert_expiry
      - cert_subject
      - certificate_download_url
      - fingerprint_sha1
      - fingerprint_sha256
      - managed
      - name
      - pk
      - private_key_available
      - private_key_download_url
      - private_key_type
      type: object
    CertificateKeyPairRequest:
      description: CertificateKeyPair Serializer
      example:
        certificate_data: certificate_data
        name: name
        key_data: key_data
      properties:
        name:
          minLength: 1
          type: string
        certificate_data:
          description: PEM-encoded Certificate data
          minLength: 1
          type: string
          writeOnly: true
        key_data:
          description: "Optional Private Key. If this is set, you can use this keypair\
            \ for encryption."
          type: string
          writeOnly: true
      required:
      - certificate_data
      - name
      type: object
    ChallengeTypes:
      discriminator:
        mapping:
          ak-stage-access-denied: '#/components/schemas/AccessDeniedChallenge'
          ak-source-oauth-apple: '#/components/schemas/AppleLoginChallenge'
          ak-stage-authenticator-duo: '#/components/schemas/AuthenticatorDuoChallenge'
          ak-stage-authenticator-email: '#/components/schemas/AuthenticatorEmailChallenge'
          ak-stage-authenticator-sms: '#/components/schemas/AuthenticatorSMSChallenge'
          ak-stage-authenticator-static: '#/components/schemas/AuthenticatorStaticChallenge'
          ak-stage-authenticator-totp: '#/components/schemas/AuthenticatorTOTPChallenge'
          ak-stage-authenticator-validate: '#/components/schemas/AuthenticatorValidationChallenge'
          ak-stage-authenticator-webauthn: '#/components/schemas/AuthenticatorWebAuthnChallenge'
          ak-stage-autosubmit: '#/components/schemas/AutosubmitChallenge'
          ak-stage-captcha: '#/components/schemas/CaptchaChallenge'
          ak-stage-consent: '#/components/schemas/ConsentChallenge'
          ak-stage-dummy: '#/components/schemas/DummyChallenge'
          ak-stage-email: '#/components/schemas/EmailChallenge'
          ak-stage-flow-error: '#/components/schemas/FlowErrorChallenge'
          xak-flow-frame: '#/components/schemas/FrameChallenge'
          ak-stage-identification: '#/components/schemas/IdentificationChallenge'
          ak-provider-oauth2-device-code: '#/components/schemas/OAuthDeviceCodeChallenge'
          ak-provider-oauth2-device-code-finish: '#/components/schemas/OAuthDeviceCodeFinishChallenge'
          ak-stage-password: '#/components/schemas/PasswordChallenge'
          ak-source-plex: '#/components/schemas/PlexAuthenticationChallenge'
          ak-stage-prompt: '#/components/schemas/PromptChallenge'
          xak-flow-redirect: '#/components/schemas/RedirectChallenge'
          ak-stage-session-end: '#/components/schemas/SessionEndChallenge'
          xak-flow-shell: '#/components/schemas/ShellChallenge'
          ak-stage-user-login: '#/components/schemas/UserLoginChallenge'
        propertyName: component
      oneOf:
      - $ref: '#/components/schemas/AccessDeniedChallenge'
      - $ref: '#/components/schemas/AppleLoginChallenge'
      - $ref: '#/components/schemas/AuthenticatorDuoChallenge'
      - $ref: '#/components/schemas/AuthenticatorEmailChallenge'
      - $ref: '#/components/schemas/AuthenticatorSMSChallenge'
      - $ref: '#/components/schemas/AuthenticatorStaticChallenge'
      - $ref: '#/components/schemas/AuthenticatorTOTPChallenge'
      - $ref: '#/components/schemas/AuthenticatorValidationChallenge'
      - $ref: '#/components/schemas/AuthenticatorWebAuthnChallenge'
      - $ref: '#/components/schemas/AutosubmitChallenge'
      - $ref: '#/components/schemas/CaptchaChallenge'
      - $ref: '#/components/schemas/ConsentChallenge'
      - $ref: '#/components/schemas/DummyChallenge'
      - $ref: '#/components/schemas/EmailChallenge'
      - $ref: '#/components/schemas/FlowErrorChallenge'
      - $ref: '#/components/schemas/FrameChallenge'
      - $ref: '#/components/schemas/IdentificationChallenge'
      - $ref: '#/components/schemas/OAuthDeviceCodeChallenge'
      - $ref: '#/components/schemas/OAuthDeviceCodeFinishChallenge'
      - $ref: '#/components/schemas/PasswordChallenge'
      - $ref: '#/components/schemas/PlexAuthenticationChallenge'
      - $ref: '#/components/schemas/PromptChallenge'
      - $ref: '#/components/schemas/RedirectChallenge'
      - $ref: '#/components/schemas/SessionEndChallenge'
      - $ref: '#/components/schemas/ShellChallenge'
      - $ref: '#/components/schemas/UserLoginChallenge'
    ClientTypeEnum:
      enum:
      - confidential
      - public
      type: string
    CompatibilityModeEnum:
      enum:
      - default
      - aws
      - slack
      type: string
    Config:
      description: Serialize authentik Config into DRF Object
      example:
        cache_timeout_policies: 5
        capabilities:
        - null
        - null
        cache_timeout_reputation: 5
        cache_timeout: 6
        error_reporting:
          environment: environment
          send_pii: true
          traces_sample_rate: 0.8008281904610115
          enabled: true
          sentry_dsn: sentry_dsn
        cache_timeout_flows: 1
      properties:
        error_reporting:
          $ref: '#/components/schemas/ErrorReportingConfig'
        capabilities:
          items:
            $ref: '#/components/schemas/CapabilitiesEnum'
          type: array
        cache_timeout:
          type: integer
        cache_timeout_flows:
          type: integer
        cache_timeout_policies:
          type: integer
        cache_timeout_reputation:
          type: integer
      required:
      - cache_timeout
      - cache_timeout_flows
      - cache_timeout_policies
      - cache_timeout_reputation
      - capabilities
      - error_reporting
      type: object
    ConnectionToken:
      description: ConnectionToken Serializer
      example:
        endpoint: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provider_obj: ""
        provider: 0
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endpoint_obj: ""
        user: ""
      properties:
        pk:
          format: uuid
          title: Connection token uuid
          type: string
        provider:
          type: integer
        provider_obj:
          allOf:
          - $ref: '#/components/schemas/RACProvider'
          readOnly: true
        endpoint:
          format: uuid
          type: string
        endpoint_obj:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
      required:
      - endpoint
      - endpoint_obj
      - provider
      - provider_obj
      - user
      type: object
    ConnectionTokenRequest:
      description: ConnectionToken Serializer
      example:
        endpoint: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provider: 0
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          title: Connection token uuid
          type: string
        provider:
          type: integer
        endpoint:
          format: uuid
          type: string
      required:
      - endpoint
      - provider
      type: object
    ConsentChallenge:
      description: Challenge info for consent screens
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-consent
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        header_text:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/ConsentPermission'
          type: array
        additional_permissions:
          items:
            $ref: '#/components/schemas/ConsentPermission'
          type: array
        token:
          type: string
      required:
      - additional_permissions
      - pending_user
      - pending_user_avatar
      - permissions
      - token
      type: object
    ConsentChallengeResponseRequest:
      description: "Consent challenge response, any valid response request is valid"
      properties:
        component:
          default: ak-stage-consent
          minLength: 1
          type: string
        token:
          minLength: 1
          type: string
      required:
      - token
      type: object
    ConsentPermission:
      description: Permission used for consent
      properties:
        name:
          type: string
        id:
          type: string
      required:
      - id
      - name
      type: object
    ConsentStage:
      description: ConsentStage Serializer
      example:
        mode: null
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        consent_expire_in: consent_expire_in
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        mode:
          $ref: '#/components/schemas/ConsentStageModeEnum'
        consent_expire_in:
          description: "Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3)."
          title: Consent expires in
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    ConsentStageModeEnum:
      enum:
      - always_require
      - permanent
      - expiring
      type: string
    ConsentStageRequest:
      description: ConsentStage Serializer
      example:
        mode: null
        name: name
        consent_expire_in: consent_expire_in
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        mode:
          $ref: '#/components/schemas/ConsentStageModeEnum'
        consent_expire_in:
          description: "Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          title: Consent expires in
          type: string
      required:
      - name
      type: object
    ContextualFlowInfo:
      description: Contextual flow information for a challenge
      example:
        layout: null
        background: background
        title: title
        cancel_url: cancel_url
      properties:
        title:
          type: string
        background:
          type: string
        cancel_url:
          type: string
        layout:
          $ref: '#/components/schemas/ContextualFlowInfoLayoutEnum'
      required:
      - cancel_url
      - layout
      type: object
    ContextualFlowInfoLayoutEnum:
      enum:
      - stacked
      - content_left
      - content_right
      - sidebar_left
      - sidebar_right
      type: string
    CountryCodeEnum:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - "NO"
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
    CurrentBrand:
      description: Partial brand information for styling
      example:
        branding_logo: branding_logo
        ui_footer_links:
        - name: name
          href: href
        - name: name
          href: href
        flow_device_code: flow_device_code
        matched_domain: matched_domain
        flow_authentication: flow_authentication
        flow_recovery: flow_recovery
        branding_custom_css: branding_custom_css
        flow_invalidation: flow_invalidation
        ui_theme: ""
        default_locale: default_locale
        flow_unenrollment: flow_unenrollment
        branding_title: branding_title
        branding_favicon: branding_favicon
        flow_user_settings: flow_user_settings
      properties:
        matched_domain:
          type: string
        branding_title:
          type: string
        branding_logo:
          type: string
        branding_favicon:
          type: string
        branding_custom_css:
          type: string
        ui_footer_links:
          items:
            $ref: '#/components/schemas/FooterLink'
          readOnly: true
          type: array
        ui_theme:
          allOf:
          - $ref: '#/components/schemas/UiThemeEnum'
          readOnly: true
        flow_authentication:
          type: string
        flow_invalidation:
          type: string
        flow_recovery:
          type: string
        flow_unenrollment:
          type: string
        flow_user_settings:
          type: string
        flow_device_code:
          type: string
        default_locale:
          readOnly: true
          type: string
      required:
      - branding_custom_css
      - branding_favicon
      - branding_logo
      - branding_title
      - default_locale
      - matched_domain
      - ui_footer_links
      - ui_theme
      type: object
    DeliveryMethodEnum:
      enum:
      - https://schemas.openid.net/secevent/risc/delivery-method/push
      - https://schemas.openid.net/secevent/risc/delivery-method/poll
      type: string
    DeniedActionEnum:
      enum:
      - message_continue
      - message
      - continue
      type: string
    DenyStage:
      description: DenyStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        deny_message: deny_message
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        deny_message:
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    DenyStageRequest:
      description: DenyStage Serializer
      example:
        deny_message: deny_message
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        deny_message:
          type: string
      required:
      - name
      type: object
    DetailedCountry:
      example:
        code: null
        name: name
      properties:
        code:
          $ref: '#/components/schemas/CountryCodeEnum'
        name:
          type: string
      required:
      - code
      - name
      type: object
    DetailedCountryField:
      example:
        code: null
        name: name
      properties:
        code:
          $ref: '#/components/schemas/CountryCodeEnum'
        name:
          type: string
      required:
      - code
      - name
      type: object
    DetailedCountryFieldRequest:
      properties:
        code:
          $ref: '#/components/schemas/CountryCodeEnum'
        name:
          minLength: 1
          type: string
      required:
      - code
      - name
      type: object
    Device:
      description: Serializer for authenticator devices
      example:
        verbose_name: verbose_name
        last_updated: 2000-01-23T04:56:07.000+00:00
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        created: 2000-01-23T04:56:07.000+00:00
        extra_description: extra_description
        last_used: 2000-01-23T04:56:07.000+00:00
        name: name
        external_id: external_id
        pk: pk
        type: type
        confirmed: true
      properties:
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        pk:
          type: string
        name:
          type: string
        type:
          description: Get type of device
          readOnly: true
          type: string
        confirmed:
          type: boolean
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
        last_used:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        extra_description:
          description: Get extra description
          nullable: true
          readOnly: true
          type: string
        external_id:
          description: Get external Device ID
          nullable: true
          readOnly: true
          type: string
      required:
      - confirmed
      - created
      - external_id
      - extra_description
      - last_updated
      - last_used
      - meta_model_name
      - name
      - pk
      - type
      - verbose_name
      - verbose_name_plural
      type: object
    DeviceChallenge:
      description: Single device challenge
      properties:
        device_class:
          type: string
        device_uid:
          type: string
        challenge:
          additionalProperties: {}
          type: object
        last_used:
          format: date-time
          nullable: true
          type: string
      required:
      - challenge
      - device_class
      - device_uid
      - last_used
      type: object
    DeviceChallengeRequest:
      description: Single device challenge
      properties:
        device_class:
          minLength: 1
          type: string
        device_uid:
          minLength: 1
          type: string
        challenge:
          additionalProperties: {}
          type: object
        last_used:
          format: date-time
          nullable: true
          type: string
      required:
      - challenge
      - device_class
      - device_uid
      - last_used
      type: object
    DeviceClassesEnum:
      enum:
      - static
      - totp
      - webauthn
      - duo
      - sms
      - email
      type: string
    DigestAlgorithmEnum:
      enum:
      - http://www.w3.org/2000/09/xmldsig#sha1
      - http://www.w3.org/2001/04/xmlenc#sha256
      - http://www.w3.org/2001/04/xmldsig-more#sha384
      - http://www.w3.org/2001/04/xmlenc#sha512
      type: string
    DigitsEnum:
      enum:
      - "6"
      - "8"
      type: string
    DockerServiceConnection:
      description: DockerServiceConnection Serializer
      example:
        component: component
        verbose_name: verbose_name
        tls_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        local: true
        url: url
        tls_verification: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        name:
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
        component:
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        url:
          description: "Can be in the format of 'unix://<path>' when connecting to\
            \ a local docker daemon, or 'https://<hostname>:2376' when connecting\
            \ to a remote system."
          type: string
        tls_verification:
          description: CA which the endpoint's Certificate is verified against. Can
            be left empty for no validation.
          format: uuid
          nullable: true
          type: string
        tls_authentication:
          description: Certificate/Key used for authentication. Can be left empty
            for no authentication.
          format: uuid
          nullable: true
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - url
      - verbose_name
      - verbose_name_plural
      type: object
    DockerServiceConnectionRequest:
      description: DockerServiceConnection Serializer
      example:
        tls_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        local: true
        url: url
        tls_verification: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
        url:
          description: "Can be in the format of 'unix://<path>' when connecting to\
            \ a local docker daemon, or 'https://<hostname>:2376' when connecting\
            \ to a remote system."
          minLength: 1
          type: string
        tls_verification:
          description: CA which the endpoint's Certificate is verified against. Can
            be left empty for no validation.
          format: uuid
          nullable: true
          type: string
        tls_authentication:
          description: Certificate/Key used for authentication. Can be left empty
            for no authentication.
          format: uuid
          nullable: true
          type: string
      required:
      - name
      - url
      type: object
    Domain:
      description: Domain Serializer
      example:
        is_primary: true
        domain: domain
        id: 0
        tenant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          readOnly: true
          type: integer
        domain:
          maxLength: 253
          type: string
        is_primary:
          type: boolean
        tenant:
          format: uuid
          type: string
      required:
      - domain
      - id
      - tenant
      type: object
    DomainRequest:
      description: Domain Serializer
      example:
        is_primary: true
        domain: domain
        tenant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        domain:
          maxLength: 253
          minLength: 1
          type: string
        is_primary:
          type: boolean
        tenant:
          format: uuid
          type: string
      required:
      - domain
      - tenant
      type: object
    DummyChallenge:
      description: Dummy challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-dummy
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        name:
          type: string
      required:
      - name
      type: object
    DummyChallengeResponseRequest:
      description: Dummy challenge response
      properties:
        component:
          default: ak-stage-dummy
          minLength: 1
          type: string
      type: object
    DummyPolicy:
      description: Dummy Policy Serializer
      example:
        result: true
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        execution_logging: true
        bound_to: 0
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        wait_min: 441289069
        wait_max: -1517921766
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        result:
          type: boolean
        wait_min:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        wait_max:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - bound_to
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    DummyPolicyRequest:
      description: Dummy Policy Serializer
      example:
        result: true
        execution_logging: true
        name: name
        wait_min: -1803530559
        wait_max: 441289069
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        result:
          type: boolean
        wait_min:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        wait_max:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - name
      type: object
    DummyStage:
      description: DummyStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        throw_error: true
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        throw_error:
          type: boolean
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    DummyStageRequest:
      description: DummyStage Serializer
      example:
        throw_error: true
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        throw_error:
          type: boolean
      required:
      - name
      type: object
    DuoDevice:
      description: Serializer for Duo authenticator devices
      example:
        name: name
        pk: 9
        user: ""
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          description: The human-readable name of this device.
          maxLength: 64
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
      required:
      - name
      - pk
      - user
      type: object
    DuoDeviceEnrollmentStatus:
      example:
        duo_response: null
      properties:
        duo_response:
          $ref: '#/components/schemas/DuoResponseEnum'
      required:
      - duo_response
      type: object
    DuoDeviceRequest:
      description: Serializer for Duo authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - name
      type: object
    DuoResponseEnum:
      enum:
      - success
      - waiting
      - invalid
      type: string
    EmailChallenge:
      description: Email challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-email
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
      type: object
    EmailChallengeResponseRequest:
      description: |-
        Email challenge resposen. No fields. This challenge is
        always declared invalid to give the user a chance to retry
      properties:
        component:
          default: ak-stage-email
          minLength: 1
          type: string
      type: object
    EmailDevice:
      description: Serializer for email authenticator devices
      example:
        name: name
        pk: 0
        user: ""
        email: email
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          type: string
        pk:
          readOnly: true
          title: ID
          type: integer
        email:
          format: email
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
      required:
      - email
      - name
      - pk
      - user
      type: object
    EmailDeviceRequest:
      description: Serializer for email authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - name
      type: object
    EmailStage:
      description: EmailStage Serializer
      example:
        template: template
        verbose_name_plural: verbose_name_plural
        use_global_settings: true
        use_ssl: true
        subject: subject
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        token_expiry: token_expiry
        timeout: 441289069
        use_tls: true
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        port: -1803530559
        activate_user_on_success: true
        name: name
        host: host
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        from_address: from_address
        username: username
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        use_global_settings:
          description: "When enabled, global Email connection settings will be used\
            \ and connection settings below will be ignored."
          type: boolean
        host:
          type: string
        port:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        username:
          type: string
        use_tls:
          type: boolean
        use_ssl:
          type: boolean
        timeout:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        from_address:
          format: email
          maxLength: 254
          type: string
        token_expiry:
          description: "Time the token sent is valid (Format: hours=3,minutes=17,seconds=300)."
          type: string
        subject:
          type: string
        template:
          type: string
        activate_user_on_success:
          description: Activate users upon completion of stage.
          type: boolean
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    EmailStageRequest:
      description: EmailStage Serializer
      example:
        template: template
        use_global_settings: true
        use_ssl: true
        subject: subject
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        token_expiry: token_expiry
        timeout: 441289069
        use_tls: true
        password: password
        port: -1803530559
        activate_user_on_success: true
        name: name
        host: host
        from_address: from_address
        username: username
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        use_global_settings:
          description: "When enabled, global Email connection settings will be used\
            \ and connection settings below will be ignored."
          type: boolean
        host:
          minLength: 1
          type: string
        port:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        username:
          type: string
        password:
          type: string
          writeOnly: true
        use_tls:
          type: boolean
        use_ssl:
          type: boolean
        timeout:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        from_address:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        token_expiry:
          description: "Time the token sent is valid (Format: hours=3,minutes=17,seconds=300)."
          minLength: 1
          type: string
        subject:
          minLength: 1
          type: string
        template:
          minLength: 1
          type: string
        activate_user_on_success:
          description: Activate users upon completion of stage.
          type: boolean
      required:
      - name
      type: object
    Endpoint:
      description: Endpoint Serializer
      example:
        settings:
          key: ""
        protocol: null
        provider_obj: ""
        launch_url: launch_url
        provider: 0
        maximum_connections: 441289069
        name: name
        host: host
        auth_mode: null
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          type: string
        provider:
          type: integer
        provider_obj:
          allOf:
          - $ref: '#/components/schemas/RACProvider'
          readOnly: true
        protocol:
          $ref: '#/components/schemas/ProtocolEnum'
        host:
          type: string
        settings:
          additionalProperties: {}
          type: object
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        auth_mode:
          $ref: '#/components/schemas/AuthModeEnum'
        launch_url:
          description: |-
            Build actual launch URL (the provider itself does not have one, just
            individual endpoints)
          nullable: true
          readOnly: true
          type: string
        maximum_connections:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - auth_mode
      - host
      - launch_url
      - name
      - pk
      - protocol
      - provider
      - provider_obj
      type: object
    EndpointDevice:
      description: Serializer for Endpoint authenticator devices
      example:
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          title: Uuid
          type: string
        name:
          description: The human-readable name of this device.
          maxLength: 64
          type: string
      required:
      - name
      type: object
    EndpointDeviceRequest:
      description: Serializer for Endpoint authenticator devices
      example:
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          title: Uuid
          type: string
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - name
      type: object
    EndpointRequest:
      description: Endpoint Serializer
      example:
        settings:
          key: ""
        protocol: null
        provider: 0
        maximum_connections: 441289069
        name: name
        host: host
        auth_mode: null
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        provider:
          type: integer
        protocol:
          $ref: '#/components/schemas/ProtocolEnum'
        host:
          minLength: 1
          type: string
        settings:
          additionalProperties: {}
          type: object
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        auth_mode:
          $ref: '#/components/schemas/AuthModeEnum'
        maximum_connections:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - auth_mode
      - host
      - name
      - protocol
      - provider
      type: object
    ErrorDetail:
      description: Serializer for rest_framework's error messages
      example:
        code: code
        string: string
      properties:
        string:
          type: string
        code:
          type: string
      required:
      - code
      - string
      type: object
    ErrorReportingConfig:
      description: Config for error reporting
      example:
        environment: environment
        send_pii: true
        traces_sample_rate: 0.8008281904610115
        enabled: true
        sentry_dsn: sentry_dsn
      properties:
        enabled:
          readOnly: true
          type: boolean
        sentry_dsn:
          readOnly: true
          type: string
        environment:
          readOnly: true
          type: string
        send_pii:
          readOnly: true
          type: boolean
        traces_sample_rate:
          format: double
          readOnly: true
          type: number
      required:
      - enabled
      - environment
      - send_pii
      - sentry_dsn
      - traces_sample_rate
      type: object
    Event:
      description: Event Serializer
      example:
        app: app
        expires: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        context:
          key: ""
        action: null
        client_ip: client_ip
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user:
          key: ""
        brand:
          key: ""
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Event uuid
          type: string
        user:
          additionalProperties: {}
          type: object
        action:
          $ref: '#/components/schemas/EventActions'
        app:
          type: string
        context:
          additionalProperties: {}
          type: object
        client_ip:
          nullable: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        expires:
          format: date-time
          type: string
        brand:
          additionalProperties: {}
          type: object
      required:
      - action
      - app
      - created
      - pk
      type: object
    EventActions:
      enum:
      - login
      - login_failed
      - logout
      - user_write
      - suspicious_request
      - password_set
      - secret_view
      - secret_rotate
      - invitation_used
      - authorize_application
      - source_linked
      - impersonation_started
      - impersonation_ended
      - flow_execution
      - policy_execution
      - policy_exception
      - property_mapping_exception
      - system_task_execution
      - system_task_exception
      - system_exception
      - configuration_error
      - model_created
      - model_updated
      - model_deleted
      - email_sent
      - update_available
      - custom_
      type: string
    EventMatcherPolicy:
      description: Event Matcher Policy Serializer
      example:
        app: ""
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        execution_logging: true
        bound_to: 0
        name: name
        action: ""
        client_ip: client_ip
        model: ""
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        action:
          allOf:
          - $ref: '#/components/schemas/EventActions'
          description: "Match created events with this action type. When left empty,\
            \ all action types will be matched."
          nullable: true
        client_ip:
          description: "Matches Event's Client IP (strict matching, for network matching\
            \ use an Expression Policy)"
          nullable: true
          type: string
        app:
          allOf:
          - $ref: '#/components/schemas/AppEnum'
          description: "Match events created by selected application. When left empty,\
            \ all applications are matched."
          nullable: true
        model:
          allOf:
          - $ref: '#/components/schemas/ModelEnum'
          description: "Match events created by selected model. When left empty, all\
            \ models are matched. When an app is selected, all the application's models\
            \ are matched."
          nullable: true
      required:
      - bound_to
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    EventMatcherPolicyRequest:
      description: Event Matcher Policy Serializer
      example:
        app: ""
        execution_logging: true
        name: name
        action: ""
        client_ip: client_ip
        model: ""
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        action:
          allOf:
          - $ref: '#/components/schemas/EventActions'
          description: "Match created events with this action type. When left empty,\
            \ all action types will be matched."
          nullable: true
        client_ip:
          description: "Matches Event's Client IP (strict matching, for network matching\
            \ use an Expression Policy)"
          minLength: 1
          nullable: true
          type: string
        app:
          allOf:
          - $ref: '#/components/schemas/AppEnum'
          description: "Match events created by selected application. When left empty,\
            \ all applications are matched."
          nullable: true
        model:
          allOf:
          - $ref: '#/components/schemas/ModelEnum'
          description: "Match events created by selected model. When left empty, all\
            \ models are matched. When an app is selected, all the application's models\
            \ are matched."
          nullable: true
      required:
      - name
      type: object
    EventRequest:
      description: Event Serializer
      example:
        app: app
        expires: 2000-01-23T04:56:07.000+00:00
        context:
          key: ""
        action: null
        client_ip: client_ip
        user:
          key: ""
        brand:
          key: ""
      properties:
        user:
          additionalProperties: {}
          type: object
        action:
          $ref: '#/components/schemas/EventActions'
        app:
          minLength: 1
          type: string
        context:
          additionalProperties: {}
          type: object
        client_ip:
          minLength: 1
          nullable: true
          type: string
        expires:
          format: date-time
          type: string
        brand:
          additionalProperties: {}
          type: object
      required:
      - action
      - app
      type: object
    EventTopPerUser:
      description: Response object of Event's top_per_user
      example:
        unique_users: 6
        application:
          key: ""
        counted_events: 0
      properties:
        application:
          additionalProperties: {}
          type: object
        counted_events:
          type: integer
        unique_users:
          type: integer
      required:
      - application
      - counted_events
      - unique_users
      type: object
    EventVolume:
      description: Count of events of action created on day
      example:
        count: 0
        action: null
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        action:
          $ref: '#/components/schemas/EventActions'
        time:
          format: date-time
          type: string
        count:
          type: integer
      required:
      - action
      - count
      - time
      type: object
    EventsRequestedEnum:
      enum:
      - https://schemas.openid.net/secevent/caep/event-type/session-revoked
      - https://schemas.openid.net/secevent/caep/event-type/credential-change
      - https://schemas.openid.net/secevent/ssf/event-type/verification
      type: string
    ExpiringBaseGrantModel:
      description: Serializer for BaseGrantModel and ExpiringBaseGrant
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        is_expired: true
        provider:
          verbose_name_plural: verbose_name_plural
          signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          client_type: ""
          sub_mode: ""
          client_id: client_id
          jwt_federation_sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_token_validity: refresh_token_validity
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          access_code_validity: access_code_validity
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          issuer_mode: ""
          client_secret: client_secret
          jwt_federation_providers:
          - 1
          - 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redirect_uris:
          - matching_mode: null
            url: url
          - matching_mode: null
            url: url
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          include_claims_in_id_token: true
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          access_token_validity: access_token_validity
          name: name
          encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 6
        scope:
        - scope
        - scope
        pk: 0
        user:
          is_active: true
          is_superuser: true
          last_login: 2000-01-23T04:56:07.000+00:00
          password_change_date: 2000-01-23T04:56:07.000+00:00
          groups:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: avatar
          type: null
          groups_obj:
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uid: uid
          path: path
          name: name
          attributes:
            key: ""
          pk: 6
          date_joined: 2000-01-23T04:56:07.000+00:00
          email: email
          username: username
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        provider:
          $ref: '#/components/schemas/OAuth2Provider'
        user:
          $ref: '#/components/schemas/User'
        is_expired:
          description: Check if token is expired yet.
          readOnly: true
          type: boolean
        expires:
          format: date-time
          nullable: true
          type: string
        scope:
          items:
            type: string
          type: array
      required:
      - is_expired
      - pk
      - provider
      - scope
      - user
      type: object
    ExpressionPolicy:
      description: Group Membership Policy Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        execution_logging: true
        bound_to: 0
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        expression:
          type: string
      required:
      - bound_to
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    ExpressionPolicyRequest:
      description: Group Membership Policy Serializer
      example:
        expression: expression
        execution_logging: true
        name: name
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    ExtraRoleObjectPermission:
      description: User permission with additional object-related data
      example:
        app_label: app_label
        codename: codename
        model_verbose: model_verbose
        name: name
        object_description: object_description
        model: model
        id: 0
        app_label_verbose: app_label_verbose
        object_pk: object_pk
      properties:
        id:
          readOnly: true
          type: integer
        codename:
          readOnly: true
          type: string
        model:
          readOnly: true
          title: Python model class name
          type: string
        app_label:
          readOnly: true
          type: string
        object_pk:
          type: string
        name:
          readOnly: true
          type: string
        app_label_verbose:
          description: Get app label from permission's model
          readOnly: true
          type: string
        model_verbose:
          description: Get model label from permission's model
          readOnly: true
          type: string
        object_description:
          description: |-
            Get model description from attached model. This operation takes at least
            one additional query, and the description is only shown if the user/role has the
            view_ permission on the object
          nullable: true
          readOnly: true
          type: string
      required:
      - app_label
      - app_label_verbose
      - codename
      - id
      - model
      - model_verbose
      - name
      - object_description
      - object_pk
      type: object
    ExtraRoleObjectPermissionRequest:
      description: User permission with additional object-related data
      example:
        object_pk: object_pk
      properties:
        object_pk:
          minLength: 1
          type: string
      required:
      - object_pk
      type: object
    ExtraUserObjectPermission:
      description: User permission with additional object-related data
      example:
        app_label: app_label
        codename: codename
        model_verbose: model_verbose
        name: name
        object_description: object_description
        model: model
        id: 0
        app_label_verbose: app_label_verbose
        object_pk: object_pk
      properties:
        id:
          readOnly: true
          type: integer
        codename:
          readOnly: true
          type: string
        model:
          readOnly: true
          title: Python model class name
          type: string
        app_label:
          readOnly: true
          type: string
        object_pk:
          type: string
        name:
          readOnly: true
          type: string
        app_label_verbose:
          description: Get app label from permission's model
          readOnly: true
          type: string
        model_verbose:
          description: Get model label from permission's model
          readOnly: true
          type: string
        object_description:
          description: |-
            Get model description from attached model. This operation takes at least
            one additional query, and the description is only shown if the user/role has the
            view_ permission on the object
          nullable: true
          readOnly: true
          type: string
      required:
      - app_label
      - app_label_verbose
      - codename
      - id
      - model
      - model_verbose
      - name
      - object_description
      - object_pk
      type: object
    ExtraUserObjectPermissionRequest:
      description: User permission with additional object-related data
      example:
        object_pk: object_pk
      properties:
        object_pk:
          minLength: 1
          type: string
      required:
      - object_pk
      type: object
    FilePathRequest:
      description: Serializer to upload file
      example:
        url: url
      properties:
        url:
          minLength: 1
          type: string
      required:
      - url
      type: object
    FileUploadRequest:
      description: Serializer to upload file
      properties:
        file:
          format: binary
          type: string
        clear:
          default: false
          type: boolean
      type: object
    Flow:
      description: Flow Serializer
      example:
        compatibility_mode: true
        denied_action: ""
        policies:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        policy_engine_mode: null
        layout: null
        policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        background: background
        name: name
        stages:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        export_url: export_url
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        designation: ""
        cache_count: 0
        slug: slug
        authentication: ""
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Flow uuid
          type: string
        policybindingmodel_ptr_id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        slug:
          description: Visible in the URL.
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        title:
          description: Shown as the Title in Flow pages.
          type: string
        designation:
          allOf:
          - $ref: '#/components/schemas/FlowDesignationEnum'
          description: "Decides what this Flow is used for. For example, the Authentication\
            \ flow is redirect to when an un-authenticated user visits authentik."
        background:
          description: |-
            Get the URL to the background image. If the name is /static or starts with http
            it is returned as-is
          readOnly: true
          type: string
        stages:
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        policies:
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        cache_count:
          description: Get count of cached flows
          readOnly: true
          type: integer
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        compatibility_mode:
          description: "Enable compatibility mode, increases compatibility with password\
            \ managers on mobile devices."
          type: boolean
        export_url:
          description: Get export URL for flow
          readOnly: true
          type: string
        layout:
          $ref: '#/components/schemas/FlowLayoutEnum'
        denied_action:
          allOf:
          - $ref: '#/components/schemas/DeniedActionEnum'
          description: Configure what should happen when a flow denies access to a
            user.
        authentication:
          allOf:
          - $ref: '#/components/schemas/AuthenticationEnum'
          description: Required level of authentication and authorization to access
            a flow.
      required:
      - background
      - cache_count
      - designation
      - export_url
      - name
      - pk
      - policies
      - policybindingmodel_ptr_id
      - slug
      - stages
      - title
      type: object
    FlowChallengeResponseRequest:
      discriminator:
        mapping:
          ak-source-oauth-apple: '#/components/schemas/AppleChallengeResponseRequest'
          ak-stage-authenticator-duo: '#/components/schemas/AuthenticatorDuoChallengeResponseRequest'
          ak-stage-authenticator-email: '#/components/schemas/AuthenticatorEmailChallengeResponseRequest'
          ak-stage-authenticator-sms: '#/components/schemas/AuthenticatorSMSChallengeResponseRequest'
          ak-stage-authenticator-static: '#/components/schemas/AuthenticatorStaticChallengeResponseRequest'
          ak-stage-authenticator-totp: '#/components/schemas/AuthenticatorTOTPChallengeResponseRequest'
          ak-stage-authenticator-validate: '#/components/schemas/AuthenticatorValidationChallengeResponseRequest'
          ak-stage-authenticator-webauthn: '#/components/schemas/AuthenticatorWebAuthnChallengeResponseRequest'
          ak-stage-autosubmit: '#/components/schemas/AutoSubmitChallengeResponseRequest'
          ak-stage-captcha: '#/components/schemas/CaptchaChallengeResponseRequest'
          ak-stage-consent: '#/components/schemas/ConsentChallengeResponseRequest'
          ak-stage-dummy: '#/components/schemas/DummyChallengeResponseRequest'
          ak-stage-email: '#/components/schemas/EmailChallengeResponseRequest'
          xak-flow-frame: '#/components/schemas/FrameChallengeResponseRequest'
          ak-stage-identification: '#/components/schemas/IdentificationChallengeResponseRequest'
          ak-provider-oauth2-device-code: '#/components/schemas/OAuthDeviceCodeChallengeResponseRequest'
          ak-provider-oauth2-device-code-finish: '#/components/schemas/OAuthDeviceCodeFinishChallengeResponseRequest'
          ak-stage-password: '#/components/schemas/PasswordChallengeResponseRequest'
          ak-source-plex: '#/components/schemas/PlexAuthenticationChallengeResponseRequest'
          ak-stage-prompt: '#/components/schemas/PromptChallengeResponseRequest'
          xak-flow-redirect: '#/components/schemas/RedirectChallengeResponseRequest'
          ak-stage-user-login: '#/components/schemas/UserLoginChallengeResponseRequest'
        propertyName: component
      oneOf:
      - $ref: '#/components/schemas/AppleChallengeResponseRequest'
      - $ref: '#/components/schemas/AuthenticatorDuoChallengeResponseRequest'
      - $ref: '#/components/schemas/AuthenticatorEmailChallengeResponseRequest'
      - $ref: '#/components/schemas/AuthenticatorSMSChallengeResponseRequest'
      - $ref: '#/components/schemas/AuthenticatorStaticChallengeResponseRequest'
      - $ref: '#/components/schemas/AuthenticatorTOTPChallengeResponseRequest'
      - $ref: '#/components/schemas/AuthenticatorValidationChallengeResponseRequest'
      - $ref: '#/components/schemas/AuthenticatorWebAuthnChallengeResponseRequest'
      - $ref: '#/components/schemas/AutoSubmitChallengeResponseRequest'
      - $ref: '#/components/schemas/CaptchaChallengeResponseRequest'
      - $ref: '#/components/schemas/ConsentChallengeResponseRequest'
      - $ref: '#/components/schemas/DummyChallengeResponseRequest'
      - $ref: '#/components/schemas/EmailChallengeResponseRequest'
      - $ref: '#/components/schemas/FrameChallengeResponseRequest'
      - $ref: '#/components/schemas/IdentificationChallengeResponseRequest'
      - $ref: '#/components/schemas/OAuthDeviceCodeChallengeResponseRequest'
      - $ref: '#/components/schemas/OAuthDeviceCodeFinishChallengeResponseRequest'
      - $ref: '#/components/schemas/PasswordChallengeResponseRequest'
      - $ref: '#/components/schemas/PlexAuthenticationChallengeResponseRequest'
      - $ref: '#/components/schemas/PromptChallengeResponseRequest'
      - $ref: '#/components/schemas/RedirectChallengeResponseRequest'
      - $ref: '#/components/schemas/UserLoginChallengeResponseRequest'
    FlowDesignationEnum:
      enum:
      - authentication
      - authorization
      - invalidation
      - enrollment
      - unenrollment
      - recovery
      - stage_configuration
      type: string
    FlowDiagram:
      description: response of the flow's diagram action
      example:
        diagram: diagram
      properties:
        diagram:
          readOnly: true
          type: string
      required:
      - diagram
      type: object
    FlowErrorChallenge:
      description: |-
        Challenge class when an unhandled error occurs during a stage. Normal users
        are shown an error message, superusers are shown a full stacktrace.
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-flow-error
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        request_id:
          type: string
        error:
          type: string
        traceback:
          type: string
      required:
      - request_id
      type: object
    FlowImportResult:
      description: Logs of an attempted flow import
      example:
        success: true
        logs:
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        logs:
          items:
            $ref: '#/components/schemas/LogEvent'
          readOnly: true
          type: array
        success:
          readOnly: true
          type: boolean
      required:
      - logs
      - success
      type: object
    FlowInspection:
      description: Serializer for inspect endpoint
      example:
        current_plan:
          session_id: session_id
          next_planned_stage: ""
          current_stage: ""
          plan_context:
            key: ""
        plans:
        - session_id: session_id
          next_planned_stage: ""
          current_stage: ""
          plan_context:
            key: ""
        - session_id: session_id
          next_planned_stage: ""
          current_stage: ""
          plan_context:
            key: ""
        is_completed: true
      properties:
        plans:
          items:
            $ref: '#/components/schemas/FlowInspectorPlan'
          type: array
        current_plan:
          $ref: '#/components/schemas/FlowInspectorPlan'
        is_completed:
          type: boolean
      required:
      - is_completed
      - plans
      type: object
    FlowInspectorPlan:
      description: Serializer for an active FlowPlan
      example:
        session_id: session_id
        next_planned_stage: ""
        current_stage: ""
        plan_context:
          key: ""
      properties:
        current_stage:
          allOf:
          - $ref: '#/components/schemas/FlowStageBinding'
          readOnly: true
        next_planned_stage:
          allOf:
          - $ref: '#/components/schemas/FlowStageBinding'
          readOnly: true
        plan_context:
          additionalProperties: {}
          description: "Get the plan's context, sanitized"
          readOnly: true
          type: object
        session_id:
          description: Get a unique session ID
          readOnly: true
          type: string
      required:
      - current_stage
      - next_planned_stage
      - plan_context
      - session_id
      type: object
    FlowLayoutEnum:
      enum:
      - stacked
      - content_left
      - content_right
      - sidebar_left
      - sidebar_right
      type: string
    FlowRequest:
      description: Flow Serializer
      example:
        policy_engine_mode: null
        compatibility_mode: true
        layout: null
        denied_action: ""
        name: name
        designation: ""
        title: title
        slug: slug
        authentication: ""
      properties:
        name:
          minLength: 1
          type: string
        slug:
          description: Visible in the URL.
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        title:
          description: Shown as the Title in Flow pages.
          minLength: 1
          type: string
        designation:
          allOf:
          - $ref: '#/components/schemas/FlowDesignationEnum'
          description: "Decides what this Flow is used for. For example, the Authentication\
            \ flow is redirect to when an un-authenticated user visits authentik."
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        compatibility_mode:
          description: "Enable compatibility mode, increases compatibility with password\
            \ managers on mobile devices."
          type: boolean
        layout:
          $ref: '#/components/schemas/FlowLayoutEnum'
        denied_action:
          allOf:
          - $ref: '#/components/schemas/DeniedActionEnum'
          description: Configure what should happen when a flow denies access to a
            user.
        authentication:
          allOf:
          - $ref: '#/components/schemas/AuthenticationEnum'
          description: Required level of authentication and authorization to access
            a flow.
      required:
      - designation
      - name
      - slug
      - title
      type: object
    FlowSet:
      description: Stripped down flow serializer
      example:
        policy_engine_mode: null
        compatibility_mode: true
        layout: null
        policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        background: background
        denied_action: ""
        name: name
        export_url: export_url
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        designation: ""
        title: title
        slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Flow uuid
          type: string
        policybindingmodel_ptr_id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        slug:
          description: Visible in the URL.
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        title:
          description: Shown as the Title in Flow pages.
          type: string
        designation:
          allOf:
          - $ref: '#/components/schemas/FlowDesignationEnum'
          description: "Decides what this Flow is used for. For example, the Authentication\
            \ flow is redirect to when an un-authenticated user visits authentik."
        background:
          description: |-
            Get the URL to the background image. If the name is /static or starts with http
            it is returned as-is
          readOnly: true
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        compatibility_mode:
          description: "Enable compatibility mode, increases compatibility with password\
            \ managers on mobile devices."
          type: boolean
        export_url:
          description: Get export URL for flow
          readOnly: true
          type: string
        layout:
          $ref: '#/components/schemas/FlowLayoutEnum'
        denied_action:
          allOf:
          - $ref: '#/components/schemas/DeniedActionEnum'
          description: Configure what should happen when a flow denies access to a
            user.
      required:
      - background
      - designation
      - export_url
      - name
      - pk
      - policybindingmodel_ptr_id
      - slug
      - title
      type: object
    FlowSetRequest:
      description: Stripped down flow serializer
      example:
        policy_engine_mode: null
        compatibility_mode: true
        layout: null
        denied_action: ""
        name: name
        designation: ""
        title: title
        slug: slug
      properties:
        name:
          minLength: 1
          type: string
        slug:
          description: Visible in the URL.
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        title:
          description: Shown as the Title in Flow pages.
          minLength: 1
          type: string
        designation:
          allOf:
          - $ref: '#/components/schemas/FlowDesignationEnum'
          description: "Decides what this Flow is used for. For example, the Authentication\
            \ flow is redirect to when an un-authenticated user visits authentik."
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        compatibility_mode:
          description: "Enable compatibility mode, increases compatibility with password\
            \ managers on mobile devices."
          type: boolean
        layout:
          $ref: '#/components/schemas/FlowLayoutEnum'
        denied_action:
          allOf:
          - $ref: '#/components/schemas/DeniedActionEnum'
          description: Configure what should happen when a flow denies access to a
            user.
      required:
      - designation
      - name
      - slug
      - title
      type: object
    FlowStageBinding:
      description: FlowStageBinding Serializer
      example:
        policy_engine_mode: null
        policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        evaluate_on_plan: true
        re_evaluate_policies: true
        invalid_response_action: ""
        stage_obj: ""
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: -1803530559
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Fsb uuid
          type: string
        policybindingmodel_ptr_id:
          format: uuid
          readOnly: true
          type: string
        target:
          format: uuid
          type: string
        stage:
          format: uuid
          type: string
        stage_obj:
          allOf:
          - $ref: '#/components/schemas/Stage'
          readOnly: true
        evaluate_on_plan:
          description: Evaluate policies during the Flow planning process.
          type: boolean
        re_evaluate_policies:
          description: Evaluate policies when the Stage is presented to the user.
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        invalid_response_action:
          allOf:
          - $ref: '#/components/schemas/InvalidResponseActionEnum'
          description: "Configure how the flow executor should handle an invalid response\
            \ to a challenge. RETRY returns the error message and a similar challenge\
            \ to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT\
            \ restarts the flow while keeping the current context."
      required:
      - order
      - pk
      - policybindingmodel_ptr_id
      - stage
      - stage_obj
      - target
      type: object
    FlowStageBindingRequest:
      description: FlowStageBinding Serializer
      example:
        policy_engine_mode: null
        stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        evaluate_on_plan: true
        re_evaluate_policies: true
        invalid_response_action: ""
        target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: -1803530559
      properties:
        target:
          format: uuid
          type: string
        stage:
          format: uuid
          type: string
        evaluate_on_plan:
          description: Evaluate policies during the Flow planning process.
          type: boolean
        re_evaluate_policies:
          description: Evaluate policies when the Stage is presented to the user.
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        invalid_response_action:
          allOf:
          - $ref: '#/components/schemas/InvalidResponseActionEnum'
          description: "Configure how the flow executor should handle an invalid response\
            \ to a challenge. RETRY returns the error message and a similar challenge\
            \ to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT\
            \ restarts the flow while keeping the current context."
      required:
      - order
      - stage
      - target
      type: object
    FooterLink:
      description: Links returned in Config API
      example:
        name: name
        href: href
      properties:
        href:
          nullable: true
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
      required:
      - href
      - name
      type: object
    FrameChallenge:
      description: Challenge type to render a frame
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: xak-flow-frame
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        url:
          type: string
        loading_overlay:
          default: false
          type: boolean
        loading_text:
          type: string
      required:
      - loading_text
      - url
      type: object
    FrameChallengeResponseRequest:
      description: Base class for all challenge responses
      properties:
        component:
          default: xak-flow-frame
          minLength: 1
          type: string
      type: object
    GenericError:
      description: Generic API Error
      properties:
        detail:
          type: string
        code:
          type: string
      required:
      - detail
      type: object
    GeoIPPolicy:
      description: GeoIP Policy Serializer
      example:
        verbose_name_plural: verbose_name_plural
        execution_logging: true
        countries:
        - null
        - null
        - null
        - null
        - null
        history_max_distance_km: 1351973845562961920
        check_history_distance: true
        history_login_count: 1210617418
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        bound_to: 0
        check_impossible_travel: true
        name: name
        distance_tolerance_km: 1280358508
        asns:
        - 441289069
        - 441289069
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        countries_obj:
        - code: null
          name: name
        - code: null
          name: name
        impossible_tolerance_km: 494379917
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        asns:
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
          type: array
        countries:
          items:
            $ref: '#/components/schemas/CountryCodeEnum'
          maxItems: 249
          type: array
        countries_obj:
          items:
            $ref: '#/components/schemas/DetailedCountryField'
          readOnly: true
          type: array
        check_history_distance:
          type: boolean
        history_max_distance_km:
          format: int64
          maximum: 9223372036854775807
          minimum: 0
          type: integer
        distance_tolerance_km:
          maximum: 2147483647
          minimum: 0
          type: integer
        history_login_count:
          maximum: 2147483647
          minimum: 0
          type: integer
        check_impossible_travel:
          type: boolean
        impossible_tolerance_km:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - bound_to
      - component
      - countries
      - countries_obj
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    GeoIPPolicyRequest:
      description: GeoIP Policy Serializer
      example:
        check_history_distance: true
        history_login_count: 1280358508
        execution_logging: true
        check_impossible_travel: true
        name: name
        distance_tolerance_km: 314780940
        asns:
        - -1803530559
        - -1803530559
        countries:
        - null
        - null
        - null
        - null
        - null
        history_max_distance_km: 5559347081229897728
        impossible_tolerance_km: 1210617418
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        asns:
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
          type: array
        countries:
          items:
            $ref: '#/components/schemas/CountryCodeEnum'
          maxItems: 249
          type: array
        check_history_distance:
          type: boolean
        history_max_distance_km:
          format: int64
          maximum: 9223372036854775807
          minimum: 0
          type: integer
        distance_tolerance_km:
          maximum: 2147483647
          minimum: 0
          type: integer
        history_login_count:
          maximum: 2147483647
          minimum: 0
          type: integer
        check_impossible_travel:
          type: boolean
        impossible_tolerance_km:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - countries
      - name
      type: object
    GeoipBindingEnum:
      enum:
      - no_binding
      - bind_continent
      - bind_continent_country
      - bind_continent_country_city
      type: string
    GoogleWorkspaceProvider:
      description: GoogleWorkspaceProvider Serializer
      example:
        delegated_subject: delegated_subject
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        credentials:
          key: ""
        user_delete_action: null
        exclude_users_service_account: true
        default_group_email_domain: default_group_email_domain
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_backchannel_application_name: assigned_backchannel_application_name
        name: name
        dry_run: true
        pk: 0
        scopes: scopes
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group_delete_action: null
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        delegated_subject:
          format: email
          maxLength: 254
          type: string
        credentials:
          additionalProperties: {}
          type: object
        scopes:
          type: string
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        user_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        group_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        default_group_email_domain:
          type: string
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      required:
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - component
      - credentials
      - default_group_email_domain
      - delegated_subject
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    GoogleWorkspaceProviderGroup:
      description: GoogleWorkspaceProviderGroup Serializer
      example:
        google_id: google_id
        provider: 0
        group_obj: ""
        attributes:
          key: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        google_id:
          type: string
        group:
          format: uuid
          type: string
        group_obj:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          readOnly: true
        provider:
          type: integer
        attributes:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - attributes
      - google_id
      - group
      - group_obj
      - id
      - provider
      type: object
    GoogleWorkspaceProviderGroupRequest:
      description: GoogleWorkspaceProviderGroup Serializer
      example:
        google_id: google_id
        provider: 0
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        google_id:
          minLength: 1
          type: string
        group:
          format: uuid
          type: string
        provider:
          type: integer
      required:
      - google_id
      - group
      - provider
      type: object
    GoogleWorkspaceProviderMapping:
      description: GoogleWorkspaceProviderMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    GoogleWorkspaceProviderMappingRequest:
      description: GoogleWorkspaceProviderMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    GoogleWorkspaceProviderRequest:
      description: GoogleWorkspaceProvider Serializer
      example:
        default_group_email_domain: default_group_email_domain
        delegated_subject: delegated_subject
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        credentials:
          key: ""
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        dry_run: true
        scopes: scopes
        user_delete_action: null
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group_delete_action: null
        exclude_users_service_account: true
      properties:
        name:
          minLength: 1
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        delegated_subject:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        credentials:
          additionalProperties: {}
          type: object
        scopes:
          minLength: 1
          type: string
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        user_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        group_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        default_group_email_domain:
          minLength: 1
          type: string
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      required:
      - credentials
      - default_group_email_domain
      - delegated_subject
      - name
      type: object
    GoogleWorkspaceProviderUser:
      description: GoogleWorkspaceProviderUser Serializer
      example:
        user_obj: ""
        google_id: google_id
        provider: 6
        attributes:
          key: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        google_id:
          type: string
        user:
          type: integer
        user_obj:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
        provider:
          type: integer
        attributes:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - attributes
      - google_id
      - id
      - provider
      - user
      - user_obj
      type: object
    GoogleWorkspaceProviderUserRequest:
      description: GoogleWorkspaceProviderUser Serializer
      example:
        google_id: google_id
        provider: 6
        user: 0
      properties:
        google_id:
          minLength: 1
          type: string
        user:
          type: integer
        provider:
          type: integer
      required:
      - google_id
      - provider
      - user
      type: object
    Group:
      description: Group Serializer
      example:
        parent_name: parent_name
        parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        roles_obj:
        - name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_superuser: true
        roles:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        attributes:
          key: ""
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        num_pk: 0
        users_obj:
        - uid: uid
          is_active: true
          last_login: 2000-01-23T04:56:07.000+00:00
          name: name
          attributes:
            key: ""
          pk: 1
          email: email
          username: username
        - uid: uid
          is_active: true
          last_login: 2000-01-23T04:56:07.000+00:00
          name: name
          attributes:
            key: ""
          pk: 1
          email: email
          username: username
        users:
        - 6
        - 6
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Group uuid
          type: string
        num_pk:
          readOnly: true
          type: integer
        name:
          type: string
        is_superuser:
          description: Users added to this group will be superusers.
          type: boolean
        parent:
          format: uuid
          nullable: true
          type: string
        parent_name:
          nullable: true
          readOnly: true
          type: string
        users:
          items:
            type: integer
          type: array
        users_obj:
          items:
            $ref: '#/components/schemas/GroupMember'
          nullable: true
          readOnly: true
          type: array
        attributes:
          additionalProperties: {}
          type: object
        roles:
          items:
            format: uuid
            type: string
          type: array
        roles_obj:
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          type: array
      required:
      - name
      - num_pk
      - parent_name
      - pk
      - roles_obj
      - users_obj
      type: object
    GroupKerberosSourceConnection:
      description: Group Source Connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - group
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      type: object
    GroupKerberosSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - group
      - identifier
      - source
      type: object
    GroupLDAPSourceConnection:
      description: Group Source Connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - group
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      type: object
    GroupLDAPSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - group
      - identifier
      - source
      type: object
    GroupMatchingModeEnum:
      enum:
      - identifier
      - name_link
      - name_deny
      type: string
    GroupMember:
      description: Stripped down user serializer to show relevant users for groups
      example:
        uid: uid
        is_active: true
        last_login: 2000-01-23T04:56:07.000+00:00
        name: name
        attributes:
          key: ""
        pk: 1
        email: email
        username: username
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        name:
          description: User's display name.
          type: string
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          title: Active
          type: boolean
        last_login:
          format: date-time
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        attributes:
          additionalProperties: {}
          type: object
        uid:
          readOnly: true
          type: string
      required:
      - name
      - pk
      - uid
      - username
      type: object
    GroupMemberRequest:
      description: Stripped down user serializer to show relevant users for groups
      properties:
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          minLength: 1
          pattern: "^[\\w.@+-]+$"
          type: string
        name:
          description: User's display name.
          minLength: 1
          type: string
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          title: Active
          type: boolean
        last_login:
          format: date-time
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - name
      - username
      type: object
    GroupOAuthSourceConnection:
      description: Group Source Connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - group
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      type: object
    GroupOAuthSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - group
      - identifier
      - source
      type: object
    GroupPlexSourceConnection:
      description: Group Source Connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - group
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      type: object
    GroupPlexSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - group
      - identifier
      - source
      type: object
    GroupRequest:
      description: Group Serializer
      example:
        parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_superuser: true
        roles:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        attributes:
          key: ""
        users:
        - 0
        - 0
      properties:
        name:
          minLength: 1
          type: string
        is_superuser:
          description: Users added to this group will be superusers.
          type: boolean
        parent:
          format: uuid
          nullable: true
          type: string
        users:
          items:
            type: integer
          type: array
        attributes:
          additionalProperties: {}
          type: object
        roles:
          items:
            format: uuid
            type: string
          type: array
      required:
      - name
      type: object
    GroupSAMLSourceConnection:
      description: Group Source Connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - group
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      type: object
    GroupSAMLSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - group
      - identifier
      - source
      type: object
    GroupSourceConnection:
      description: Group Source Connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - group
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      type: object
    GroupSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - group
      - identifier
      - source
      type: object
    IdentificationChallenge:
      description: Identification challenges with all UI elements
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-identification
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        user_fields:
          items:
            type: string
          nullable: true
          type: array
        password_fields:
          type: boolean
        allow_show_password:
          default: false
          type: boolean
        application_pre:
          type: string
        flow_designation:
          $ref: '#/components/schemas/FlowDesignationEnum'
        captcha_stage:
          $ref: '#/components/schemas/IdentificationChallenge_captcha_stage'
        enroll_url:
          type: string
        recovery_url:
          type: string
        passwordless_url:
          type: string
        primary_action:
          type: string
        sources:
          items:
            $ref: '#/components/schemas/LoginSource'
          type: array
        show_source_labels:
          type: boolean
        enable_remember_me:
          default: true
          type: boolean
      required:
      - flow_designation
      - password_fields
      - primary_action
      - show_source_labels
      - user_fields
      type: object
    IdentificationChallengeResponseRequest:
      description: Identification challenge
      properties:
        component:
          default: ak-stage-identification
          minLength: 1
          type: string
        uid_field:
          minLength: 1
          type: string
        password:
          nullable: true
          type: string
        captcha_token:
          nullable: true
          type: string
      required:
      - uid_field
      type: object
    IdentificationStage:
      description: IdentificationStage Serializer
      example:
        show_source_labels: true
        verbose_name_plural: verbose_name_plural
        sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        pretend_user_exists: true
        passwordless_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        user_fields:
        - null
        - null
        show_matched_user: true
        meta_model_name: meta_model_name
        name: name
        password_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        captcha_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        recovery_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        case_insensitive_matching: true
        enable_remember_me: true
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        user_fields:
          description: Fields of the user object to match against. (Hold shift to
            select multiple options)
          items:
            $ref: '#/components/schemas/UserFieldsEnum'
          type: array
        password_stage:
          description: "When set, shows a password field, instead of showing the password\
            \ field as separate step."
          format: uuid
          nullable: true
          type: string
        captcha_stage:
          description: "When set, adds functionality exactly like a Captcha stage,\
            \ but baked into the Identification stage."
          format: uuid
          nullable: true
          type: string
        case_insensitive_matching:
          description: "When enabled, user fields are matched regardless of their\
            \ casing."
          type: boolean
        show_matched_user:
          description: "When a valid username/email has been entered, and this option\
            \ is enabled, the user's username and avatar will be shown. Otherwise,\
            \ the text that the user entered will be shown"
          type: boolean
        enrollment_flow:
          description: "Optional enrollment flow, which is linked at the bottom of\
            \ the page."
          format: uuid
          nullable: true
          type: string
        recovery_flow:
          description: "Optional recovery flow, which is linked at the bottom of the\
            \ page."
          format: uuid
          nullable: true
          type: string
        passwordless_flow:
          description: "Optional passwordless flow, which is linked at the bottom\
            \ of the page."
          format: uuid
          nullable: true
          type: string
        sources:
          description: Specify which sources should be shown.
          items:
            format: uuid
            type: string
          type: array
        show_source_labels:
          type: boolean
        pretend_user_exists:
          description: "When enabled, the stage will succeed and continue even when\
            \ incorrect user info is entered."
          type: boolean
        enable_remember_me:
          description: "Show the user the 'Remember me on this device' toggle, allowing\
            \ repeat users to skip straight to entering their password."
          type: boolean
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    IdentificationStageRequest:
      description: IdentificationStage Serializer
      example:
        show_source_labels: true
        sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        pretend_user_exists: true
        passwordless_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_fields:
        - null
        - null
        show_matched_user: true
        name: name
        password_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        captcha_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        recovery_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        case_insensitive_matching: true
        enable_remember_me: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        user_fields:
          description: Fields of the user object to match against. (Hold shift to
            select multiple options)
          items:
            $ref: '#/components/schemas/UserFieldsEnum'
          type: array
        password_stage:
          description: "When set, shows a password field, instead of showing the password\
            \ field as separate step."
          format: uuid
          nullable: true
          type: string
        captcha_stage:
          description: "When set, adds functionality exactly like a Captcha stage,\
            \ but baked into the Identification stage."
          format: uuid
          nullable: true
          type: string
        case_insensitive_matching:
          description: "When enabled, user fields are matched regardless of their\
            \ casing."
          type: boolean
        show_matched_user:
          description: "When a valid username/email has been entered, and this option\
            \ is enabled, the user's username and avatar will be shown. Otherwise,\
            \ the text that the user entered will be shown"
          type: boolean
        enrollment_flow:
          description: "Optional enrollment flow, which is linked at the bottom of\
            \ the page."
          format: uuid
          nullable: true
          type: string
        recovery_flow:
          description: "Optional recovery flow, which is linked at the bottom of the\
            \ page."
          format: uuid
          nullable: true
          type: string
        passwordless_flow:
          description: "Optional passwordless flow, which is linked at the bottom\
            \ of the page."
          format: uuid
          nullable: true
          type: string
        sources:
          description: Specify which sources should be shown.
          items:
            format: uuid
            type: string
          type: array
        show_source_labels:
          type: boolean
        pretend_user_exists:
          description: "When enabled, the stage will succeed and continue even when\
            \ incorrect user info is entered."
          type: boolean
        enable_remember_me:
          description: "Show the user the 'Remember me on this device' toggle, allowing\
            \ repeat users to skip straight to entering their password."
          type: boolean
      required:
      - name
      type: object
    ImpersonationRequest:
      example:
        reason: reason
      properties:
        reason:
          minLength: 1
          type: string
      required:
      - reason
      type: object
    InitialPermissions:
      description: InitialPermissions serializer
      example:
        mode: null
        role: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permissions_obj:
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          model: model
          id: 1
          app_label_verbose: app_label_verbose
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          model: model
          id: 1
          app_label_verbose: app_label_verbose
        permissions:
        - 6
        - 6
        name: name
        pk: 0
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          maxLength: 150
          type: string
        mode:
          $ref: '#/components/schemas/InitialPermissionsModeEnum'
        role:
          format: uuid
          type: string
        permissions:
          items:
            type: integer
          type: array
        permissions_obj:
          items:
            $ref: '#/components/schemas/Permission'
          readOnly: true
          type: array
      required:
      - mode
      - name
      - permissions_obj
      - pk
      - role
      type: object
    InitialPermissionsModeEnum:
      enum:
      - user
      - role
      type: string
    InitialPermissionsRequest:
      description: InitialPermissions serializer
      example:
        mode: null
        role: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permissions:
        - 0
        - 0
        name: name
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        mode:
          $ref: '#/components/schemas/InitialPermissionsModeEnum'
        role:
          format: uuid
          type: string
        permissions:
          items:
            type: integer
          type: array
      required:
      - mode
      - name
      - role
      type: object
    InstallID:
      example:
        install_id: install_id
      properties:
        install_id:
          type: string
      required:
      - install_id
      type: object
    IntentEnum:
      enum:
      - verification
      - api
      - recovery
      - app_password
      type: string
    InvalidResponseActionEnum:
      enum:
      - retry
      - restart
      - restart_with_context
      type: string
    Invitation:
      description: Invitation Serializer
      example:
        fixed_data:
          key: ""
        expires: 2000-01-23T04:56:07.000+00:00
        name: name
        single_use: true
        flow_obj: ""
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: ""
        flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Invite uuid
          type: string
        name:
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        fixed_data:
          additionalProperties: {}
          type: object
        created_by:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
        single_use:
          description: "When enabled, the invitation will be deleted after usage."
          type: boolean
        flow:
          description: "When set, only the configured flow can use this invitation."
          format: uuid
          nullable: true
          type: string
        flow_obj:
          allOf:
          - $ref: '#/components/schemas/Flow'
          readOnly: true
      required:
      - created_by
      - flow_obj
      - name
      - pk
      type: object
    InvitationRequest:
      description: Invitation Serializer
      example:
        fixed_data:
          key: ""
        expires: 2000-01-23T04:56:07.000+00:00
        name: name
        single_use: true
        flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        fixed_data:
          additionalProperties: {}
          type: object
        single_use:
          description: "When enabled, the invitation will be deleted after usage."
          type: boolean
        flow:
          description: "When set, only the configured flow can use this invitation."
          format: uuid
          nullable: true
          type: string
      required:
      - name
      type: object
    InvitationStage:
      description: InvitationStage Serializer
      example:
        continue_flow_without_invitation: true
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        continue_flow_without_invitation:
          description: "If this flag is set, this Stage will jump to the next Stage\
            \ when no Invitation is given. By default this Stage will cancel the Flow\
            \ when no invitation is given."
          type: boolean
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    InvitationStageRequest:
      description: InvitationStage Serializer
      example:
        continue_flow_without_invitation: true
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        continue_flow_without_invitation:
          description: "If this flag is set, this Stage will jump to the next Stage\
            \ when no Invitation is given. By default this Stage will cancel the Flow\
            \ when no invitation is given."
          type: boolean
      required:
      - name
      type: object
    IssuerModeEnum:
      enum:
      - global
      - per_provider
      type: string
    KadminTypeEnum:
      enum:
      - MIT
      - Heimdal
      - other
      type: string
    KerberosSource:
      description: Kerberos Source Serializer
      example:
        user_matching_mode: ""
        verbose_name_plural: verbose_name_plural
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sync_users: true
        icon: icon
        sync_ccache: sync_ccache
        enabled: true
        kadmin_type: ""
        spnego_server_name: spnego_server_name
        krb5_conf: krb5_conf
        connectivity:
          key: connectivity
        managed: managed
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        spnego_ccache: spnego_ccache
        slug: slug
        sync_principal: sync_principal
        user_path_template: user_path_template
        group_matching_mode: ""
        password_login_update_internal_password: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        sync_users_password: true
        meta_model_name: meta_model_name
        name: name
        realm: realm
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Source's display Name.
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
        user_path_template:
          type: string
        icon:
          readOnly: true
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        realm:
          description: Kerberos realm
          type: string
        krb5_conf:
          description: Custom krb5.conf to use. Uses the system one by default
          type: string
        kadmin_type:
          allOf:
          - $ref: '#/components/schemas/KadminTypeEnum'
          description: KAdmin server type
        sync_users:
          description: Sync users from Kerberos into authentik
          type: boolean
        sync_users_password:
          description: "When a user changes their password, sync it back to Kerberos"
          type: boolean
        sync_principal:
          description: Principal to authenticate to kadmin for sync.
          type: string
        sync_ccache:
          description: Credentials cache to authenticate to kadmin for sync. Must
            be in the form TYPE:residual
          type: string
        connectivity:
          additionalProperties:
            type: string
          description: Get cached source connectivity
          nullable: true
          readOnly: true
          type: object
        spnego_server_name:
          description: Force the use of a specific server name for SPNEGO. Must be
            in the form HTTP@hostname
          type: string
        spnego_ccache:
          description: Credential cache to use for SPNEGO in form type:residual
          type: string
        password_login_update_internal_password:
          description: "If enabled, the authentik-stored password will be updated\
            \ upon login with the Kerberos password backend"
          type: boolean
      required:
      - component
      - connectivity
      - icon
      - managed
      - meta_model_name
      - name
      - pk
      - realm
      - slug
      - verbose_name
      - verbose_name_plural
      type: object
    KerberosSourcePropertyMapping:
      description: Kerberos PropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    KerberosSourcePropertyMappingRequest:
      description: Kerberos PropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    KerberosSourceRequest:
      description: Kerberos Source Serializer
      example:
        user_matching_mode: ""
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sync_users: true
        sync_keytab: sync_keytab
        sync_ccache: sync_ccache
        enabled: true
        group_matching_mode: ""
        kadmin_type: ""
        password_login_update_internal_password: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sync_users_password: true
        sync_password: sync_password
        spnego_server_name: spnego_server_name
        krb5_conf: krb5_conf
        spnego_keytab: spnego_keytab
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        realm: realm
        spnego_ccache: spnego_ccache
        slug: slug
        sync_principal: sync_principal
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        realm:
          description: Kerberos realm
          minLength: 1
          type: string
        krb5_conf:
          description: Custom krb5.conf to use. Uses the system one by default
          type: string
        kadmin_type:
          allOf:
          - $ref: '#/components/schemas/KadminTypeEnum'
          description: KAdmin server type
        sync_users:
          description: Sync users from Kerberos into authentik
          type: boolean
        sync_users_password:
          description: "When a user changes their password, sync it back to Kerberos"
          type: boolean
        sync_principal:
          description: Principal to authenticate to kadmin for sync.
          type: string
        sync_password:
          description: Password to authenticate to kadmin for sync
          type: string
          writeOnly: true
        sync_keytab:
          description: Keytab to authenticate to kadmin for sync. Must be base64-encoded
            or in the form TYPE:residual
          type: string
          writeOnly: true
        sync_ccache:
          description: Credentials cache to authenticate to kadmin for sync. Must
            be in the form TYPE:residual
          type: string
        spnego_server_name:
          description: Force the use of a specific server name for SPNEGO. Must be
            in the form HTTP@hostname
          type: string
        spnego_keytab:
          description: SPNEGO keytab base64-encoded or path to keytab in the form
            FILE:path
          type: string
          writeOnly: true
        spnego_ccache:
          description: Credential cache to use for SPNEGO in form type:residual
          type: string
        password_login_update_internal_password:
          description: "If enabled, the authentik-stored password will be updated\
            \ upon login with the Kerberos password backend"
          type: boolean
      required:
      - name
      - realm
      - slug
      type: object
    KerberosSyncStatus:
      description: Kerberos Source sync status
      example:
        is_running: true
        tasks:
        - duration: 0.8008281904610115
          uid: uid
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          full_name: full_name
          start_timestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finish_timestamp: 2000-01-23T04:56:07.000+00:00
          status: null
        - duration: 0.8008281904610115
          uid: uid
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          full_name: full_name
          start_timestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finish_timestamp: 2000-01-23T04:56:07.000+00:00
          status: null
      properties:
        is_running:
          readOnly: true
          type: boolean
        tasks:
          items:
            $ref: '#/components/schemas/SystemTask'
          readOnly: true
          type: array
      required:
      - is_running
      - tasks
      type: object
    KubernetesServiceConnection:
      description: KubernetesServiceConnection Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        verify_ssl: true
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        local: true
        kubeconfig:
          key: ""
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        name:
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
        component:
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        kubeconfig:
          additionalProperties: {}
          description: Paste your kubeconfig here. authentik will automatically use
            the currently selected context.
          type: object
        verify_ssl:
          description: Verify SSL Certificates of the Kubernetes API endpoint
          type: boolean
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    KubernetesServiceConnectionRequest:
      description: KubernetesServiceConnection Serializer
      example:
        verify_ssl: true
        name: name
        local: true
        kubeconfig:
          key: ""
      properties:
        name:
          minLength: 1
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
        kubeconfig:
          additionalProperties: {}
          description: Paste your kubeconfig here. authentik will automatically use
            the currently selected context.
          type: object
        verify_ssl:
          description: Verify SSL Certificates of the Kubernetes API endpoint
          type: boolean
      required:
      - name
      type: object
    LDAPAPIAccessMode:
      enum:
      - direct
      - cached
      type: string
    LDAPCheckAccess:
      description: Base serializer class which doesn't implement create/update methods
      example:
        access:
          log_messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          messages:
          - messages
          - messages
          passing: true
        has_search_permission: true
      properties:
        has_search_permission:
          type: boolean
        access:
          $ref: '#/components/schemas/PolicyTestResult'
      required:
      - access
      type: object
    LDAPDebug:
      example:
        membership:
        - key: ""
        - key: ""
        user:
        - key: ""
        - key: ""
        group:
        - key: ""
        - key: ""
      properties:
        user:
          items:
            additionalProperties: {}
            type: object
          readOnly: true
          type: array
        group:
          items:
            additionalProperties: {}
            type: object
          readOnly: true
          type: array
        membership:
          items:
            additionalProperties: {}
            type: object
          readOnly: true
          type: array
      required:
      - group
      - membership
      - user
      type: object
    LDAPOutpostConfig:
      description: LDAPProvider Serializer
      example:
        uid_start_number: 441289069
        search_mode: null
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tls_server_name: tls_server_name
        bind_mode: null
        unbind_flow_slug: unbind_flow_slug
        mfa_support: true
        application_slug: application_slug
        bind_flow_slug: bind_flow_slug
        base_dn: base_dn
        name: name
        pk: 0
        gid_start_number: -1517921766
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        base_dn:
          description: DN under which objects are accessible.
          type: string
        bind_flow_slug:
          type: string
        unbind_flow_slug:
          description: "Get slug for unbind flow, defaulting to brand's default flow."
          nullable: true
          readOnly: true
          type: string
        application_slug:
          description: Prioritise backchannel slug over direct application slug
          readOnly: true
          type: string
        certificate:
          format: uuid
          nullable: true
          type: string
        tls_server_name:
          type: string
        uid_start_number:
          description: "The start for uidNumbers, this number is added to the user.pk\
            \ to make sure that the numbers aren't too low for POSIX users. Default\
            \ is 2000 to ensure that we don't collide with local users uidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        gid_start_number:
          description: "The start for gidNumbers, this number is added to a number\
            \ generated from the group.pk to make sure that the numbers aren't too\
            \ low for POSIX groups. Default is 4000 to ensure that we don't collide\
            \ with local groups or users primary groups gidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        search_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        bind_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      required:
      - application_slug
      - bind_flow_slug
      - name
      - pk
      - unbind_flow_slug
      type: object
    LDAPProvider:
      description: LDAPProvider Serializer
      example:
        uid_start_number: 441289069
        search_mode: null
        verbose_name_plural: verbose_name_plural
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tls_server_name: tls_server_name
        bind_mode: null
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_application_slug: assigned_application_slug
        mfa_support: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        outpost_set:
        - outpost_set
        - outpost_set
        component: component
        verbose_name: verbose_name
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        meta_model_name: meta_model_name
        base_dn: base_dn
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        assigned_application_name: assigned_application_name
        assigned_backchannel_application_name: assigned_backchannel_application_name
        name: name
        pk: 0
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        gid_start_number: -1517921766
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        base_dn:
          description: DN under which objects are accessible.
          type: string
        certificate:
          format: uuid
          nullable: true
          type: string
        tls_server_name:
          type: string
        uid_start_number:
          description: "The start for uidNumbers, this number is added to the user.pk\
            \ to make sure that the numbers aren't too low for POSIX users. Default\
            \ is 2000 to ensure that we don't collide with local users uidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        gid_start_number:
          description: "The start for gidNumbers, this number is added to a number\
            \ generated from the group.pk to make sure that the numbers aren't too\
            \ low for POSIX groups. Default is 4000 to ensure that we don't collide\
            \ with local groups or users primary groups gidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        outpost_set:
          items:
            type: string
          readOnly: true
          type: array
        search_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        bind_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      required:
      - assigned_application_name
      - assigned_application_slug
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - authorization_flow
      - component
      - invalidation_flow
      - meta_model_name
      - name
      - outpost_set
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    LDAPProviderRequest:
      description: LDAPProvider Serializer
      example:
        uid_start_number: -1803530559
        search_mode: null
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tls_server_name: tls_server_name
        bind_mode: null
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mfa_support: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        base_dn: base_dn
        name: name
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        gid_start_number: 441289069
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        base_dn:
          description: DN under which objects are accessible.
          minLength: 1
          type: string
        certificate:
          format: uuid
          nullable: true
          type: string
        tls_server_name:
          type: string
        uid_start_number:
          description: "The start for uidNumbers, this number is added to the user.pk\
            \ to make sure that the numbers aren't too low for POSIX users. Default\
            \ is 2000 to ensure that we don't collide with local users uidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        gid_start_number:
          description: "The start for gidNumbers, this number is added to a number\
            \ generated from the group.pk to make sure that the numbers aren't too\
            \ low for POSIX groups. Default is 4000 to ensure that we don't collide\
            \ with local groups or users primary groups gidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        search_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        bind_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      required:
      - authorization_flow
      - invalidation_flow
      - name
      type: object
    LDAPSource:
      description: LDAP Source Serializer
      example:
        object_uniqueness_field: object_uniqueness_field
        user_matching_mode: ""
        verbose_name_plural: verbose_name_plural
        start_tls: true
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        additional_user_dn: additional_user_dn
        sync_users: true
        icon: icon
        enabled: true
        delete_not_found_objects: true
        client_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        base_dn: base_dn
        connectivity:
          key:
            key: connectivity
        managed: managed
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_membership_attribute: user_membership_attribute
        additional_group_dn: additional_group_dn
        sync_parent_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
        group_membership_field: group_membership_field
        server_uri: https://openapi-generator.tech
        bind_cn: bind_cn
        user_path_template: user_path_template
        sync_groups: true
        lookup_groups_from_user: true
        group_object_filter: group_object_filter
        sni: true
        password_login_update_internal_password: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        sync_users_password: true
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_object_filter: user_object_filter
        peer_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Source's display Name.
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
        user_path_template:
          type: string
        icon:
          readOnly: true
          type: string
        server_uri:
          format: uri
          type: string
        peer_certificate:
          description: Optionally verify the LDAP Server's Certificate against the
            CA Chain in this keypair.
          format: uuid
          nullable: true
          type: string
        client_certificate:
          description: Client certificate to authenticate against the LDAP Server's
            Certificate.
          format: uuid
          nullable: true
          type: string
        bind_cn:
          type: string
        start_tls:
          title: Enable Start TLS
          type: boolean
        sni:
          title: Use Server URI for SNI verification
          type: boolean
        base_dn:
          type: string
        additional_user_dn:
          description: Prepended to Base DN for User-queries.
          title: Addition User DN
          type: string
        additional_group_dn:
          description: Prepended to Base DN for Group-queries.
          title: Addition Group DN
          type: string
        user_object_filter:
          description: Consider Objects matching this filter to be Users.
          type: string
        group_object_filter:
          description: Consider Objects matching this filter to be Groups.
          type: string
        group_membership_field:
          description: Field which contains members of a group.
          type: string
        user_membership_attribute:
          description: Attribute which matches the value of `group_membership_field`.
          type: string
        object_uniqueness_field:
          description: Field which contains a unique Identifier.
          type: string
        password_login_update_internal_password:
          description: Update internal authentik password when login succeeds with
            LDAP
          type: boolean
        sync_users:
          type: boolean
        sync_users_password:
          description: "When a user changes their password, sync it back to LDAP.\
            \ This can only be enabled on a single LDAP source."
          type: boolean
        sync_groups:
          type: boolean
        sync_parent_group:
          format: uuid
          nullable: true
          type: string
        connectivity:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Get cached source connectivity
          nullable: true
          readOnly: true
          type: object
        lookup_groups_from_user:
          description: Lookup group membership based on a user attribute instead of
            a group attribute. This allows nested group resolution on systems like
            FreeIPA and Active Directory
          type: boolean
        delete_not_found_objects:
          description: "Delete authentik users and groups which were previously supplied\
            \ by this source, but are now missing from it."
          type: boolean
      required:
      - base_dn
      - component
      - connectivity
      - icon
      - managed
      - meta_model_name
      - name
      - pk
      - server_uri
      - slug
      - verbose_name
      - verbose_name_plural
      type: object
    LDAPSourcePropertyMapping:
      description: LDAP PropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    LDAPSourcePropertyMappingRequest:
      description: LDAP PropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    LDAPSourceRequest:
      description: LDAP Source Serializer
      example:
        object_uniqueness_field: object_uniqueness_field
        user_matching_mode: ""
        start_tls: true
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        additional_user_dn: additional_user_dn
        sync_users: true
        enabled: true
        delete_not_found_objects: true
        client_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        base_dn: base_dn
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_membership_attribute: user_membership_attribute
        additional_group_dn: additional_group_dn
        sync_parent_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
        group_membership_field: group_membership_field
        server_uri: https://openapi-generator.tech
        bind_cn: bind_cn
        user_path_template: user_path_template
        sync_groups: true
        lookup_groups_from_user: true
        group_object_filter: group_object_filter
        sni: true
        password_login_update_internal_password: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sync_users_password: true
        bind_password: bind_password
        name: name
        user_object_filter: user_object_filter
        peer_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        server_uri:
          format: uri
          minLength: 1
          type: string
        peer_certificate:
          description: Optionally verify the LDAP Server's Certificate against the
            CA Chain in this keypair.
          format: uuid
          nullable: true
          type: string
        client_certificate:
          description: Client certificate to authenticate against the LDAP Server's
            Certificate.
          format: uuid
          nullable: true
          type: string
        bind_cn:
          type: string
        bind_password:
          type: string
          writeOnly: true
        start_tls:
          title: Enable Start TLS
          type: boolean
        sni:
          title: Use Server URI for SNI verification
          type: boolean
        base_dn:
          minLength: 1
          type: string
        additional_user_dn:
          description: Prepended to Base DN for User-queries.
          title: Addition User DN
          type: string
        additional_group_dn:
          description: Prepended to Base DN for Group-queries.
          title: Addition Group DN
          type: string
        user_object_filter:
          description: Consider Objects matching this filter to be Users.
          minLength: 1
          type: string
        group_object_filter:
          description: Consider Objects matching this filter to be Groups.
          minLength: 1
          type: string
        group_membership_field:
          description: Field which contains members of a group.
          minLength: 1
          type: string
        user_membership_attribute:
          description: Attribute which matches the value of `group_membership_field`.
          minLength: 1
          type: string
        object_uniqueness_field:
          description: Field which contains a unique Identifier.
          minLength: 1
          type: string
        password_login_update_internal_password:
          description: Update internal authentik password when login succeeds with
            LDAP
          type: boolean
        sync_users:
          type: boolean
        sync_users_password:
          description: "When a user changes their password, sync it back to LDAP.\
            \ This can only be enabled on a single LDAP source."
          type: boolean
        sync_groups:
          type: boolean
        sync_parent_group:
          format: uuid
          nullable: true
          type: string
        lookup_groups_from_user:
          description: Lookup group membership based on a user attribute instead of
            a group attribute. This allows nested group resolution on systems like
            FreeIPA and Active Directory
          type: boolean
        delete_not_found_objects:
          description: "Delete authentik users and groups which were previously supplied\
            \ by this source, but are now missing from it."
          type: boolean
      required:
      - base_dn
      - name
      - server_uri
      - slug
      type: object
    License:
      description: License Serializer
      example:
        external_users: 6
        license_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        internal_users: 0
        expiry: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        license_uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        key:
          type: string
        expiry:
          format: date-time
          readOnly: true
          type: string
        internal_users:
          readOnly: true
          type: integer
        external_users:
          readOnly: true
          type: integer
      required:
      - expiry
      - external_users
      - internal_users
      - key
      - license_uuid
      - name
      type: object
    LicenseFlagsEnum:
      enum:
      - trial
      - non_production
      type: string
    LicenseForecast:
      description: Serializer for license forecast
      example:
        external_users: 6
        forecasted_internal_users: 1
        internal_users: 0
        forecasted_external_users: 5
      properties:
        internal_users:
          type: integer
        external_users:
          type: integer
        forecasted_internal_users:
          type: integer
        forecasted_external_users:
          type: integer
      required:
      - external_users
      - forecasted_external_users
      - forecasted_internal_users
      - internal_users
      type: object
    LicenseRequest:
      description: License Serializer
      example:
        key: key
      properties:
        key:
          minLength: 1
          type: string
      required:
      - key
      type: object
    LicenseSummary:
      description: Serializer for license status
      example:
        external_users: 6
        latest_valid: 2000-01-23T04:56:07.000+00:00
        license_flags:
        - null
        - null
        internal_users: 0
        status: null
      properties:
        internal_users:
          type: integer
        external_users:
          type: integer
        status:
          $ref: '#/components/schemas/LicenseSummaryStatusEnum'
        latest_valid:
          format: date-time
          type: string
        license_flags:
          items:
            $ref: '#/components/schemas/LicenseFlagsEnum'
          type: array
      required:
      - external_users
      - internal_users
      - latest_valid
      - license_flags
      - status
      type: object
    LicenseSummaryStatusEnum:
      enum:
      - unlicensed
      - valid
      - expired
      - expiry_soon
      - limit_exceeded_admin
      - limit_exceeded_user
      - read_only
      type: string
    Link:
      description: Returns a single link
      example:
        link: link
      properties:
        link:
          type: string
      required:
      - link
      type: object
    LogEvent:
      description: Single log message with all context logged.
      example:
        logger: logger
        log_level: null
        attributes:
          key: ""
        event: event
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          format: date-time
          type: string
        log_level:
          $ref: '#/components/schemas/LogLevelEnum'
        logger:
          type: string
        event:
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - attributes
      - event
      - log_level
      - logger
      - timestamp
      type: object
    LogLevelEnum:
      enum:
      - critical
      - exception
      - error
      - warn
      - warning
      - info
      - debug
      - notset
      type: string
    LoginChallengeTypes:
      discriminator:
        mapping:
          xak-flow-redirect: '#/components/schemas/RedirectChallenge'
          ak-source-oauth-apple: '#/components/schemas/AppleLoginChallenge'
          ak-source-plex: '#/components/schemas/PlexAuthenticationChallenge'
        propertyName: component
      oneOf:
      - $ref: '#/components/schemas/RedirectChallenge'
      - $ref: '#/components/schemas/AppleLoginChallenge'
      - $ref: '#/components/schemas/PlexAuthenticationChallenge'
    LoginSource:
      description: Serializer for Login buttons of sources
      properties:
        name:
          type: string
        icon_url:
          nullable: true
          type: string
        challenge:
          $ref: '#/components/schemas/LoginChallengeTypes'
      required:
      - challenge
      - name
      type: object
    MatchingModeEnum:
      enum:
      - strict
      - regex
      type: string
    Metadata:
      description: Serializer for blueprint metadata
      properties:
        name:
          type: string
        labels:
          additionalProperties: {}
          type: object
      required:
      - labels
      - name
      type: object
    MicrosoftEntraProvider:
      description: MicrosoftEntraProvider Serializer
      example:
        tenant_id: tenant_id
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        user_delete_action: null
        client_id: client_id
        exclude_users_service_account: true
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_backchannel_application_name: assigned_backchannel_application_name
        name: name
        dry_run: true
        pk: 0
        client_secret: client_secret
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group_delete_action: null
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        tenant_id:
          type: string
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        user_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        group_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      required:
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - client_id
      - client_secret
      - component
      - meta_model_name
      - name
      - pk
      - tenant_id
      - verbose_name
      - verbose_name_plural
      type: object
    MicrosoftEntraProviderGroup:
      description: MicrosoftEntraProviderGroup Serializer
      example:
        microsoft_id: microsoft_id
        provider: 0
        group_obj: ""
        attributes:
          key: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        microsoft_id:
          type: string
        group:
          format: uuid
          type: string
        group_obj:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          readOnly: true
        provider:
          type: integer
        attributes:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - attributes
      - group
      - group_obj
      - id
      - microsoft_id
      - provider
      type: object
    MicrosoftEntraProviderGroupRequest:
      description: MicrosoftEntraProviderGroup Serializer
      example:
        microsoft_id: microsoft_id
        provider: 0
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        microsoft_id:
          minLength: 1
          type: string
        group:
          format: uuid
          type: string
        provider:
          type: integer
      required:
      - group
      - microsoft_id
      - provider
      type: object
    MicrosoftEntraProviderMapping:
      description: MicrosoftEntraProviderMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    MicrosoftEntraProviderMappingRequest:
      description: MicrosoftEntraProviderMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    MicrosoftEntraProviderRequest:
      description: MicrosoftEntraProvider Serializer
      example:
        tenant_id: tenant_id
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        dry_run: true
        client_secret: client_secret
        user_delete_action: null
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_id: client_id
        group_delete_action: null
        exclude_users_service_account: true
      properties:
        name:
          minLength: 1
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        client_id:
          minLength: 1
          type: string
        client_secret:
          minLength: 1
          type: string
        tenant_id:
          minLength: 1
          type: string
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        user_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        group_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      required:
      - client_id
      - client_secret
      - name
      - tenant_id
      type: object
    MicrosoftEntraProviderUser:
      description: MicrosoftEntraProviderUser Serializer
      example:
        microsoft_id: microsoft_id
        user_obj: ""
        provider: 6
        attributes:
          key: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        microsoft_id:
          type: string
        user:
          type: integer
        user_obj:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
        provider:
          type: integer
        attributes:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - attributes
      - id
      - microsoft_id
      - provider
      - user
      - user_obj
      type: object
    MicrosoftEntraProviderUserRequest:
      description: MicrosoftEntraProviderUser Serializer
      example:
        microsoft_id: microsoft_id
        provider: 6
        user: 0
      properties:
        microsoft_id:
          minLength: 1
          type: string
        user:
          type: integer
        provider:
          type: integer
      required:
      - microsoft_id
      - provider
      - user
      type: object
    ModelEnum:
      enum:
      - authentik_tenants.domain
      - authentik_crypto.certificatekeypair
      - authentik_flows.flow
      - authentik_flows.flowstagebinding
      - authentik_outposts.dockerserviceconnection
      - authentik_outposts.kubernetesserviceconnection
      - authentik_outposts.outpost
      - authentik_policies_dummy.dummypolicy
      - authentik_policies_event_matcher.eventmatcherpolicy
      - authentik_policies_expiry.passwordexpirypolicy
      - authentik_policies_expression.expressionpolicy
      - authentik_policies_geoip.geoippolicy
      - authentik_policies_password.passwordpolicy
      - authentik_policies_reputation.reputationpolicy
      - authentik_policies.policybinding
      - authentik_providers_ldap.ldapprovider
      - authentik_providers_oauth2.scopemapping
      - authentik_providers_oauth2.oauth2provider
      - authentik_providers_proxy.proxyprovider
      - authentik_providers_rac.racprovider
      - authentik_providers_rac.endpoint
      - authentik_providers_rac.racpropertymapping
      - authentik_providers_radius.radiusprovider
      - authentik_providers_radius.radiusproviderpropertymapping
      - authentik_providers_saml.samlprovider
      - authentik_providers_saml.samlpropertymapping
      - authentik_providers_scim.scimprovider
      - authentik_providers_scim.scimmapping
      - authentik_rbac.role
      - authentik_rbac.initialpermissions
      - authentik_sources_kerberos.kerberossource
      - authentik_sources_kerberos.kerberossourcepropertymapping
      - authentik_sources_kerberos.userkerberossourceconnection
      - authentik_sources_kerberos.groupkerberossourceconnection
      - authentik_sources_ldap.ldapsource
      - authentik_sources_ldap.ldapsourcepropertymapping
      - authentik_sources_ldap.userldapsourceconnection
      - authentik_sources_ldap.groupldapsourceconnection
      - authentik_sources_oauth.oauthsource
      - authentik_sources_oauth.oauthsourcepropertymapping
      - authentik_sources_oauth.useroauthsourceconnection
      - authentik_sources_oauth.groupoauthsourceconnection
      - authentik_sources_plex.plexsource
      - authentik_sources_plex.plexsourcepropertymapping
      - authentik_sources_plex.userplexsourceconnection
      - authentik_sources_plex.groupplexsourceconnection
      - authentik_sources_saml.samlsource
      - authentik_sources_saml.samlsourcepropertymapping
      - authentik_sources_saml.usersamlsourceconnection
      - authentik_sources_saml.groupsamlsourceconnection
      - authentik_sources_scim.scimsource
      - authentik_sources_scim.scimsourcepropertymapping
      - authentik_stages_authenticator_duo.authenticatorduostage
      - authentik_stages_authenticator_duo.duodevice
      - authentik_stages_authenticator_email.authenticatoremailstage
      - authentik_stages_authenticator_email.emaildevice
      - authentik_stages_authenticator_sms.authenticatorsmsstage
      - authentik_stages_authenticator_sms.smsdevice
      - authentik_stages_authenticator_static.authenticatorstaticstage
      - authentik_stages_authenticator_static.staticdevice
      - authentik_stages_authenticator_totp.authenticatortotpstage
      - authentik_stages_authenticator_totp.totpdevice
      - authentik_stages_authenticator_validate.authenticatorvalidatestage
      - authentik_stages_authenticator_webauthn.authenticatorwebauthnstage
      - authentik_stages_authenticator_webauthn.webauthndevice
      - authentik_stages_captcha.captchastage
      - authentik_stages_consent.consentstage
      - authentik_stages_consent.userconsent
      - authentik_stages_deny.denystage
      - authentik_stages_dummy.dummystage
      - authentik_stages_email.emailstage
      - authentik_stages_identification.identificationstage
      - authentik_stages_invitation.invitationstage
      - authentik_stages_invitation.invitation
      - authentik_stages_password.passwordstage
      - authentik_stages_prompt.prompt
      - authentik_stages_prompt.promptstage
      - authentik_stages_redirect.redirectstage
      - authentik_stages_user_delete.userdeletestage
      - authentik_stages_user_login.userloginstage
      - authentik_stages_user_logout.userlogoutstage
      - authentik_stages_user_write.userwritestage
      - authentik_brands.brand
      - authentik_blueprints.blueprintinstance
      - authentik_core.group
      - authentik_core.user
      - authentik_core.application
      - authentik_core.applicationentitlement
      - authentik_core.token
      - authentik_enterprise.license
      - authentik_policies_unique_password.uniquepasswordpolicy
      - authentik_providers_google_workspace.googleworkspaceprovider
      - authentik_providers_google_workspace.googleworkspaceprovidermapping
      - authentik_providers_microsoft_entra.microsoftentraprovider
      - authentik_providers_microsoft_entra.microsoftentraprovidermapping
      - authentik_providers_ssf.ssfprovider
      - authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage
      - authentik_stages_mtls.mutualtlsstage
      - authentik_stages_source.sourcestage
      - authentik_events.event
      - authentik_events.notificationtransport
      - authentik_events.notification
      - authentik_events.notificationrule
      - authentik_events.notificationwebhookmapping
      type: string
    MutualTLSStage:
      description: MutualTLSStage Serializer
      example:
        mode: null
        component: component
        verbose_name: verbose_name
        certificate_authorities:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        user_attribute: null
        name: name
        cert_attribute: null
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        mode:
          $ref: '#/components/schemas/MutualTLSStageModeEnum'
        certificate_authorities:
          description: Configure certificate authorities to validate the certificate
            against. This option has a higher priority than the `client_certificate`
            option on `Brand`.
          items:
            format: uuid
            type: string
          type: array
        cert_attribute:
          $ref: '#/components/schemas/CertAttributeEnum'
        user_attribute:
          $ref: '#/components/schemas/UserAttributeEnum'
      required:
      - cert_attribute
      - component
      - meta_model_name
      - mode
      - name
      - pk
      - user_attribute
      - verbose_name
      - verbose_name_plural
      type: object
    MutualTLSStageModeEnum:
      enum:
      - optional
      - required
      type: string
    MutualTLSStageRequest:
      description: MutualTLSStage Serializer
      example:
        mode: null
        certificate_authorities:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_attribute: null
        name: name
        cert_attribute: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        mode:
          $ref: '#/components/schemas/MutualTLSStageModeEnum'
        certificate_authorities:
          description: Configure certificate authorities to validate the certificate
            against. This option has a higher priority than the `client_certificate`
            option on `Brand`.
          items:
            format: uuid
            type: string
          type: array
        cert_attribute:
          $ref: '#/components/schemas/CertAttributeEnum'
        user_attribute:
          $ref: '#/components/schemas/UserAttributeEnum'
      required:
      - cert_attribute
      - mode
      - name
      - user_attribute
      type: object
    NameIdPolicyEnum:
      enum:
      - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
      - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
      - urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
      - urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName
      - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
      type: string
    NetworkBindingEnum:
      enum:
      - no_binding
      - bind_asn
      - bind_asn_network
      - bind_asn_network_ip
      type: string
    NotConfiguredActionEnum:
      enum:
      - skip
      - deny
      - configure
      type: string
    Notification:
      description: Notification Serializer
      example:
        severity: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        body: body
        event:
          app: app
          expires: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          context:
            key: ""
          action: null
          client_ip: client_ip
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user:
            key: ""
          brand:
            key: ""
        seen: true
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          readOnly: true
        body:
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        event:
          $ref: '#/components/schemas/Event'
        seen:
          type: boolean
      required:
      - body
      - created
      - pk
      - severity
      type: object
    NotificationRequest:
      description: Notification Serializer
      example:
        event:
          app: app
          expires: 2000-01-23T04:56:07.000+00:00
          context:
            key: ""
          action: null
          client_ip: client_ip
          user:
            key: ""
          brand:
            key: ""
        seen: true
      properties:
        event:
          $ref: '#/components/schemas/EventRequest'
        seen:
          type: boolean
      type: object
    NotificationRule:
      description: NotificationRule Serializer
      example:
        severity: ""
        transports:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destination_group_obj: ""
        name: name
        destination_event_user: true
        destination_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          type: string
        transports:
          description: "Select which transports should be used to notify the user.\
            \ If none are selected, the notification will only be shown in the authentik\
            \ UI."
          items:
            format: uuid
            type: string
          type: array
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          description: Controls which severity level the created notifications will
            have.
        destination_group:
          description: "Define which group of users this notification should be sent\
            \ and shown to. If left empty, Notification won't ben sent."
          format: uuid
          nullable: true
          type: string
        destination_group_obj:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
        destination_event_user:
          description: "When enabled, notification will be sent to user the user that\
            \ triggered the event.When destination_group is configured, notification\
            \ is sent to both."
          type: boolean
      required:
      - destination_group_obj
      - name
      - pk
      type: object
    NotificationRuleRequest:
      description: NotificationRule Serializer
      example:
        severity: ""
        transports:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        destination_event_user: true
        destination_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        transports:
          description: "Select which transports should be used to notify the user.\
            \ If none are selected, the notification will only be shown in the authentik\
            \ UI."
          items:
            format: uuid
            type: string
          type: array
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          description: Controls which severity level the created notifications will
            have.
        destination_group:
          description: "Define which group of users this notification should be sent\
            \ and shown to. If left empty, Notification won't ben sent."
          format: uuid
          nullable: true
          type: string
        destination_event_user:
          description: "When enabled, notification will be sent to user the user that\
            \ triggered the event.When destination_group is configured, notification\
            \ is sent to both."
          type: boolean
      required:
      - name
      type: object
    NotificationTransport:
      description: NotificationTransport Serializer
      example:
        mode: null
        webhook_mapping_headers: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        webhook_url: https://openapi-generator.tech
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mode_verbose: mode_verbose
        send_once: true
        webhook_mapping_body: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        name:
          type: string
        mode:
          $ref: '#/components/schemas/NotificationTransportModeEnum'
        mode_verbose:
          description: Return selected mode with a UI Label
          readOnly: true
          type: string
        webhook_url:
          format: uri
          type: string
        webhook_mapping_body:
          description: Customize the body of the request. Mapping should return data
            that is JSON-serializable.
          format: uuid
          nullable: true
          type: string
        webhook_mapping_headers:
          description: Configure additional headers to be sent. Mapping should return
            a dictionary of key-value pairs
          format: uuid
          nullable: true
          type: string
        send_once:
          description: "Only send notification once, for example when sending a webhook\
            \ into a chat channel."
          type: boolean
      required:
      - mode_verbose
      - name
      - pk
      type: object
    NotificationTransportModeEnum:
      enum:
      - local
      - webhook
      - webhook_slack
      - email
      type: string
    NotificationTransportRequest:
      description: NotificationTransport Serializer
      example:
        mode: null
        webhook_mapping_headers: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        webhook_url: https://openapi-generator.tech
        name: name
        send_once: true
        webhook_mapping_body: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        mode:
          $ref: '#/components/schemas/NotificationTransportModeEnum'
        webhook_url:
          format: uri
          type: string
        webhook_mapping_body:
          description: Customize the body of the request. Mapping should return data
            that is JSON-serializable.
          format: uuid
          nullable: true
          type: string
        webhook_mapping_headers:
          description: Configure additional headers to be sent. Mapping should return
            a dictionary of key-value pairs
          format: uuid
          nullable: true
          type: string
        send_once:
          description: "Only send notification once, for example when sending a webhook\
            \ into a chat channel."
          type: boolean
      required:
      - name
      type: object
    NotificationTransportTest:
      description: Notification test serializer
      example:
        messages:
        - messages
        - messages
      properties:
        messages:
          items:
            type: string
          type: array
      required:
      - messages
      type: object
    NotificationWebhookMapping:
      description: NotificationWebhookMapping Serializer
      example:
        expression: expression
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        name:
          type: string
        expression:
          type: string
      required:
      - expression
      - name
      - pk
      type: object
    NotificationWebhookMappingRequest:
      description: NotificationWebhookMapping Serializer
      example:
        expression: expression
        name: name
      properties:
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    OAuth2Provider:
      description: OAuth2Provider Serializer
      example:
        verbose_name_plural: verbose_name_plural
        signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_application_slug: assigned_application_slug
        client_type: ""
        sub_mode: ""
        client_id: client_id
        jwt_federation_sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        refresh_token_validity: refresh_token_validity
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        access_code_validity: access_code_validity
        assigned_application_name: assigned_application_name
        assigned_backchannel_application_name: assigned_backchannel_application_name
        issuer_mode: ""
        client_secret: client_secret
        jwt_federation_providers:
        - 1
        - 1
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redirect_uris:
        - matching_mode: null
          url: url
        - matching_mode: null
          url: url
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        include_claims_in_id_token: true
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        access_token_validity: access_token_validity
        name: name
        encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 6
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        client_type:
          allOf:
          - $ref: '#/components/schemas/ClientTypeEnum'
          description: Confidential clients are capable of maintaining the confidentiality
            of their credentials. Public clients are incapable
        client_id:
          maxLength: 255
          type: string
        client_secret:
          maxLength: 255
          type: string
        access_code_validity:
          description: "Access codes not valid on or after current time + this value\
            \ (Format: hours=1;minutes=2;seconds=3)."
          type: string
        access_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          type: string
        refresh_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          type: string
        include_claims_in_id_token:
          description: "Include User claims from scopes in the id_token, for applications\
            \ that don't access the userinfo endpoint."
          type: boolean
        signing_key:
          description: Key used to sign the tokens.
          format: uuid
          nullable: true
          type: string
        encryption_key:
          description: "Key used to encrypt the tokens. When set, tokens will be encrypted\
            \ and returned as JWEs."
          format: uuid
          nullable: true
          type: string
        redirect_uris:
          items:
            $ref: '#/components/schemas/RedirectURI'
          type: array
        sub_mode:
          allOf:
          - $ref: '#/components/schemas/SubModeEnum'
          description: "Configure what data should be used as unique User Identifier.\
            \ For most cases, the default should be fine."
        issuer_mode:
          allOf:
          - $ref: '#/components/schemas/IssuerModeEnum'
          description: Configure how the issuer field of the ID Token should be filled.
        jwt_federation_sources:
          items:
            format: uuid
            title: Any JWT signed by the JWK of the selected source can be used to
              authenticate.
            type: string
          title: Any JWT signed by the JWK of the selected source can be used to authenticate.
          type: array
        jwt_federation_providers:
          items:
            type: integer
          type: array
      required:
      - assigned_application_name
      - assigned_application_slug
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - authorization_flow
      - component
      - invalidation_flow
      - meta_model_name
      - name
      - pk
      - redirect_uris
      - verbose_name
      - verbose_name_plural
      type: object
    OAuth2ProviderRequest:
      description: OAuth2Provider Serializer
      example:
        signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_type: ""
        redirect_uris:
        - matching_mode: null
          url: url
        - matching_mode: null
          url: url
        sub_mode: ""
        client_id: client_id
        jwt_federation_sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        refresh_token_validity: refresh_token_validity
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        access_code_validity: access_code_validity
        include_claims_in_id_token: true
        access_token_validity: access_token_validity
        issuer_mode: ""
        name: name
        encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_secret: client_secret
        jwt_federation_providers:
        - 0
        - 0
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        client_type:
          allOf:
          - $ref: '#/components/schemas/ClientTypeEnum'
          description: Confidential clients are capable of maintaining the confidentiality
            of their credentials. Public clients are incapable
        client_id:
          maxLength: 255
          minLength: 1
          type: string
        client_secret:
          maxLength: 255
          type: string
        access_code_validity:
          description: "Access codes not valid on or after current time + this value\
            \ (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        access_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        refresh_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        include_claims_in_id_token:
          description: "Include User claims from scopes in the id_token, for applications\
            \ that don't access the userinfo endpoint."
          type: boolean
        signing_key:
          description: Key used to sign the tokens.
          format: uuid
          nullable: true
          type: string
        encryption_key:
          description: "Key used to encrypt the tokens. When set, tokens will be encrypted\
            \ and returned as JWEs."
          format: uuid
          nullable: true
          type: string
        redirect_uris:
          items:
            $ref: '#/components/schemas/RedirectURIRequest'
          type: array
        sub_mode:
          allOf:
          - $ref: '#/components/schemas/SubModeEnum'
          description: "Configure what data should be used as unique User Identifier.\
            \ For most cases, the default should be fine."
        issuer_mode:
          allOf:
          - $ref: '#/components/schemas/IssuerModeEnum'
          description: Configure how the issuer field of the ID Token should be filled.
        jwt_federation_sources:
          items:
            format: uuid
            title: Any JWT signed by the JWK of the selected source can be used to
              authenticate.
            type: string
          title: Any JWT signed by the JWK of the selected source can be used to authenticate.
          type: array
        jwt_federation_providers:
          items:
            type: integer
          type: array
      required:
      - authorization_flow
      - invalidation_flow
      - name
      - redirect_uris
      type: object
    OAuth2ProviderSetupURLs:
      description: OAuth2 Provider Metadata serializer
      example:
        logout: logout
        jwks: jwks
        user_info: user_info
        authorize: authorize
        issuer: issuer
        token: token
        provider_info: provider_info
      properties:
        issuer:
          readOnly: true
          type: string
        authorize:
          readOnly: true
          type: string
        token:
          readOnly: true
          type: string
        user_info:
          readOnly: true
          type: string
        provider_info:
          readOnly: true
          type: string
        logout:
          readOnly: true
          type: string
        jwks:
          readOnly: true
          type: string
      required:
      - authorize
      - issuer
      - jwks
      - logout
      - provider_info
      - token
      - user_info
      type: object
    OAuthDeviceCodeChallenge:
      description: OAuth Device code challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-provider-oauth2-device-code
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
      type: object
    OAuthDeviceCodeChallengeResponseRequest:
      description: Response that includes the user-entered device code
      properties:
        component:
          default: ak-provider-oauth2-device-code
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
      required:
      - code
      type: object
    OAuthDeviceCodeFinishChallenge:
      description: Final challenge after user enters their code
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-provider-oauth2-device-code-finish
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
      type: object
    OAuthDeviceCodeFinishChallengeResponseRequest:
      description: Response that device has been authenticated and tab can be closed
      properties:
        component:
          default: ak-provider-oauth2-device-code-finish
          minLength: 1
          type: string
      type: object
    OAuthSource:
      description: OAuth Source Serializer
      example:
        provider_type: null
        user_matching_mode: ""
        verbose_name_plural: verbose_name_plural
        request_token_url: request_token_url
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        profile_url: profile_url
        icon: icon
        oidc_jwks:
          key: ""
        authorization_code_auth_method: ""
        type: ""
        additional_scopes: additional_scopes
        enabled: true
        callback_url: callback_url
        managed: managed
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        access_token_url: access_token_url
        slug: slug
        oidc_jwks_url: oidc_jwks_url
        user_path_template: user_path_template
        authorization_url: authorization_url
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        consumer_key: consumer_key
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oidc_well_known_url: oidc_well_known_url
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Source's display Name.
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
        user_path_template:
          type: string
        icon:
          nullable: true
          readOnly: true
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        provider_type:
          $ref: '#/components/schemas/ProviderTypeEnum'
        request_token_url:
          description: URL used to request the initial token. This URL is only required
            for OAuth 1.
          maxLength: 255
          nullable: true
          type: string
        authorization_url:
          description: URL the user is redirect to to conest the flow.
          maxLength: 255
          nullable: true
          type: string
        access_token_url:
          description: URL used by authentik to retrieve tokens.
          maxLength: 255
          nullable: true
          type: string
        profile_url:
          description: URL used by authentik to get user information.
          maxLength: 255
          nullable: true
          type: string
        consumer_key:
          type: string
        callback_url:
          description: Get OAuth Callback URL
          readOnly: true
          type: string
        additional_scopes:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          readOnly: true
        oidc_well_known_url:
          type: string
        oidc_jwks_url:
          type: string
        oidc_jwks:
          additionalProperties: {}
          type: object
        authorization_code_auth_method:
          allOf:
          - $ref: '#/components/schemas/AuthorizationCodeAuthMethodEnum'
          description: How to perform authentication during an authorization_code
            token request flow
      required:
      - callback_url
      - component
      - consumer_key
      - icon
      - managed
      - meta_model_name
      - name
      - pk
      - provider_type
      - slug
      - type
      - verbose_name
      - verbose_name_plural
      type: object
    OAuthSourcePropertyMapping:
      description: OAuthSourcePropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    OAuthSourcePropertyMappingRequest:
      description: OAuthSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    OAuthSourceRequest:
      description: OAuth Source Serializer
      example:
        provider_type: null
        user_matching_mode: ""
        consumer_secret: consumer_secret
        oidc_jwks_url: oidc_jwks_url
        user_path_template: user_path_template
        request_token_url: request_token_url
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        profile_url: profile_url
        authorization_url: authorization_url
        oidc_jwks:
          key: ""
        authorization_code_auth_method: ""
        additional_scopes: additional_scopes
        enabled: true
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        consumer_key: consumer_key
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oidc_well_known_url: oidc_well_known_url
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        access_token_url: access_token_url
        slug: slug
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        provider_type:
          $ref: '#/components/schemas/ProviderTypeEnum'
        request_token_url:
          description: URL used to request the initial token. This URL is only required
            for OAuth 1.
          maxLength: 255
          nullable: true
          type: string
        authorization_url:
          description: URL the user is redirect to to conest the flow.
          maxLength: 255
          nullable: true
          type: string
        access_token_url:
          description: URL used by authentik to retrieve tokens.
          maxLength: 255
          nullable: true
          type: string
        profile_url:
          description: URL used by authentik to get user information.
          maxLength: 255
          nullable: true
          type: string
        consumer_key:
          minLength: 1
          type: string
        consumer_secret:
          minLength: 1
          type: string
          writeOnly: true
        additional_scopes:
          type: string
        oidc_well_known_url:
          type: string
        oidc_jwks_url:
          type: string
        oidc_jwks:
          additionalProperties: {}
          type: object
        authorization_code_auth_method:
          allOf:
          - $ref: '#/components/schemas/AuthorizationCodeAuthMethodEnum'
          description: How to perform authentication during an authorization_code
            token request flow
      required:
      - consumer_key
      - consumer_secret
      - name
      - provider_type
      - slug
      type: object
    OpenIDConnectConfiguration:
      description: rest_framework Serializer for OIDC Configuration
      properties:
        issuer:
          type: string
        authorization_endpoint:
          type: string
        token_endpoint:
          type: string
        userinfo_endpoint:
          type: string
        end_session_endpoint:
          type: string
        introspection_endpoint:
          type: string
        jwks_uri:
          type: string
        response_types_supported:
          items:
            type: string
          type: array
        id_token_signing_alg_values_supported:
          items:
            type: string
          type: array
        subject_types_supported:
          items:
            type: string
          type: array
        token_endpoint_auth_methods_supported:
          items:
            type: string
          type: array
      required:
      - authorization_endpoint
      - end_session_endpoint
      - id_token_signing_alg_values_supported
      - introspection_endpoint
      - issuer
      - jwks_uri
      - response_types_supported
      - subject_types_supported
      - token_endpoint
      - token_endpoint_auth_methods_supported
      - userinfo_endpoint
      type: object
    OutgoingSyncDeleteAction:
      enum:
      - do_nothing
      - delete
      - suspend
      type: string
    Outpost:
      description: Outpost Serializer
      example:
        service_connection_obj: ""
        providers_obj:
        - verbose_name_plural: verbose_name_plural
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - verbose_name_plural: verbose_name_plural
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        refresh_interval_s: 6
        token_identifier: token_identifier
        managed: managed
        name: name
        service_connection: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
        config:
          key: ""
        providers:
        - 0
        - 0
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/OutpostTypeEnum'
        providers:
          items:
            type: integer
          type: array
        providers_obj:
          items:
            $ref: '#/components/schemas/Provider'
          readOnly: true
          type: array
        service_connection:
          description: Select Service-Connection authentik should use to manage this
            outpost. Leave empty if authentik should not handle the deployment.
          format: uuid
          nullable: true
          type: string
        service_connection_obj:
          allOf:
          - $ref: '#/components/schemas/ServiceConnection'
          readOnly: true
        refresh_interval_s:
          readOnly: true
          type: integer
        token_identifier:
          description: Get Token identifier
          readOnly: true
          type: string
        config:
          additionalProperties: {}
          type: object
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
      required:
      - config
      - name
      - pk
      - providers
      - providers_obj
      - refresh_interval_s
      - service_connection_obj
      - token_identifier
      - type
      type: object
    OutpostDefaultConfig:
      description: Global default outpost config
      example:
        config:
          key: ""
      properties:
        config:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - config
      type: object
    OutpostHealth:
      description: Outpost health status
      example:
        uid: uid
        hostname: hostname
        last_seen: 2000-01-23T04:56:07.000+00:00
        openssl_version: openssl_version
        version_should: version_should
        build_hash_should: build_hash_should
        fips_enabled: true
        version_outdated: true
        version: version
        golang_version: golang_version
        openssl_enabled: true
        build_hash: build_hash
      properties:
        uid:
          readOnly: true
          type: string
        last_seen:
          format: date-time
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
        golang_version:
          readOnly: true
          type: string
        openssl_enabled:
          readOnly: true
          type: boolean
        openssl_version:
          readOnly: true
          type: string
        fips_enabled:
          description: Get FIPS enabled
          nullable: true
          readOnly: true
          type: boolean
        version_should:
          readOnly: true
          type: string
        version_outdated:
          readOnly: true
          type: boolean
        build_hash:
          readOnly: true
          type: string
        build_hash_should:
          readOnly: true
          type: string
        hostname:
          readOnly: true
          type: string
      required:
      - build_hash
      - build_hash_should
      - fips_enabled
      - golang_version
      - hostname
      - last_seen
      - openssl_enabled
      - openssl_version
      - uid
      - version
      - version_outdated
      - version_should
      type: object
    OutpostRequest:
      description: Outpost Serializer
      example:
        managed: managed
        name: name
        service_connection: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
        config:
          key: ""
        providers:
        - 0
        - 0
      properties:
        name:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/OutpostTypeEnum'
        providers:
          items:
            type: integer
          type: array
        service_connection:
          description: Select Service-Connection authentik should use to manage this
            outpost. Leave empty if authentik should not handle the deployment.
          format: uuid
          nullable: true
          type: string
        config:
          additionalProperties: {}
          type: object
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
      required:
      - config
      - name
      - providers
      - type
      type: object
    OutpostTypeEnum:
      enum:
      - proxy
      - ldap
      - radius
      - rac
      type: string
    PaginatedApplicationEntitlementList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - app: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pbm_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          attributes:
            key: ""
        - app: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pbm_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          attributes:
            key: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ApplicationEntitlement'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedApplicationList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - provider_obj: ""
          backchannel_providers:
          - 6
          - 6
          meta_launch_url: https://openapi-generator.tech
          meta_icon: meta_icon
          meta_publisher: meta_publisher
          policy_engine_mode: null
          meta_description: meta_description
          launch_url: launch_url
          provider: 0
          open_in_new_tab: true
          name: name
          backchannel_providers_obj:
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
          group: group
        - provider_obj: ""
          backchannel_providers:
          - 6
          - 6
          meta_launch_url: https://openapi-generator.tech
          meta_icon: meta_icon
          meta_publisher: meta_publisher
          policy_engine_mode: null
          meta_description: meta_description
          launch_url: launch_url
          provider: 0
          open_in_new_tab: true
          name: name
          backchannel_providers_obj:
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
          group: group
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Application'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatedSessionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - last_ip: last_ip
          current: true
          expires: 2000-01-23T04:56:07.000+00:00
          geo_ip:
            continent: continent
            country: country
            city: city
            lat: 0.8008281904610115
            long: 6.027456183070403
          last_used: 2000-01-23T04:56:07.000+00:00
          last_user_agent: last_user_agent
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          asn:
            as_org: as_org
            asn: 1
            network: network
          user: 5
          user_agent:
            os:
              patch: patch
              patch_minor: patch_minor
              major: major
              minor: minor
              family: family
            string: string
            device:
              model: model
              family: family
              brand: brand
            user_agent:
              patch: patch
              major: major
              minor: minor
              family: family
        - last_ip: last_ip
          current: true
          expires: 2000-01-23T04:56:07.000+00:00
          geo_ip:
            continent: continent
            country: country
            city: city
            lat: 0.8008281904610115
            long: 6.027456183070403
          last_used: 2000-01-23T04:56:07.000+00:00
          last_user_agent: last_user_agent
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          asn:
            as_org: as_org
            asn: 1
            network: network
          user: 5
          user_agent:
            os:
              patch: patch
              patch_minor: patch_minor
              major: major
              minor: minor
              family: family
            string: string
            device:
              model: model
              family: family
              brand: brand
            user_agent:
              patch: patch
              major: major
              minor: minor
              family: family
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatedSession'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorDuoStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          api_hostname: api_hostname
          admin_integration_key: admin_integration_key
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          client_id: client_id
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          api_hostname: api_hostname
          admin_integration_key: admin_integration_key
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          client_id: client_id
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorDuoStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorEmailStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - template: template
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          use_global_settings: true
          use_ssl: true
          subject: subject
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          token_expiry: token_expiry
          timeout: 441289069
          use_tls: true
          component: component
          verbose_name: verbose_name
          password: password
          meta_model_name: meta_model_name
          port: -1803530559
          name: name
          host: host
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          from_address: from_address
          username: username
        - template: template
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          use_global_settings: true
          use_ssl: true
          subject: subject
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          token_expiry: token_expiry
          timeout: 441289069
          use_tls: true
          component: component
          verbose_name: verbose_name
          password: password
          meta_model_name: meta_model_name
          port: -1803530559
          name: name
          host: host
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          from_address: from_address
          username: username
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorEmailStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorEndpointGDTCStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          credentials:
            key: ""
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          credentials:
            key: ""
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorEndpointGDTCStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorSMSStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          auth_type: null
          mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          auth: auth
          auth_password: auth_password
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          verify_only: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          provider: null
          from_number: from_number
          name: name
          account_sid: account_sid
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          auth_type: null
          mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          auth: auth
          auth_password: auth_password
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          verify_only: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          provider: null
          from_number: from_number
          name: name
          account_sid: account_sid
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorSMSStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorStaticStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          token_count: 171976544
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          token_length: 1294386358
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          token_count: 171976544
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          token_length: 1294386358
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorStaticStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorTOTPStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          digits: null
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          digits: null
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorTOTPStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorValidateStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - webauthn_user_verification: ""
          webauthn_allowed_device_types:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          device_classes:
          - null
          - null
          webauthn_allowed_device_types_obj:
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          last_auth_threshold: last_auth_threshold
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          component: component
          verbose_name: verbose_name
          not_configured_action: null
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configuration_stages:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - webauthn_user_verification: ""
          webauthn_allowed_device_types:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          device_classes:
          - null
          - null
          webauthn_allowed_device_types_obj:
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          last_auth_threshold: last_auth_threshold
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          component: component
          verbose_name: verbose_name
          not_configured_action: null
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configuration_stages:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorValidateStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedAuthenticatorWebAuthnStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          device_type_restrictions_obj:
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          verbose_name_plural: verbose_name_plural
          user_verification: null
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          authenticator_attachment: ""
          resident_key_requirement: null
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          device_type_restrictions:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_attempts: 171976544
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          friendly_name: friendly_name
          device_type_restrictions_obj:
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
          verbose_name_plural: verbose_name_plural
          user_verification: null
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          authenticator_attachment: ""
          resident_key_requirement: null
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          device_type_restrictions:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_attempts: 171976544
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/AuthenticatorWebAuthnStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedBlueprintInstanceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - path: path
          metadata:
            key: ""
          last_applied_hash: last_applied_hash
          managed_models:
          - managed_models
          - managed_models
          last_applied: 2000-01-23T04:56:07.000+00:00
          name: name
          context:
            key: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
          content: content
          status: ""
        - path: path
          metadata:
            key: ""
          last_applied_hash: last_applied_hash
          managed_models:
          - managed_models
          - managed_models
          last_applied: 2000-01-23T04:56:07.000+00:00
          name: name
          context:
            key: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
          content: content
          status: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/BlueprintInstance'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedBrandList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - branding_logo: branding_logo
          default_application: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          client_certificates:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_device_code: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          branding_default_flow_background: branding_default_flow_background
          flow_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_recovery: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          default: true
          branding_custom_css: branding_custom_css
          flow_invalidation: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          flow_unenrollment: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          attributes:
            key: ""
          branding_title: branding_title
          branding_favicon: branding_favicon
          flow_user_settings: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          brand_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          web_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - branding_logo: branding_logo
          default_application: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          client_certificates:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_device_code: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          branding_default_flow_background: branding_default_flow_background
          flow_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_recovery: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          default: true
          branding_custom_css: branding_custom_css
          flow_invalidation: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          flow_unenrollment: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          attributes:
            key: ""
          branding_title: branding_title
          branding_favicon: branding_favicon
          flow_user_settings: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          brand_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          web_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Brand'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedCaptchaStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - public_key: public_key
          error_on_invalid_score: true
          verbose_name_plural: verbose_name_plural
          api_url: api_url
          interactive: true
          score_min_threshold: 0.8008281904610115
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          name: name
          js_url: js_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          score_max_threshold: 6.027456183070403
        - public_key: public_key
          error_on_invalid_score: true
          verbose_name_plural: verbose_name_plural
          api_url: api_url
          interactive: true
          score_min_threshold: 0.8008281904610115
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          name: name
          js_url: js_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          score_max_threshold: 6.027456183070403
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/CaptchaStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedCertificateKeyPairList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - certificate_download_url: certificate_download_url
          fingerprint_sha1: fingerprint_sha1
          managed: managed
          private_key_type: private_key_type
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cert_expiry: 2000-01-23T04:56:07.000+00:00
          private_key_available: true
          private_key_download_url: private_key_download_url
          fingerprint_sha256: fingerprint_sha256
          cert_subject: cert_subject
        - certificate_download_url: certificate_download_url
          fingerprint_sha1: fingerprint_sha1
          managed: managed
          private_key_type: private_key_type
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cert_expiry: 2000-01-23T04:56:07.000+00:00
          private_key_available: true
          private_key_download_url: private_key_download_url
          fingerprint_sha256: fingerprint_sha256
          cert_subject: cert_subject
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/CertificateKeyPair'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedConnectionTokenList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - endpoint: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          provider_obj: ""
          provider: 0
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endpoint_obj: ""
          user: ""
        - endpoint: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          provider_obj: ""
          provider: 0
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endpoint_obj: ""
          user: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ConnectionToken'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedConsentStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - mode: null
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          consent_expire_in: consent_expire_in
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - mode: null
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          consent_expire_in: consent_expire_in
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ConsentStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedDenyStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          deny_message: deny_message
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          deny_message: deny_message
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/DenyStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedDockerServiceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          tls_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          local: true
          url: url
          tls_verification: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          tls_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          local: true
          url: url
          tls_verification: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/DockerServiceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedDomainList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - is_primary: true
          domain: domain
          id: 0
          tenant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - is_primary: true
          domain: domain
          id: 0
          tenant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Domain'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedDummyPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - result: true
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          wait_min: 441289069
          wait_max: -1517921766
        - result: true
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          wait_min: 441289069
          wait_max: -1517921766
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/DummyPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedDummyStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          throw_error: true
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          throw_error: true
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/DummyStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedDuoDeviceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - name: name
          pk: 9
          user: ""
        - name: name
          pk: 9
          user: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/DuoDevice'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedEmailDeviceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - name: name
          pk: 0
          user: ""
          email: email
        - name: name
          pk: 0
          user: ""
          email: email
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/EmailDevice'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedEmailStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - template: template
          verbose_name_plural: verbose_name_plural
          use_global_settings: true
          use_ssl: true
          subject: subject
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          token_expiry: token_expiry
          timeout: 441289069
          use_tls: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          port: -1803530559
          activate_user_on_success: true
          name: name
          host: host
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          from_address: from_address
          username: username
        - template: template
          verbose_name_plural: verbose_name_plural
          use_global_settings: true
          use_ssl: true
          subject: subject
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          token_expiry: token_expiry
          timeout: 441289069
          use_tls: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          port: -1803530559
          activate_user_on_success: true
          name: name
          host: host
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          from_address: from_address
          username: username
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/EmailStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedEndpointDeviceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/EndpointDevice'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedEndpointList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - settings:
            key: ""
          protocol: null
          provider_obj: ""
          launch_url: launch_url
          provider: 0
          maximum_connections: 441289069
          name: name
          host: host
          auth_mode: null
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - settings:
            key: ""
          protocol: null
          provider_obj: ""
          launch_url: launch_url
          provider: 0
          maximum_connections: 441289069
          name: name
          host: host
          auth_mode: null
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedEventList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - app: app
          expires: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          context:
            key: ""
          action: null
          client_ip: client_ip
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user:
            key: ""
          brand:
            key: ""
        - app: app
          expires: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          context:
            key: ""
          action: null
          client_ip: client_ip
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user:
            key: ""
          brand:
            key: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Event'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedEventMatcherPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - app: ""
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          action: ""
          client_ip: client_ip
          model: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - app: ""
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          action: ""
          client_ip: client_ip
          model: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/EventMatcherPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedExpiringBaseGrantModelList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - expires: 2000-01-23T04:56:07.000+00:00
          is_expired: true
          provider:
            verbose_name_plural: verbose_name_plural
            signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            client_type: ""
            sub_mode: ""
            client_id: client_id
            jwt_federation_sources:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            refresh_token_validity: refresh_token_validity
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            access_code_validity: access_code_validity
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            issuer_mode: ""
            client_secret: client_secret
            jwt_federation_providers:
            - 1
            - 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redirect_uris:
            - matching_mode: null
              url: url
            - matching_mode: null
              url: url
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            meta_model_name: meta_model_name
            include_claims_in_id_token: true
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            access_token_validity: access_token_validity
            name: name
            encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            pk: 6
          scope:
          - scope
          - scope
          pk: 0
          user:
            is_active: true
            is_superuser: true
            last_login: 2000-01-23T04:56:07.000+00:00
            password_change_date: 2000-01-23T04:56:07.000+00:00
            groups:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            avatar: avatar
            type: null
            groups_obj:
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uid: uid
            path: path
            name: name
            attributes:
              key: ""
            pk: 6
            date_joined: 2000-01-23T04:56:07.000+00:00
            email: email
            username: username
        - expires: 2000-01-23T04:56:07.000+00:00
          is_expired: true
          provider:
            verbose_name_plural: verbose_name_plural
            signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            client_type: ""
            sub_mode: ""
            client_id: client_id
            jwt_federation_sources:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            refresh_token_validity: refresh_token_validity
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            access_code_validity: access_code_validity
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            issuer_mode: ""
            client_secret: client_secret
            jwt_federation_providers:
            - 1
            - 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redirect_uris:
            - matching_mode: null
              url: url
            - matching_mode: null
              url: url
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            meta_model_name: meta_model_name
            include_claims_in_id_token: true
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            access_token_validity: access_token_validity
            name: name
            encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            pk: 6
          scope:
          - scope
          - scope
          pk: 0
          user:
            is_active: true
            is_superuser: true
            last_login: 2000-01-23T04:56:07.000+00:00
            password_change_date: 2000-01-23T04:56:07.000+00:00
            groups:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            avatar: avatar
            type: null
            groups_obj:
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uid: uid
            path: path
            name: name
            attributes:
              key: ""
            pk: 6
            date_joined: 2000-01-23T04:56:07.000+00:00
            email: email
            username: username
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ExpiringBaseGrantModel'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedExpressionPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ExpressionPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedExtraRoleObjectPermissionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        results:
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          object_description: object_description
          model: model
          id: 0
          app_label_verbose: app_label_verbose
          object_pk: object_pk
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          object_description: object_description
          model: model
          id: 0
          app_label_verbose: app_label_verbose
          object_pk: object_pk
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ExtraRoleObjectPermission'
          type: array
      required:
      - pagination
      - results
      type: object
    PaginatedExtraUserObjectPermissionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        results:
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          object_description: object_description
          model: model
          id: 0
          app_label_verbose: app_label_verbose
          object_pk: object_pk
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          object_description: object_description
          model: model
          id: 0
          app_label_verbose: app_label_verbose
          object_pk: object_pk
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ExtraUserObjectPermission'
          type: array
      required:
      - pagination
      - results
      type: object
    PaginatedFlowList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - compatibility_mode: true
          denied_action: ""
          policies:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
          policy_engine_mode: null
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          name: name
          stages:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          cache_count: 0
          slug: slug
          authentication: ""
        - compatibility_mode: true
          denied_action: ""
          policies:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
          policy_engine_mode: null
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          name: name
          stages:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          cache_count: 0
          slug: slug
          authentication: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Flow'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedFlowStageBindingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - policy_engine_mode: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          evaluate_on_plan: true
          re_evaluate_policies: true
          invalid_response_action: ""
          stage_obj: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: -1803530559
        - policy_engine_mode: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          evaluate_on_plan: true
          re_evaluate_policies: true
          invalid_response_action: ""
          stage_obj: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: -1803530559
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/FlowStageBinding'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGeoIPPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - verbose_name_plural: verbose_name_plural
          execution_logging: true
          countries:
          - null
          - null
          - null
          - null
          - null
          history_max_distance_km: 1351973845562961920
          check_history_distance: true
          history_login_count: 1210617418
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          bound_to: 0
          check_impossible_travel: true
          name: name
          distance_tolerance_km: 1280358508
          asns:
          - 441289069
          - 441289069
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          countries_obj:
          - code: null
            name: name
          - code: null
            name: name
          impossible_tolerance_km: 494379917
        - verbose_name_plural: verbose_name_plural
          execution_logging: true
          countries:
          - null
          - null
          - null
          - null
          - null
          history_max_distance_km: 1351973845562961920
          check_history_distance: true
          history_login_count: 1210617418
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          bound_to: 0
          check_impossible_travel: true
          name: name
          distance_tolerance_km: 1280358508
          asns:
          - 441289069
          - 441289069
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          countries_obj:
          - code: null
            name: name
          - code: null
            name: name
          impossible_tolerance_km: 494379917
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GeoIPPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGoogleWorkspaceProviderGroupList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - google_id: google_id
          provider: 0
          group_obj: ""
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - google_id: google_id
          provider: 0
          group_obj: ""
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GoogleWorkspaceProviderGroup'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGoogleWorkspaceProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - delegated_subject: delegated_subject
          property_mappings_group:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          credentials:
            key: ""
          user_delete_action: null
          exclude_users_service_account: true
          default_group_email_domain: default_group_email_domain
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          dry_run: true
          pk: 0
          scopes: scopes
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group_delete_action: null
        - delegated_subject: delegated_subject
          property_mappings_group:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          credentials:
            key: ""
          user_delete_action: null
          exclude_users_service_account: true
          default_group_email_domain: default_group_email_domain
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          dry_run: true
          pk: 0
          scopes: scopes
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group_delete_action: null
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GoogleWorkspaceProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGoogleWorkspaceProviderMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GoogleWorkspaceProviderMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGoogleWorkspaceProviderUserList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - user_obj: ""
          google_id: google_id
          provider: 6
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
        - user_obj: ""
          google_id: google_id
          provider: 6
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GoogleWorkspaceProviderUser'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGroupKerberosSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GroupKerberosSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGroupLDAPSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GroupLDAPSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGroupList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - parent_name: parent_name
          parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          roles_obj:
          - name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_superuser: true
          roles:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          attributes:
            key: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          num_pk: 0
          users_obj:
          - uid: uid
            is_active: true
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            attributes:
              key: ""
            pk: 1
            email: email
            username: username
          - uid: uid
            is_active: true
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            attributes:
              key: ""
            pk: 1
            email: email
            username: username
          users:
          - 6
          - 6
        - parent_name: parent_name
          parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          roles_obj:
          - name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_superuser: true
          roles:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          attributes:
            key: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          num_pk: 0
          users_obj:
          - uid: uid
            is_active: true
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            attributes:
              key: ""
            pk: 1
            email: email
            username: username
          - uid: uid
            is_active: true
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            attributes:
              key: ""
            pk: 1
            email: email
            username: username
          users:
          - 6
          - 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGroupOAuthSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GroupOAuthSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGroupPlexSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GroupPlexSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGroupSAMLSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GroupSAMLSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedGroupSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/GroupSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedIdentificationStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - show_source_labels: true
          verbose_name_plural: verbose_name_plural
          sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          pretend_user_exists: true
          passwordless_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          user_fields:
          - null
          - null
          show_matched_user: true
          meta_model_name: meta_model_name
          name: name
          password_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          captcha_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          recovery_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          case_insensitive_matching: true
          enable_remember_me: true
        - show_source_labels: true
          verbose_name_plural: verbose_name_plural
          sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          pretend_user_exists: true
          passwordless_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          user_fields:
          - null
          - null
          show_matched_user: true
          meta_model_name: meta_model_name
          name: name
          password_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          captcha_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          recovery_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          case_insensitive_matching: true
          enable_remember_me: true
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/IdentificationStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedInitialPermissionsList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - mode: null
          role: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions_obj:
          - app_label: app_label
            codename: codename
            model_verbose: model_verbose
            name: name
            model: model
            id: 1
            app_label_verbose: app_label_verbose
          - app_label: app_label
            codename: codename
            model_verbose: model_verbose
            name: name
            model: model
            id: 1
            app_label_verbose: app_label_verbose
          permissions:
          - 6
          - 6
          name: name
          pk: 0
        - mode: null
          role: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissions_obj:
          - app_label: app_label
            codename: codename
            model_verbose: model_verbose
            name: name
            model: model
            id: 1
            app_label_verbose: app_label_verbose
          - app_label: app_label
            codename: codename
            model_verbose: model_verbose
            name: name
            model: model
            id: 1
            app_label_verbose: app_label_verbose
          permissions:
          - 6
          - 6
          name: name
          pk: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/InitialPermissions'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedInvitationList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - fixed_data:
            key: ""
          expires: 2000-01-23T04:56:07.000+00:00
          name: name
          single_use: true
          flow_obj: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
          flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - fixed_data:
            key: ""
          expires: 2000-01-23T04:56:07.000+00:00
          name: name
          single_use: true
          flow_obj: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
          flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Invitation'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedInvitationStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - continue_flow_without_invitation: true
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - continue_flow_without_invitation: true
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/InvitationStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedKerberosSourceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sync_users: true
          icon: icon
          sync_ccache: sync_ccache
          enabled: true
          kadmin_type: ""
          spnego_server_name: spnego_server_name
          krb5_conf: krb5_conf
          connectivity:
            key: connectivity
          managed: managed
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          spnego_ccache: spnego_ccache
          slug: slug
          sync_principal: sync_principal
          user_path_template: user_path_template
          group_matching_mode: ""
          password_login_update_internal_password: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          sync_users_password: true
          meta_model_name: meta_model_name
          name: name
          realm: realm
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sync_users: true
          icon: icon
          sync_ccache: sync_ccache
          enabled: true
          kadmin_type: ""
          spnego_server_name: spnego_server_name
          krb5_conf: krb5_conf
          connectivity:
            key: connectivity
          managed: managed
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          spnego_ccache: spnego_ccache
          slug: slug
          sync_principal: sync_principal
          user_path_template: user_path_template
          group_matching_mode: ""
          password_login_update_internal_password: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          sync_users_password: true
          meta_model_name: meta_model_name
          name: name
          realm: realm
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/KerberosSource'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedKerberosSourcePropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/KerberosSourcePropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedKubernetesServiceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          verify_ssl: true
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          local: true
          kubeconfig:
            key: ""
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          verify_ssl: true
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          local: true
          kubeconfig:
            key: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/KubernetesServiceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedLDAPOutpostConfigList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - uid_start_number: 441289069
          search_mode: null
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tls_server_name: tls_server_name
          bind_mode: null
          unbind_flow_slug: unbind_flow_slug
          mfa_support: true
          application_slug: application_slug
          bind_flow_slug: bind_flow_slug
          base_dn: base_dn
          name: name
          pk: 0
          gid_start_number: -1517921766
        - uid_start_number: 441289069
          search_mode: null
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tls_server_name: tls_server_name
          bind_mode: null
          unbind_flow_slug: unbind_flow_slug
          mfa_support: true
          application_slug: application_slug
          bind_flow_slug: bind_flow_slug
          base_dn: base_dn
          name: name
          pk: 0
          gid_start_number: -1517921766
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/LDAPOutpostConfig'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedLDAPProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - uid_start_number: 441289069
          search_mode: null
          verbose_name_plural: verbose_name_plural
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tls_server_name: tls_server_name
          bind_mode: null
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          mfa_support: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          base_dn: base_dn
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 0
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          gid_start_number: -1517921766
        - uid_start_number: 441289069
          search_mode: null
          verbose_name_plural: verbose_name_plural
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tls_server_name: tls_server_name
          bind_mode: null
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          mfa_support: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          base_dn: base_dn
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 0
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          gid_start_number: -1517921766
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/LDAPProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedLDAPSourceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - object_uniqueness_field: object_uniqueness_field
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          start_tls: true
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          additional_user_dn: additional_user_dn
          sync_users: true
          icon: icon
          enabled: true
          delete_not_found_objects: true
          client_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          base_dn: base_dn
          connectivity:
            key:
              key: connectivity
          managed: managed
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user_membership_attribute: user_membership_attribute
          additional_group_dn: additional_group_dn
          sync_parent_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
          group_membership_field: group_membership_field
          server_uri: https://openapi-generator.tech
          bind_cn: bind_cn
          user_path_template: user_path_template
          sync_groups: true
          lookup_groups_from_user: true
          group_object_filter: group_object_filter
          sni: true
          password_login_update_internal_password: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          sync_users_password: true
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user_object_filter: user_object_filter
          peer_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - object_uniqueness_field: object_uniqueness_field
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          start_tls: true
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          additional_user_dn: additional_user_dn
          sync_users: true
          icon: icon
          enabled: true
          delete_not_found_objects: true
          client_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          base_dn: base_dn
          connectivity:
            key:
              key: connectivity
          managed: managed
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user_membership_attribute: user_membership_attribute
          additional_group_dn: additional_group_dn
          sync_parent_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
          group_membership_field: group_membership_field
          server_uri: https://openapi-generator.tech
          bind_cn: bind_cn
          user_path_template: user_path_template
          sync_groups: true
          lookup_groups_from_user: true
          group_object_filter: group_object_filter
          sni: true
          password_login_update_internal_password: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          sync_users_password: true
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user_object_filter: user_object_filter
          peer_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/LDAPSource'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedLDAPSourcePropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/LDAPSourcePropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedLicenseList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - external_users: 6
          license_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          internal_users: 0
          expiry: 2000-01-23T04:56:07.000+00:00
          key: key
        - external_users: 6
          license_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          internal_users: 0
          expiry: 2000-01-23T04:56:07.000+00:00
          key: key
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/License'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedMicrosoftEntraProviderGroupList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - microsoft_id: microsoft_id
          provider: 0
          group_obj: ""
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - microsoft_id: microsoft_id
          provider: 0
          group_obj: ""
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/MicrosoftEntraProviderGroup'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedMicrosoftEntraProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - tenant_id: tenant_id
          property_mappings_group:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          user_delete_action: null
          client_id: client_id
          exclude_users_service_account: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          dry_run: true
          pk: 0
          client_secret: client_secret
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group_delete_action: null
        - tenant_id: tenant_id
          property_mappings_group:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          user_delete_action: null
          client_id: client_id
          exclude_users_service_account: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          dry_run: true
          pk: 0
          client_secret: client_secret
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group_delete_action: null
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/MicrosoftEntraProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedMicrosoftEntraProviderMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/MicrosoftEntraProviderMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedMicrosoftEntraProviderUserList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - microsoft_id: microsoft_id
          user_obj: ""
          provider: 6
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
        - microsoft_id: microsoft_id
          user_obj: ""
          provider: 6
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/MicrosoftEntraProviderUser'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedMutualTLSStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - mode: null
          component: component
          verbose_name: verbose_name
          certificate_authorities:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          user_attribute: null
          name: name
          cert_attribute: null
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - mode: null
          component: component
          verbose_name: verbose_name
          certificate_authorities:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          user_attribute: null
          name: name
          cert_attribute: null
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/MutualTLSStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedNotificationList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - severity: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          body: body
          event:
            app: app
            expires: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            context:
              key: ""
            action: null
            client_ip: client_ip
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            user:
              key: ""
            brand:
              key: ""
          seen: true
        - severity: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          body: body
          event:
            app: app
            expires: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            context:
              key: ""
            action: null
            client_ip: client_ip
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            user:
              key: ""
            brand:
              key: ""
          seen: true
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedNotificationRuleList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - severity: ""
          transports:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destination_group_obj: ""
          name: name
          destination_event_user: true
          destination_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - severity: ""
          transports:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destination_group_obj: ""
          name: name
          destination_event_user: true
          destination_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/NotificationRule'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedNotificationTransportList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - mode: null
          webhook_mapping_headers: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          webhook_url: https://openapi-generator.tech
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          mode_verbose: mode_verbose
          send_once: true
          webhook_mapping_body: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - mode: null
          webhook_mapping_headers: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          webhook_url: https://openapi-generator.tech
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          mode_verbose: mode_verbose
          send_once: true
          webhook_mapping_body: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/NotificationTransport'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedNotificationWebhookMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - expression: expression
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - expression: expression
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/NotificationWebhookMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedOAuth2ProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - verbose_name_plural: verbose_name_plural
          signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          client_type: ""
          sub_mode: ""
          client_id: client_id
          jwt_federation_sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_token_validity: refresh_token_validity
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          access_code_validity: access_code_validity
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          issuer_mode: ""
          client_secret: client_secret
          jwt_federation_providers:
          - 1
          - 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redirect_uris:
          - matching_mode: null
            url: url
          - matching_mode: null
            url: url
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          include_claims_in_id_token: true
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          access_token_validity: access_token_validity
          name: name
          encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 6
        - verbose_name_plural: verbose_name_plural
          signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          client_type: ""
          sub_mode: ""
          client_id: client_id
          jwt_federation_sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_token_validity: refresh_token_validity
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          access_code_validity: access_code_validity
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          issuer_mode: ""
          client_secret: client_secret
          jwt_federation_providers:
          - 1
          - 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redirect_uris:
          - matching_mode: null
            url: url
          - matching_mode: null
            url: url
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          include_claims_in_id_token: true
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          access_token_validity: access_token_validity
          name: name
          encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/OAuth2Provider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedOAuthSourceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - provider_type: null
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          request_token_url: request_token_url
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          profile_url: profile_url
          icon: icon
          oidc_jwks:
            key: ""
          authorization_code_auth_method: ""
          type: ""
          additional_scopes: additional_scopes
          enabled: true
          callback_url: callback_url
          managed: managed
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          access_token_url: access_token_url
          slug: slug
          oidc_jwks_url: oidc_jwks_url
          user_path_template: user_path_template
          authorization_url: authorization_url
          group_matching_mode: ""
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          consumer_key: consumer_key
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          oidc_well_known_url: oidc_well_known_url
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - provider_type: null
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          request_token_url: request_token_url
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          profile_url: profile_url
          icon: icon
          oidc_jwks:
            key: ""
          authorization_code_auth_method: ""
          type: ""
          additional_scopes: additional_scopes
          enabled: true
          callback_url: callback_url
          managed: managed
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          access_token_url: access_token_url
          slug: slug
          oidc_jwks_url: oidc_jwks_url
          user_path_template: user_path_template
          authorization_url: authorization_url
          group_matching_mode: ""
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          consumer_key: consumer_key
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          oidc_well_known_url: oidc_well_known_url
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/OAuthSource'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedOAuthSourcePropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/OAuthSourcePropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedOutpostList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - service_connection_obj: ""
          providers_obj:
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_interval_s: 6
          token_identifier: token_identifier
          managed: managed
          name: name
          service_connection: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
          config:
            key: ""
          providers:
          - 0
          - 0
        - service_connection_obj: ""
          providers_obj:
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_interval_s: 6
          token_identifier: token_identifier
          managed: managed
          name: name
          service_connection: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
          config:
            key: ""
          providers:
          - 0
          - 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Outpost'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPasswordExpiryPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          deny_only: true
          name: name
          days: 441289069
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          deny_only: true
          name: name
          days: 441289069
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PasswordExpiryPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPasswordPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - error_message: error_message
          amount_symbols: 1210617418
          amount_lowercase: 1280358508
          verbose_name_plural: verbose_name_plural
          execution_logging: true
          check_have_i_been_pwned: true
          check_zxcvbn: true
          amount_uppercase: 314780940
          length_min: 494379917
          password_field: password_field
          component: component
          verbose_name: verbose_name
          amount_digits: 1294386358
          meta_model_name: meta_model_name
          check_static_rules: true
          bound_to: 0
          symbol_charset: symbol_charset
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          zxcvbn_score_threshold: 1997469940
          hibp_allowed_count: 1516424369
        - error_message: error_message
          amount_symbols: 1210617418
          amount_lowercase: 1280358508
          verbose_name_plural: verbose_name_plural
          execution_logging: true
          check_have_i_been_pwned: true
          check_zxcvbn: true
          amount_uppercase: 314780940
          length_min: 494379917
          password_field: password_field
          component: component
          verbose_name: verbose_name
          amount_digits: 1294386358
          meta_model_name: meta_model_name
          check_static_rules: true
          bound_to: 0
          symbol_charset: symbol_charset
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          zxcvbn_score_threshold: 1997469940
          hibp_allowed_count: 1516424369
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PasswordPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPasswordStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          allow_show_password: true
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          failed_attempts_before_cancel: -1803530559
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          backends:
          - null
          - null
        - component: component
          verbose_name: verbose_name
          configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          allow_show_password: true
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          failed_attempts_before_cancel: -1803530559
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          backends:
          - null
          - null
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PasswordStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPermissionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          model: model
          id: 1
          app_label_verbose: app_label_verbose
        - app_label: app_label
          codename: codename
          model_verbose: model_verbose
          name: name
          model: model
          id: 1
          app_label_verbose: app_label_verbose
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPlexSourceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - allowed_servers:
          - allowed_servers
          - allowed_servers
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          user_path_template: user_path_template
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          enabled: true
          client_id: client_id
          group_matching_mode: ""
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          managed: managed
          name: name
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          allow_friends: true
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plex_token: plex_token
          slug: slug
        - allowed_servers:
          - allowed_servers
          - allowed_servers
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          user_path_template: user_path_template
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          enabled: true
          client_id: client_id
          group_matching_mode: ""
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          managed: managed
          name: name
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          allow_friends: true
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plex_token: plex_token
          slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PlexSource'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPlexSourcePropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PlexSourcePropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPolicyBindingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - user_obj: ""
          failure_result: true
          policy_obj: ""
          enabled: true
          timeout: 314780940
          target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          negate: true
          group_obj: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
          policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 441289069
        - user_obj: ""
          failure_result: true
          policy_obj: ""
          enabled: true
          timeout: 314780940
          target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          negate: true
          group_obj: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
          policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 441289069
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PolicyBinding'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPromptList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - sub_text: sub_text
          initial_value: initial_value
          initial_value_expression: true
          label: label
          type: null
          placeholder_expression: true
          required: true
          promptstage_set:
          - component: component
            verbose_name: verbose_name
            verbose_name_plural: verbose_name_plural
            meta_model_name: meta_model_name
            name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flow_set:
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
          - component: component
            verbose_name: verbose_name
            verbose_name_plural: verbose_name_plural
            meta_model_name: meta_model_name
            name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flow_set:
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
          field_key: field_key
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          placeholder: placeholder
          order: -1803530559
        - sub_text: sub_text
          initial_value: initial_value
          initial_value_expression: true
          label: label
          type: null
          placeholder_expression: true
          required: true
          promptstage_set:
          - component: component
            verbose_name: verbose_name
            verbose_name_plural: verbose_name_plural
            meta_model_name: meta_model_name
            name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flow_set:
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
          - component: component
            verbose_name: verbose_name
            verbose_name_plural: verbose_name_plural
            meta_model_name: meta_model_name
            name: name
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flow_set:
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
            - policy_engine_mode: null
              compatibility_mode: true
              layout: null
              policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              background: background
              denied_action: ""
              name: name
              export_url: export_url
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              designation: ""
              title: title
              slug: slug
          field_key: field_key
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          placeholder: placeholder
          order: -1803530559
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Prompt'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPromptStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          validation_policies:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fields:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          validation_policies:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fields:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PromptStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedPropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/PropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - verbose_name_plural: verbose_name_plural
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - verbose_name_plural: verbose_name_plural
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Provider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedProxyOutpostConfigList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - external_host: https://openapi-generator.tech
          cookie_domain: cookie_domain
          skip_path_regex: skip_path_regex
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cookie_secret: cookie_secret
          basic_auth_password_attribute: basic_auth_password_attribute
          assigned_application_slug: assigned_application_slug
          client_id: client_id
          mode: ""
          internal_host: https://openapi-generator.tech
          oidc_configuration: ""
          basic_auth_enabled: true
          basic_auth_user_attribute: basic_auth_user_attribute
          access_token_validity: 6.027456183070403
          assigned_application_name: assigned_application_name
          name: name
          intercept_header_auth: true
          scopes_to_request:
          - scopes_to_request
          - scopes_to_request
          pk: 0
          client_secret: client_secret
          internal_host_ssl_validation: true
        - external_host: https://openapi-generator.tech
          cookie_domain: cookie_domain
          skip_path_regex: skip_path_regex
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cookie_secret: cookie_secret
          basic_auth_password_attribute: basic_auth_password_attribute
          assigned_application_slug: assigned_application_slug
          client_id: client_id
          mode: ""
          internal_host: https://openapi-generator.tech
          oidc_configuration: ""
          basic_auth_enabled: true
          basic_auth_user_attribute: basic_auth_user_attribute
          access_token_validity: 6.027456183070403
          assigned_application_name: assigned_application_name
          name: name
          intercept_header_auth: true
          scopes_to_request:
          - scopes_to_request
          - scopes_to_request
          pk: 0
          client_secret: client_secret
          internal_host_ssl_validation: true
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ProxyOutpostConfig'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedProxyProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - verbose_name_plural: verbose_name_plural
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          client_id: client_id
          jwt_federation_sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_token_validity: refresh_token_validity
          mode: ""
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          intercept_header_auth: true
          internal_host_ssl_validation: true
          jwt_federation_providers:
          - 6
          - 6
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          external_host: https://openapi-generator.tech
          cookie_domain: cookie_domain
          skip_path_regex: skip_path_regex
          basic_auth_password_attribute: basic_auth_password_attribute
          redirect_uris:
          - matching_mode: null
            url: url
          - matching_mode: null
            url: url
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          internal_host: https://openapi-generator.tech
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          basic_auth_enabled: true
          basic_auth_user_attribute: basic_auth_user_attribute
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          access_token_validity: access_token_validity
          name: name
          pk: 0
        - verbose_name_plural: verbose_name_plural
          certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          client_id: client_id
          jwt_federation_sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_token_validity: refresh_token_validity
          mode: ""
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          intercept_header_auth: true
          internal_host_ssl_validation: true
          jwt_federation_providers:
          - 6
          - 6
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          external_host: https://openapi-generator.tech
          cookie_domain: cookie_domain
          skip_path_regex: skip_path_regex
          basic_auth_password_attribute: basic_auth_password_attribute
          redirect_uris:
          - matching_mode: null
            url: url
          - matching_mode: null
            url: url
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          internal_host: https://openapi-generator.tech
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          basic_auth_enabled: true
          basic_auth_user_attribute: basic_auth_user_attribute
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          access_token_validity: access_token_validity
          name: name
          pk: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ProxyProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRACPropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          static_settings:
            key: ""
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          static_settings:
            key: ""
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/RACPropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRACProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - settings:
            key: ""
          verbose_name_plural: verbose_name_plural
          delete_token_on_disconnect: true
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 0
          connection_expiry: connection_expiry
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - settings:
            key: ""
          verbose_name_plural: verbose_name_plural
          delete_token_on_disconnect: true
          assigned_application_slug: assigned_application_slug
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 0
          connection_expiry: connection_expiry
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/RACProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRadiusOutpostConfigList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - application_slug: application_slug
          client_networks: client_networks
          name: name
          auth_flow_slug: auth_flow_slug
          shared_secret: shared_secret
          pk: 0
          mfa_support: true
        - application_slug: application_slug
          client_networks: client_networks
          name: name
          auth_flow_slug: auth_flow_slug
          shared_secret: shared_secret
          pk: 0
          mfa_support: true
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/RadiusOutpostConfig'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRadiusProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - client_networks: client_networks
          verbose_name_plural: verbose_name_plural
          shared_secret: shared_secret
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          mfa_support: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 0
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - client_networks: client_networks
          verbose_name_plural: verbose_name_plural
          shared_secret: shared_secret
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          mfa_support: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          outpost_set:
          - outpost_set
          - outpost_set
          component: component
          verbose_name: verbose_name
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          pk: 0
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/RadiusProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRadiusProviderPropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/RadiusProviderPropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRedirectStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - mode: null
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          target_static: target_static
          target_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          keep_context: true
        - mode: null
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          target_static: target_static
          target_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          keep_context: true
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/RedirectStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedReputationList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          score: -7746104769210155008
          ip_asn_data:
            key: ""
          ip_geo_data:
            key: ""
          ip: ip
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated: 2000-01-23T04:56:07.000+00:00
        - identifier: identifier
          score: -7746104769210155008
          ip_asn_data:
            key: ""
          ip_geo_data:
            key: ""
          ip: ip
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated: 2000-01-23T04:56:07.000+00:00
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Reputation'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedReputationPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          check_ip: true
          execution_logging: true
          bound_to: 0
          name: name
          check_username: true
          threshold: 441289069
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          check_ip: true
          execution_logging: true
          bound_to: 0
          name: name
          check_username: true
          threshold: 441289069
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ReputationPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRoleAssignedObjectPermissionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - role_pk: role_pk
          permissions:
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 0
            object_pk: object_pk
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 0
            object_pk: object_pk
          name: name
        - role_pk: role_pk
          permissions:
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 0
            object_pk: object_pk
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 0
            object_pk: object_pk
          name: name
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/RoleAssignedObjectPermission'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedRoleList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSAMLPropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          friendly_name: friendly_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          saml_name: saml_name
        - component: component
          verbose_name: verbose_name
          friendly_name: friendly_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          saml_name: saml_name
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SAMLPropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSAMLProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - url_sso_init: url_sso_init
          verbose_name_plural: verbose_name_plural
          url_slo_redirect: url_slo_redirect
          session_valid_not_on_or_after: session_valid_not_on_or_after
          default_relay_state: default_relay_state
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          issuer: issuer
          url_sso_redirect: url_sso_redirect
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          url_slo_post: url_slo_post
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          signature_algorithm: null
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          audience: audience
          sign_response: true
          sp_binding: ""
          acs_url: https://openapi-generator.tech
          url_download_metadata: url_download_metadata
          assertion_valid_not_before: assertion_valid_not_before
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authn_context_class_ref_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          digest_algorithm: null
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sign_assertion: true
          url_sso_post: url_sso_post
          name: name
          assertion_valid_not_on_or_after: assertion_valid_not_on_or_after
          verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 0
          name_id_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - url_sso_init: url_sso_init
          verbose_name_plural: verbose_name_plural
          url_slo_redirect: url_slo_redirect
          session_valid_not_on_or_after: session_valid_not_on_or_after
          default_relay_state: default_relay_state
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          issuer: issuer
          url_sso_redirect: url_sso_redirect
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          url_slo_post: url_slo_post
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          signature_algorithm: null
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          audience: audience
          sign_response: true
          sp_binding: ""
          acs_url: https://openapi-generator.tech
          url_download_metadata: url_download_metadata
          assertion_valid_not_before: assertion_valid_not_before
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          authn_context_class_ref_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          digest_algorithm: null
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sign_assertion: true
          url_sso_post: url_sso_post
          name: name
          assertion_valid_not_on_or_after: assertion_valid_not_on_or_after
          verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 0
          name_id_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SAMLProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSAMLSourceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - allow_idp_initiated: true
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          sso_url: https://openapi-generator.tech
          enabled: true
          issuer: issuer
          managed: managed
          name_id_policy: ""
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          signature_algorithm: null
          slug: slug
          signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          binding_type: null
          user_path_template: user_path_template
          slo_url: https://openapi-generator.tech
          group_matching_mode: ""
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          digest_algorithm: null
          meta_model_name: meta_model_name
          pre_authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          temporary_user_delete_after: temporary_user_delete_after
        - allow_idp_initiated: true
          user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          sso_url: https://openapi-generator.tech
          enabled: true
          issuer: issuer
          managed: managed
          name_id_policy: ""
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          signature_algorithm: null
          slug: slug
          signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          binding_type: null
          user_path_template: user_path_template
          slo_url: https://openapi-generator.tech
          group_matching_mode: ""
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          digest_algorithm: null
          meta_model_name: meta_model_name
          pre_authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          temporary_user_delete_after: temporary_user_delete_after
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SAMLSource'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSAMLSourcePropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SAMLSourcePropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMProviderGroupList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - scim_id: scim_id
          provider: 0
          group_obj: ""
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - scim_id: scim_id
          provider: 0
          group_obj: ""
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMProviderGroup'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - compatibility_mode: ""
          property_mappings_group:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          url: url
          token: token
          exclude_users_service_account: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          dry_run: true
          pk: 0
          verify_certificates: true
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - compatibility_mode: ""
          property_mappings_group:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          verbose_name_plural: verbose_name_plural
          url: url
          token: token
          exclude_users_service_account: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_backchannel_application_name: assigned_backchannel_application_name
          name: name
          dry_run: true
          pk: 0
          verify_certificates: true
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMProviderUserList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - scim_id: scim_id
          user_obj: ""
          provider: 6
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
        - scim_id: scim_id
          user_obj: ""
          provider: 6
          attributes:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMProviderUser'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMSourceGroupList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - group_obj: ""
          attributes:
            key: ""
          id: id
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - group_obj: ""
          attributes:
            key: ""
          id: id
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMSourceGroup'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMSourceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - root_url: root_url
          token_obj: ""
          verbose_name_plural: verbose_name_plural
          user_path_template: user_path_template
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          managed: managed
          name: name
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        - root_url: root_url
          token_obj: ""
          verbose_name_plural: verbose_name_plural
          user_path_template: user_path_template
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          managed: managed
          name: name
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMSource'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMSourcePropertyMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMSourcePropertyMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSCIMSourceUserList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - user_obj: ""
          attributes:
            key: ""
          id: id
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
        - user_obj: ""
          attributes:
            key: ""
          id: id
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SCIMSourceUser'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSMSDeviceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - name: name
          phone_number: phone_number
          pk: 0
          user: ""
        - name: name
          phone_number: phone_number
          pk: 0
          user: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SMSDevice'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSSFProviderList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          token_obj: ""
          ssf_url: ssf_url
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          oidc_auth_providers:
          - 6
          - 6
          name: name
          pk: 0
          event_retention: event_retention
        - component: component
          verbose_name: verbose_name
          token_obj: ""
          ssf_url: ssf_url
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          oidc_auth_providers:
          - 6
          - 6
          name: name
          pk: 0
          event_retention: event_retention
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SSFProvider'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSSFStreamList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - aud:
          - aud
          - aud
          provider_obj: ""
          endpoint_url: endpoint_url
          provider: 0
          delivery_method: null
          format: format
          iss: iss
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          events_requested:
          - null
          - null
        - aud:
          - aud
          - aud
          provider_obj: ""
          endpoint_url: endpoint_url
          provider: 0
          delivery_method: null
          format: format
          iss: iss
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          events_requested:
          - null
          - null
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SSFStream'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedScopeMappingList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          description: description
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          scope_name: scope_name
        - component: component
          verbose_name: verbose_name
          expression: expression
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          managed: managed
          name: name
          description: description
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          scope_name: scope_name
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ScopeMapping'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedServiceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          local: true
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          local: true
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/ServiceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSourceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          user_path_template: user_path_template
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          enabled: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          managed: managed
          name: name
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        - user_matching_mode: ""
          verbose_name_plural: verbose_name_plural
          user_path_template: user_path_template
          group_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          enabled: true
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policy_engine_mode: null
          enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          managed: managed
          name: name
          user_property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Source'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSourceStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          resume_timeout: resume_timeout
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          resume_timeout: resume_timeout
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SourceStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Stage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedStaticDeviceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - name: name
          token_set:
          - token: token
          - token: token
          pk: 0
          user: ""
        - name: name
          token_set:
          - token: token
          - token: token
          pk: 0
          user: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/StaticDevice'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedSystemTaskList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - duration: 0.8008281904610115
          uid: uid
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          full_name: full_name
          start_timestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finish_timestamp: 2000-01-23T04:56:07.000+00:00
          status: null
        - duration: 0.8008281904610115
          uid: uid
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          full_name: full_name
          start_timestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finish_timestamp: 2000-01-23T04:56:07.000+00:00
          status: null
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/SystemTask'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedTOTPDeviceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - name: name
          pk: 0
          user: ""
        - name: name
          pk: 0
          user: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/TOTPDevice'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedTenantList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - tenant_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ready: true
          name: name
          schema_name: schema_name
        - tenant_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ready: true
          name: name
          schema_name: schema_name
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Tenant'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedTokenList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          user_obj: ""
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          managed: managed
          description: description
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          intent: null
          user: 0
        - identifier: identifier
          user_obj: ""
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          managed: managed
          description: description
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          intent: null
          user: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedTokenModelList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - expires: 2000-01-23T04:56:07.000+00:00
          is_expired: true
          provider:
            verbose_name_plural: verbose_name_plural
            signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            client_type: ""
            sub_mode: ""
            client_id: client_id
            jwt_federation_sources:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            refresh_token_validity: refresh_token_validity
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            access_code_validity: access_code_validity
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            issuer_mode: ""
            client_secret: client_secret
            jwt_federation_providers:
            - 1
            - 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redirect_uris:
            - matching_mode: null
              url: url
            - matching_mode: null
              url: url
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            meta_model_name: meta_model_name
            include_claims_in_id_token: true
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            access_token_validity: access_token_validity
            name: name
            encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            pk: 6
          scope:
          - scope
          - scope
          id_token: id_token
          pk: 0
          revoked: true
          user:
            is_active: true
            is_superuser: true
            last_login: 2000-01-23T04:56:07.000+00:00
            password_change_date: 2000-01-23T04:56:07.000+00:00
            groups:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            avatar: avatar
            type: null
            groups_obj:
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uid: uid
            path: path
            name: name
            attributes:
              key: ""
            pk: 6
            date_joined: 2000-01-23T04:56:07.000+00:00
            email: email
            username: username
        - expires: 2000-01-23T04:56:07.000+00:00
          is_expired: true
          provider:
            verbose_name_plural: verbose_name_plural
            signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            client_type: ""
            sub_mode: ""
            client_id: client_id
            jwt_federation_sources:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            refresh_token_validity: refresh_token_validity
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            access_code_validity: access_code_validity
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            issuer_mode: ""
            client_secret: client_secret
            jwt_federation_providers:
            - 1
            - 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redirect_uris:
            - matching_mode: null
              url: url
            - matching_mode: null
              url: url
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            meta_model_name: meta_model_name
            include_claims_in_id_token: true
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            access_token_validity: access_token_validity
            name: name
            encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            pk: 6
          scope:
          - scope
          - scope
          id_token: id_token
          pk: 0
          revoked: true
          user:
            is_active: true
            is_superuser: true
            last_login: 2000-01-23T04:56:07.000+00:00
            password_change_date: 2000-01-23T04:56:07.000+00:00
            groups:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            avatar: avatar
            type: null
            groups_obj:
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uid: uid
            path: path
            name: name
            attributes:
              key: ""
            pk: 6
            date_joined: 2000-01-23T04:56:07.000+00:00
            email: email
            username: username
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/TokenModel'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUniquePasswordPolicyList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - password_field: password_field
          num_historical_passwords: 1294386358
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - password_field: password_field
          num_historical_passwords: 1294386358
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          execution_logging: true
          bound_to: 0
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UniquePasswordPolicy'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserAssignedObjectPermissionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - uid: uid
          is_active: true
          is_superuser: true
          last_login: 2000-01-23T04:56:07.000+00:00
          permissions:
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 6
            object_pk: object_pk
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 6
            object_pk: object_pk
          name: name
          attributes:
            key: ""
          pk: 0
          email: email
          username: username
        - uid: uid
          is_active: true
          is_superuser: true
          last_login: 2000-01-23T04:56:07.000+00:00
          permissions:
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 6
            object_pk: object_pk
          - app_label: app_label
            codename: codename
            name: name
            model: model
            id: 6
            object_pk: object_pk
          name: name
          attributes:
            key: ""
          pk: 0
          email: email
          username: username
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserAssignedObjectPermission'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserConsentList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          application:
            provider_obj: ""
            backchannel_providers:
            - 6
            - 6
            meta_launch_url: https://openapi-generator.tech
            meta_icon: meta_icon
            meta_publisher: meta_publisher
            policy_engine_mode: null
            meta_description: meta_description
            launch_url: launch_url
            provider: 0
            open_in_new_tab: true
            name: name
            backchannel_providers_obj:
            - verbose_name_plural: verbose_name_plural
              invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              assigned_application_slug: assigned_application_slug
              authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              component: component
              verbose_name: verbose_name
              authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              meta_model_name: meta_model_name
              assigned_backchannel_application_slug: assigned_backchannel_application_slug
              assigned_application_name: assigned_application_name
              assigned_backchannel_application_name: assigned_backchannel_application_name
              name: name
              pk: 1
              property_mappings:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - verbose_name_plural: verbose_name_plural
              invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              assigned_application_slug: assigned_application_slug
              authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              component: component
              verbose_name: verbose_name
              authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              meta_model_name: meta_model_name
              assigned_backchannel_application_slug: assigned_backchannel_application_slug
              assigned_application_name: assigned_application_name
              assigned_backchannel_application_name: assigned_backchannel_application_name
              name: name
              pk: 1
              property_mappings:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
            group: group
          permissions: permissions
          pk: 0
          user:
            is_active: true
            is_superuser: true
            last_login: 2000-01-23T04:56:07.000+00:00
            password_change_date: 2000-01-23T04:56:07.000+00:00
            groups:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            avatar: avatar
            type: null
            groups_obj:
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uid: uid
            path: path
            name: name
            attributes:
              key: ""
            pk: 6
            date_joined: 2000-01-23T04:56:07.000+00:00
            email: email
            username: username
        - expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          application:
            provider_obj: ""
            backchannel_providers:
            - 6
            - 6
            meta_launch_url: https://openapi-generator.tech
            meta_icon: meta_icon
            meta_publisher: meta_publisher
            policy_engine_mode: null
            meta_description: meta_description
            launch_url: launch_url
            provider: 0
            open_in_new_tab: true
            name: name
            backchannel_providers_obj:
            - verbose_name_plural: verbose_name_plural
              invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              assigned_application_slug: assigned_application_slug
              authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              component: component
              verbose_name: verbose_name
              authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              meta_model_name: meta_model_name
              assigned_backchannel_application_slug: assigned_backchannel_application_slug
              assigned_application_name: assigned_application_name
              assigned_backchannel_application_name: assigned_backchannel_application_name
              name: name
              pk: 1
              property_mappings:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - verbose_name_plural: verbose_name_plural
              invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              assigned_application_slug: assigned_application_slug
              authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              component: component
              verbose_name: verbose_name
              authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              meta_model_name: meta_model_name
              assigned_backchannel_application_slug: assigned_backchannel_application_slug
              assigned_application_name: assigned_application_name
              assigned_backchannel_application_name: assigned_backchannel_application_name
              name: name
              pk: 1
              property_mappings:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
            group: group
          permissions: permissions
          pk: 0
          user:
            is_active: true
            is_superuser: true
            last_login: 2000-01-23T04:56:07.000+00:00
            password_change_date: 2000-01-23T04:56:07.000+00:00
            groups:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            avatar: avatar
            type: null
            groups_obj:
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            - parent_name: parent_name
              parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              is_superuser: true
              name: name
              attributes:
                key: ""
              pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              num_pk: 1
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uid: uid
            path: path
            name: name
            attributes:
              key: ""
            pk: 6
            date_joined: 2000-01-23T04:56:07.000+00:00
            email: email
            username: username
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserConsent'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserDeleteStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserDeleteStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserKerberosSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserKerberosSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserLDAPSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserLDAPSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - is_active: true
          is_superuser: true
          last_login: 2000-01-23T04:56:07.000+00:00
          password_change_date: 2000-01-23T04:56:07.000+00:00
          groups:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: avatar
          type: null
          groups_obj:
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uid: uid
          path: path
          name: name
          attributes:
            key: ""
          pk: 6
          date_joined: 2000-01-23T04:56:07.000+00:00
          email: email
          username: username
        - is_active: true
          is_superuser: true
          last_login: 2000-01-23T04:56:07.000+00:00
          password_change_date: 2000-01-23T04:56:07.000+00:00
          groups:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: avatar
          type: null
          groups_obj:
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uid: uid
          path: path
          name: name
          attributes:
            key: ""
          pk: 6
          date_joined: 2000-01-23T04:56:07.000+00:00
          email: email
          username: username
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/User'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserLoginStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - terminate_other_sessions: true
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          remember_me_offset: remember_me_offset
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          network_binding: ""
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          geoip_binding: ""
          session_duration: session_duration
        - terminate_other_sessions: true
          component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          remember_me_offset: remember_me_offset
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          network_binding: ""
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          geoip_binding: ""
          session_duration: session_duration
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserLoginStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserLogoutStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserLogoutStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserOAuthSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserOAuthSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserPlexSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserPlexSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserSAMLSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserSAMLSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserSourceConnectionList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
        - identifier: identifier
          last_updated: 2000-01-23T04:56:07.000+00:00
          source_obj: ""
          created: 2000-01-23T04:56:07.000+00:00
          pk: 0
          source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: 6
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserSourceConnection'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedUserWriteStageList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - component: component
          verbose_name: verbose_name
          user_type: null
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          user_path_template: user_path_template
          name: name
          create_users_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user_creation_mode: null
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          create_users_as_inactive: true
        - component: component
          verbose_name: verbose_name
          user_type: null
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          user_path_template: user_path_template
          name: name
          create_users_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user_creation_mode: null
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          create_users_as_inactive: true
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/UserWriteStage'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedWebAuthnDeviceList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - aaguid: aaguid
          created_on: 2000-01-23T04:56:07.000+00:00
          name: name
          device_type: null
          pk: 0
          user: ""
        - aaguid: aaguid
          created_on: 2000-01-23T04:56:07.000+00:00
          name: name
          device_type: null
          pk: 0
          user: ""
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/WebAuthnDevice'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    PaginatedWebAuthnDeviceTypeList:
      example:
        pagination:
          next: 0.8008281904610115
          current: 5.962133916683182
          previous: 6.027456183070403
          start_index: 2.3021358869347655
          count: 1.4658129805029452
          end_index: 7.061401241503109
          total_pages: 5.637376656633329
        autocomplete:
          key: ""
        results:
        - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
        - aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          items:
            $ref: '#/components/schemas/WebAuthnDeviceType'
          type: array
        autocomplete:
          additionalProperties: {}
          type: object
      required:
      - autocomplete
      - pagination
      - results
      type: object
    Pagination:
      example:
        next: 0.8008281904610115
        current: 5.962133916683182
        previous: 6.027456183070403
        start_index: 2.3021358869347655
        count: 1.4658129805029452
        end_index: 7.061401241503109
        total_pages: 5.637376656633329
      properties:
        next:
          type: number
        previous:
          type: number
        count:
          type: number
        current:
          type: number
        total_pages:
          type: number
        start_index:
          type: number
        end_index:
          type: number
      required:
      - count
      - current
      - end_index
      - next
      - previous
      - start_index
      - total_pages
      type: object
    PasswordChallenge:
      description: Password challenge UI fields
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-password
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        recovery_url:
          type: string
        allow_show_password:
          default: false
          type: boolean
      required:
      - pending_user
      - pending_user_avatar
      type: object
    PasswordChallengeResponseRequest:
      description: Password challenge response
      properties:
        component:
          default: ak-stage-password
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      required:
      - password
      type: object
    PasswordExpiryPolicy:
      description: Password Expiry Policy Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        execution_logging: true
        bound_to: 0
        deny_only: true
        name: name
        days: 441289069
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        days:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        deny_only:
          type: boolean
      required:
      - bound_to
      - component
      - days
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    PasswordExpiryPolicyRequest:
      description: Password Expiry Policy Serializer
      example:
        execution_logging: true
        deny_only: true
        name: name
        days: -1803530559
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        days:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        deny_only:
          type: boolean
      required:
      - days
      - name
      type: object
    PasswordPolicy:
      description: Password Policy Serializer
      example:
        error_message: error_message
        amount_symbols: 1210617418
        amount_lowercase: 1280358508
        verbose_name_plural: verbose_name_plural
        execution_logging: true
        check_have_i_been_pwned: true
        check_zxcvbn: true
        amount_uppercase: 314780940
        length_min: 494379917
        password_field: password_field
        component: component
        verbose_name: verbose_name
        amount_digits: 1294386358
        meta_model_name: meta_model_name
        check_static_rules: true
        bound_to: 0
        symbol_charset: symbol_charset
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        zxcvbn_score_threshold: 1997469940
        hibp_allowed_count: 1516424369
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        password_field:
          description: "Field key to check, field keys defined in Prompt stages are\
            \ available."
          type: string
        amount_digits:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_uppercase:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_lowercase:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_symbols:
          maximum: 2147483647
          minimum: 0
          type: integer
        length_min:
          maximum: 2147483647
          minimum: 0
          type: integer
        symbol_charset:
          type: string
        error_message:
          type: string
        check_static_rules:
          type: boolean
        check_have_i_been_pwned:
          type: boolean
        check_zxcvbn:
          type: boolean
        hibp_allowed_count:
          description: How many times the password hash is allowed to be on haveibeenpwned
          maximum: 2147483647
          minimum: 0
          type: integer
        zxcvbn_score_threshold:
          description: "If the zxcvbn score is equal or less than this value, the\
            \ policy will fail."
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - bound_to
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    PasswordPolicyRequest:
      description: Password Policy Serializer
      example:
        error_message: error_message
        amount_symbols: 1280358508
        amount_lowercase: 314780940
        execution_logging: true
        check_have_i_been_pwned: true
        check_zxcvbn: true
        amount_uppercase: 1294386358
        length_min: 1210617418
        password_field: password_field
        amount_digits: 171976544
        check_static_rules: true
        symbol_charset: symbol_charset
        name: name
        zxcvbn_score_threshold: 1516424369
        hibp_allowed_count: 494379917
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        password_field:
          description: "Field key to check, field keys defined in Prompt stages are\
            \ available."
          minLength: 1
          type: string
        amount_digits:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_uppercase:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_lowercase:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_symbols:
          maximum: 2147483647
          minimum: 0
          type: integer
        length_min:
          maximum: 2147483647
          minimum: 0
          type: integer
        symbol_charset:
          minLength: 1
          type: string
        error_message:
          type: string
        check_static_rules:
          type: boolean
        check_have_i_been_pwned:
          type: boolean
        check_zxcvbn:
          type: boolean
        hibp_allowed_count:
          description: How many times the password hash is allowed to be on haveibeenpwned
          maximum: 2147483647
          minimum: 0
          type: integer
        zxcvbn_score_threshold:
          description: "If the zxcvbn score is equal or less than this value, the\
            \ policy will fail."
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - name
      type: object
    PasswordStage:
      description: PasswordStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        allow_show_password: true
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        failed_attempts_before_cancel: -1803530559
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        backends:
        - null
        - null
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        backends:
          description: Selection of backends to test the password against.
          items:
            $ref: '#/components/schemas/BackendsEnum'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        failed_attempts_before_cancel:
          description: "How many attempts a user has before the flow is canceled.\
            \ To lock the user out, use a reputation policy and a user_write stage."
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        allow_show_password:
          description: "When enabled, provides a 'show password' button with the password\
            \ input field."
          type: boolean
      required:
      - backends
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    PasswordStageRequest:
      description: PasswordStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allow_show_password: true
        name: name
        failed_attempts_before_cancel: -1803530559
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        backends:
        - null
        - null
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        backends:
          description: Selection of backends to test the password against.
          items:
            $ref: '#/components/schemas/BackendsEnum'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        failed_attempts_before_cancel:
          description: "How many attempts a user has before the flow is canceled.\
            \ To lock the user out, use a reputation policy and a user_write stage."
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        allow_show_password:
          description: "When enabled, provides a 'show password' button with the password\
            \ input field."
          type: boolean
      required:
      - backends
      - name
      type: object
    PatchedApplicationEntitlementRequest:
      description: ApplicationEntitlement Serializer
      example:
        app: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        attributes:
          key: ""
      properties:
        name:
          minLength: 1
          type: string
        app:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      type: object
    PatchedApplicationRequest:
      description: Application Serializer
      example:
        policy_engine_mode: null
        meta_description: meta_description
        backchannel_providers:
        - 6
        - 6
        provider: 0
        open_in_new_tab: true
        name: name
        meta_launch_url: https://openapi-generator.tech
        slug: slug
        meta_publisher: meta_publisher
        group: group
      properties:
        name:
          description: Application's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal application name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        provider:
          nullable: true
          type: integer
        backchannel_providers:
          items:
            type: integer
          type: array
        open_in_new_tab:
          description: Open launch URL in a new browser tab or window.
          type: boolean
        meta_launch_url:
          format: uri
          type: string
        meta_description:
          type: string
        meta_publisher:
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        group:
          type: string
      type: object
    PatchedAuthenticatorDuoStageRequest:
      description: AuthenticatorDuoStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        name: name
        client_secret: client_secret
        api_hostname: api_hostname
        admin_integration_key: admin_integration_key
        admin_secret_key: admin_secret_key
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        client_id: client_id
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        client_id:
          minLength: 1
          type: string
        client_secret:
          minLength: 1
          type: string
          writeOnly: true
        api_hostname:
          minLength: 1
          type: string
        admin_integration_key:
          type: string
        admin_secret_key:
          type: string
          writeOnly: true
      type: object
    PatchedAuthenticatorEmailStageRequest:
      description: AuthenticatorEmailStage Serializer
      example:
        template: template
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        use_global_settings: true
        use_ssl: true
        subject: subject
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        token_expiry: token_expiry
        timeout: 441289069
        use_tls: true
        password: password
        port: -1803530559
        name: name
        host: host
        from_address: from_address
        username: username
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        use_global_settings:
          description: "When enabled, global Email connection settings will be used\
            \ and connection settings below will be ignored."
          type: boolean
        host:
          minLength: 1
          type: string
        port:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        username:
          type: string
        password:
          type: string
        use_tls:
          type: boolean
        use_ssl:
          type: boolean
        timeout:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        from_address:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        subject:
          minLength: 1
          type: string
        token_expiry:
          description: "Time the token sent is valid (Format: hours=3,minutes=17,seconds=300)."
          minLength: 1
          type: string
        template:
          minLength: 1
          type: string
      type: object
    PatchedAuthenticatorEndpointGDTCStageRequest:
      description: AuthenticatorEndpointGDTCStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        credentials:
          key: ""
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        credentials:
          additionalProperties: {}
          type: object
      type: object
    PatchedAuthenticatorSMSStageRequest:
      description: AuthenticatorSMSStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        auth_type: null
        mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provider: null
        auth: auth
        from_number: from_number
        name: name
        account_sid: account_sid
        auth_password: auth_password
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        verify_only: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        from_number:
          minLength: 1
          type: string
        account_sid:
          minLength: 1
          type: string
        auth:
          minLength: 1
          type: string
        auth_password:
          type: string
        auth_type:
          $ref: '#/components/schemas/AuthTypeEnum'
        verify_only:
          description: "When enabled, the Phone number is only used during enrollment\
            \ to verify the users authenticity. Only a hash of the phone number is\
            \ saved to ensure it is not reused in the future."
          type: boolean
        mapping:
          description: Optionally modify the payload being sent to custom providers.
          format: uuid
          nullable: true
          type: string
      type: object
    PatchedAuthenticatorStaticStageRequest:
      description: AuthenticatorStaticStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        token_count: 171976544
        token_length: 1294386358
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        token_count:
          maximum: 2147483647
          minimum: 0
          type: integer
        token_length:
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    PatchedAuthenticatorTOTPStageRequest:
      description: AuthenticatorTOTPStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        name: name
        digits: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        digits:
          $ref: '#/components/schemas/DigitsEnum'
      type: object
    PatchedAuthenticatorValidateStageRequest:
      description: AuthenticatorValidateStage Serializer
      example:
        webauthn_user_verification: ""
        not_configured_action: null
        webauthn_allowed_device_types:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        device_classes:
        - null
        - null
        name: name
        last_auth_threshold: last_auth_threshold
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        configuration_stages:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        not_configured_action:
          $ref: '#/components/schemas/NotConfiguredActionEnum'
        device_classes:
          description: Device classes which can be used to authenticate
          items:
            $ref: '#/components/schemas/DeviceClassesEnum'
          type: array
        configuration_stages:
          description: "Stages used to configure Authenticator when user doesn't have\
            \ any compatible devices. After this configuration Stage passes, the user\
            \ is not prompted again."
          items:
            format: uuid
            type: string
          type: array
        last_auth_threshold:
          description: "If any of the user's device has been used within this threshold,\
            \ this stage will be skipped"
          minLength: 1
          type: string
        webauthn_user_verification:
          allOf:
          - $ref: '#/components/schemas/UserVerificationEnum'
          description: Enforce user verification for WebAuthn devices.
        webauthn_allowed_device_types:
          items:
            format: uuid
            type: string
          type: array
      type: object
    PatchedAuthenticatorWebAuthnStageRequest:
      description: AuthenticatorWebAuthnStage Serializer
      example:
        resident_key_requirement: null
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        friendly_name: friendly_name
        device_type_restrictions:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        max_attempts: 171976544
        name: name
        user_verification: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        authenticator_attachment: ""
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        friendly_name:
          minLength: 1
          nullable: true
          type: string
        user_verification:
          $ref: '#/components/schemas/UserVerificationEnum'
        authenticator_attachment:
          allOf:
          - $ref: '#/components/schemas/AuthenticatorAttachmentEnum'
          nullable: true
        resident_key_requirement:
          $ref: '#/components/schemas/ResidentKeyRequirementEnum'
        device_type_restrictions:
          items:
            format: uuid
            type: string
          type: array
        max_attempts:
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    PatchedBlueprintInstanceRequest:
      description: Info about a single blueprint instance file
      example:
        path: path
        name: name
        context:
          key: ""
        enabled: true
        content: content
      properties:
        name:
          minLength: 1
          type: string
        path:
          default: ""
          type: string
        context:
          additionalProperties: {}
          type: object
        enabled:
          type: boolean
        content:
          type: string
      type: object
    PatchedBrandRequest:
      description: Brand Serializer
      example:
        branding_logo: branding_logo
        default_application: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_certificates:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_device_code: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        branding_default_flow_background: branding_default_flow_background
        flow_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_recovery: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        default: true
        branding_custom_css: branding_custom_css
        flow_invalidation: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        domain: domain
        flow_unenrollment: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attributes:
          key: ""
        branding_title: branding_title
        branding_favicon: branding_favicon
        flow_user_settings: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        web_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        domain:
          description: "Domain that activates this brand. Can be a superset, i.e.\
            \ `a.b` for `aa.b` and `ba.b`"
          minLength: 1
          type: string
        default:
          type: boolean
        branding_title:
          minLength: 1
          type: string
        branding_logo:
          minLength: 1
          type: string
        branding_favicon:
          minLength: 1
          type: string
        branding_custom_css:
          type: string
        branding_default_flow_background:
          minLength: 1
          type: string
        flow_authentication:
          format: uuid
          nullable: true
          type: string
        flow_invalidation:
          format: uuid
          nullable: true
          type: string
        flow_recovery:
          format: uuid
          nullable: true
          type: string
        flow_unenrollment:
          format: uuid
          nullable: true
          type: string
        flow_user_settings:
          format: uuid
          nullable: true
          type: string
        flow_device_code:
          format: uuid
          nullable: true
          type: string
        default_application:
          description: "When set, external users will be redirected to this application\
            \ after authenticating."
          format: uuid
          nullable: true
          type: string
        web_certificate:
          description: Web Certificate used by the authentik Core webserver.
          format: uuid
          nullable: true
          type: string
        client_certificates:
          description: Certificates used for client authentication.
          items:
            format: uuid
            type: string
          type: array
        attributes:
          additionalProperties: {}
          type: object
      type: object
    PatchedCaptchaStageRequest:
      description: CaptchaStage Serializer
      example:
        public_key: public_key
        error_on_invalid_score: true
        api_url: api_url
        name: name
        interactive: true
        private_key: private_key
        js_url: js_url
        score_min_threshold: 0.8008281904610115
        score_max_threshold: 6.027456183070403
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        public_key:
          description: "Public key, acquired your captcha Provider."
          minLength: 1
          type: string
        private_key:
          description: "Private key, acquired your captcha Provider."
          minLength: 1
          type: string
          writeOnly: true
        js_url:
          minLength: 1
          type: string
        api_url:
          minLength: 1
          type: string
        interactive:
          type: boolean
        score_min_threshold:
          format: double
          type: number
        score_max_threshold:
          format: double
          type: number
        error_on_invalid_score:
          description: "When enabled and the received captcha score is outside of\
            \ the given threshold, the stage will show an error message. When not\
            \ enabled, the flow will continue, but the data from the captcha will\
            \ be available in the context for policy decisions"
          type: boolean
      type: object
    PatchedCertificateKeyPairRequest:
      description: CertificateKeyPair Serializer
      example:
        certificate_data: certificate_data
        name: name
        key_data: key_data
      properties:
        name:
          minLength: 1
          type: string
        certificate_data:
          description: PEM-encoded Certificate data
          minLength: 1
          type: string
          writeOnly: true
        key_data:
          description: "Optional Private Key. If this is set, you can use this keypair\
            \ for encryption."
          type: string
          writeOnly: true
      type: object
    PatchedConnectionTokenRequest:
      description: ConnectionToken Serializer
      example:
        endpoint: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provider: 0
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          title: Connection token uuid
          type: string
        provider:
          type: integer
        endpoint:
          format: uuid
          type: string
      type: object
    PatchedConsentStageRequest:
      description: ConsentStage Serializer
      example:
        mode: null
        name: name
        consent_expire_in: consent_expire_in
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        mode:
          $ref: '#/components/schemas/ConsentStageModeEnum'
        consent_expire_in:
          description: "Offset after which consent expires. (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          title: Consent expires in
          type: string
      type: object
    PatchedDenyStageRequest:
      description: DenyStage Serializer
      example:
        deny_message: deny_message
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        deny_message:
          type: string
      type: object
    PatchedDockerServiceConnectionRequest:
      description: DockerServiceConnection Serializer
      example:
        tls_authentication: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        local: true
        url: url
        tls_verification: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
        url:
          description: "Can be in the format of 'unix://<path>' when connecting to\
            \ a local docker daemon, or 'https://<hostname>:2376' when connecting\
            \ to a remote system."
          minLength: 1
          type: string
        tls_verification:
          description: CA which the endpoint's Certificate is verified against. Can
            be left empty for no validation.
          format: uuid
          nullable: true
          type: string
        tls_authentication:
          description: Certificate/Key used for authentication. Can be left empty
            for no authentication.
          format: uuid
          nullable: true
          type: string
      type: object
    PatchedDomainRequest:
      description: Domain Serializer
      example:
        is_primary: true
        domain: domain
        tenant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        domain:
          maxLength: 253
          minLength: 1
          type: string
        is_primary:
          type: boolean
        tenant:
          format: uuid
          type: string
      type: object
    PatchedDummyPolicyRequest:
      description: Dummy Policy Serializer
      example:
        result: true
        execution_logging: true
        name: name
        wait_min: -1803530559
        wait_max: 441289069
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        result:
          type: boolean
        wait_min:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        wait_max:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      type: object
    PatchedDummyStageRequest:
      description: DummyStage Serializer
      example:
        throw_error: true
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        throw_error:
          type: boolean
      type: object
    PatchedDuoDeviceRequest:
      description: Serializer for Duo authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      type: object
    PatchedEmailDeviceRequest:
      description: Serializer for email authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      type: object
    PatchedEmailStageRequest:
      description: EmailStage Serializer
      example:
        template: template
        use_global_settings: true
        use_ssl: true
        subject: subject
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        token_expiry: token_expiry
        timeout: 441289069
        use_tls: true
        password: password
        port: -1803530559
        activate_user_on_success: true
        name: name
        host: host
        from_address: from_address
        username: username
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        use_global_settings:
          description: "When enabled, global Email connection settings will be used\
            \ and connection settings below will be ignored."
          type: boolean
        host:
          minLength: 1
          type: string
        port:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        username:
          type: string
        password:
          type: string
          writeOnly: true
        use_tls:
          type: boolean
        use_ssl:
          type: boolean
        timeout:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        from_address:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        token_expiry:
          description: "Time the token sent is valid (Format: hours=3,minutes=17,seconds=300)."
          minLength: 1
          type: string
        subject:
          minLength: 1
          type: string
        template:
          minLength: 1
          type: string
        activate_user_on_success:
          description: Activate users upon completion of stage.
          type: boolean
      type: object
    PatchedEndpointDeviceRequest:
      description: Serializer for Endpoint authenticator devices
      example:
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          title: Uuid
          type: string
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      type: object
    PatchedEndpointRequest:
      description: Endpoint Serializer
      example:
        settings:
          key: ""
        protocol: null
        provider: 0
        maximum_connections: 441289069
        name: name
        host: host
        auth_mode: null
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        provider:
          type: integer
        protocol:
          $ref: '#/components/schemas/ProtocolEnum'
        host:
          minLength: 1
          type: string
        settings:
          additionalProperties: {}
          type: object
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        auth_mode:
          $ref: '#/components/schemas/AuthModeEnum'
        maximum_connections:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      type: object
    PatchedEventMatcherPolicyRequest:
      description: Event Matcher Policy Serializer
      example:
        app: ""
        execution_logging: true
        name: name
        action: ""
        client_ip: client_ip
        model: ""
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        action:
          allOf:
          - $ref: '#/components/schemas/EventActions'
          description: "Match created events with this action type. When left empty,\
            \ all action types will be matched."
          nullable: true
        client_ip:
          description: "Matches Event's Client IP (strict matching, for network matching\
            \ use an Expression Policy)"
          minLength: 1
          nullable: true
          type: string
        app:
          allOf:
          - $ref: '#/components/schemas/AppEnum'
          description: "Match events created by selected application. When left empty,\
            \ all applications are matched."
          nullable: true
        model:
          allOf:
          - $ref: '#/components/schemas/ModelEnum'
          description: "Match events created by selected model. When left empty, all\
            \ models are matched. When an app is selected, all the application's models\
            \ are matched."
          nullable: true
      type: object
    PatchedEventRequest:
      description: Event Serializer
      example:
        app: app
        expires: 2000-01-23T04:56:07.000+00:00
        context:
          key: ""
        action: null
        client_ip: client_ip
        user:
          key: ""
        brand:
          key: ""
      properties:
        user:
          additionalProperties: {}
          type: object
        action:
          $ref: '#/components/schemas/EventActions'
        app:
          minLength: 1
          type: string
        context:
          additionalProperties: {}
          type: object
        client_ip:
          minLength: 1
          nullable: true
          type: string
        expires:
          format: date-time
          type: string
        brand:
          additionalProperties: {}
          type: object
      type: object
    PatchedExpressionPolicyRequest:
      description: Group Membership Policy Serializer
      example:
        expression: expression
        execution_logging: true
        name: name
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        expression:
          minLength: 1
          type: string
      type: object
    PatchedExtraRoleObjectPermissionRequest:
      description: User permission with additional object-related data
      example:
        object_pk: object_pk
      properties:
        object_pk:
          minLength: 1
          type: string
      type: object
    PatchedExtraUserObjectPermissionRequest:
      description: User permission with additional object-related data
      example:
        object_pk: object_pk
      properties:
        object_pk:
          minLength: 1
          type: string
      type: object
    PatchedFlowRequest:
      description: Flow Serializer
      example:
        policy_engine_mode: null
        compatibility_mode: true
        layout: null
        denied_action: ""
        name: name
        designation: ""
        title: title
        slug: slug
        authentication: ""
      properties:
        name:
          minLength: 1
          type: string
        slug:
          description: Visible in the URL.
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        title:
          description: Shown as the Title in Flow pages.
          minLength: 1
          type: string
        designation:
          allOf:
          - $ref: '#/components/schemas/FlowDesignationEnum'
          description: "Decides what this Flow is used for. For example, the Authentication\
            \ flow is redirect to when an un-authenticated user visits authentik."
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        compatibility_mode:
          description: "Enable compatibility mode, increases compatibility with password\
            \ managers on mobile devices."
          type: boolean
        layout:
          $ref: '#/components/schemas/FlowLayoutEnum'
        denied_action:
          allOf:
          - $ref: '#/components/schemas/DeniedActionEnum'
          description: Configure what should happen when a flow denies access to a
            user.
        authentication:
          allOf:
          - $ref: '#/components/schemas/AuthenticationEnum'
          description: Required level of authentication and authorization to access
            a flow.
      type: object
    PatchedFlowStageBindingRequest:
      description: FlowStageBinding Serializer
      example:
        policy_engine_mode: null
        stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        evaluate_on_plan: true
        re_evaluate_policies: true
        invalid_response_action: ""
        target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: -1803530559
      properties:
        target:
          format: uuid
          type: string
        stage:
          format: uuid
          type: string
        evaluate_on_plan:
          description: Evaluate policies during the Flow planning process.
          type: boolean
        re_evaluate_policies:
          description: Evaluate policies when the Stage is presented to the user.
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        invalid_response_action:
          allOf:
          - $ref: '#/components/schemas/InvalidResponseActionEnum'
          description: "Configure how the flow executor should handle an invalid response\
            \ to a challenge. RETRY returns the error message and a similar challenge\
            \ to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT\
            \ restarts the flow while keeping the current context."
      type: object
    PatchedGeoIPPolicyRequest:
      description: GeoIP Policy Serializer
      example:
        check_history_distance: true
        history_login_count: 1280358508
        execution_logging: true
        check_impossible_travel: true
        name: name
        distance_tolerance_km: 314780940
        asns:
        - -1803530559
        - -1803530559
        countries:
        - null
        - null
        - null
        - null
        - null
        history_max_distance_km: 5559347081229897728
        impossible_tolerance_km: 1210617418
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        asns:
          items:
            maximum: 2147483647
            minimum: -2147483648
            type: integer
          type: array
        countries:
          items:
            $ref: '#/components/schemas/CountryCodeEnum'
          maxItems: 249
          type: array
        check_history_distance:
          type: boolean
        history_max_distance_km:
          format: int64
          maximum: 9223372036854775807
          minimum: 0
          type: integer
        distance_tolerance_km:
          maximum: 2147483647
          minimum: 0
          type: integer
        history_login_count:
          maximum: 2147483647
          minimum: 0
          type: integer
        check_impossible_travel:
          type: boolean
        impossible_tolerance_km:
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    PatchedGoogleWorkspaceProviderMappingRequest:
      description: GoogleWorkspaceProviderMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedGoogleWorkspaceProviderRequest:
      description: GoogleWorkspaceProvider Serializer
      example:
        default_group_email_domain: default_group_email_domain
        delegated_subject: delegated_subject
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        credentials:
          key: ""
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        dry_run: true
        scopes: scopes
        user_delete_action: null
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group_delete_action: null
        exclude_users_service_account: true
      properties:
        name:
          minLength: 1
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        delegated_subject:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        credentials:
          additionalProperties: {}
          type: object
        scopes:
          minLength: 1
          type: string
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        user_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        group_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        default_group_email_domain:
          minLength: 1
          type: string
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      type: object
    PatchedGroupKerberosSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedGroupLDAPSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedGroupOAuthSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedGroupPlexSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedGroupRequest:
      description: Group Serializer
      example:
        parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_superuser: true
        roles:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        attributes:
          key: ""
        users:
        - 0
        - 0
      properties:
        name:
          minLength: 1
          type: string
        is_superuser:
          description: Users added to this group will be superusers.
          type: boolean
        parent:
          format: uuid
          nullable: true
          type: string
        users:
          items:
            type: integer
          type: array
        attributes:
          additionalProperties: {}
          type: object
        roles:
          items:
            format: uuid
            type: string
          type: array
      type: object
    PatchedGroupSAMLSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedGroupSourceConnectionRequest:
      description: Group Source Connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedIdentificationStageRequest:
      description: IdentificationStage Serializer
      example:
        show_source_labels: true
        sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        pretend_user_exists: true
        passwordless_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_fields:
        - null
        - null
        show_matched_user: true
        name: name
        password_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        captcha_stage: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        recovery_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        case_insensitive_matching: true
        enable_remember_me: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        user_fields:
          description: Fields of the user object to match against. (Hold shift to
            select multiple options)
          items:
            $ref: '#/components/schemas/UserFieldsEnum'
          type: array
        password_stage:
          description: "When set, shows a password field, instead of showing the password\
            \ field as separate step."
          format: uuid
          nullable: true
          type: string
        captcha_stage:
          description: "When set, adds functionality exactly like a Captcha stage,\
            \ but baked into the Identification stage."
          format: uuid
          nullable: true
          type: string
        case_insensitive_matching:
          description: "When enabled, user fields are matched regardless of their\
            \ casing."
          type: boolean
        show_matched_user:
          description: "When a valid username/email has been entered, and this option\
            \ is enabled, the user's username and avatar will be shown. Otherwise,\
            \ the text that the user entered will be shown"
          type: boolean
        enrollment_flow:
          description: "Optional enrollment flow, which is linked at the bottom of\
            \ the page."
          format: uuid
          nullable: true
          type: string
        recovery_flow:
          description: "Optional recovery flow, which is linked at the bottom of the\
            \ page."
          format: uuid
          nullable: true
          type: string
        passwordless_flow:
          description: "Optional passwordless flow, which is linked at the bottom\
            \ of the page."
          format: uuid
          nullable: true
          type: string
        sources:
          description: Specify which sources should be shown.
          items:
            format: uuid
            type: string
          type: array
        show_source_labels:
          type: boolean
        pretend_user_exists:
          description: "When enabled, the stage will succeed and continue even when\
            \ incorrect user info is entered."
          type: boolean
        enable_remember_me:
          description: "Show the user the 'Remember me on this device' toggle, allowing\
            \ repeat users to skip straight to entering their password."
          type: boolean
      type: object
    PatchedInitialPermissionsRequest:
      description: InitialPermissions serializer
      example:
        mode: null
        role: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permissions:
        - 0
        - 0
        name: name
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
        mode:
          $ref: '#/components/schemas/InitialPermissionsModeEnum'
        role:
          format: uuid
          type: string
        permissions:
          items:
            type: integer
          type: array
      type: object
    PatchedInvitationRequest:
      description: Invitation Serializer
      example:
        fixed_data:
          key: ""
        expires: 2000-01-23T04:56:07.000+00:00
        name: name
        single_use: true
        flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        fixed_data:
          additionalProperties: {}
          type: object
        single_use:
          description: "When enabled, the invitation will be deleted after usage."
          type: boolean
        flow:
          description: "When set, only the configured flow can use this invitation."
          format: uuid
          nullable: true
          type: string
      type: object
    PatchedInvitationStageRequest:
      description: InvitationStage Serializer
      example:
        continue_flow_without_invitation: true
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        continue_flow_without_invitation:
          description: "If this flag is set, this Stage will jump to the next Stage\
            \ when no Invitation is given. By default this Stage will cancel the Flow\
            \ when no invitation is given."
          type: boolean
      type: object
    PatchedKerberosSourcePropertyMappingRequest:
      description: Kerberos PropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedKerberosSourceRequest:
      description: Kerberos Source Serializer
      example:
        user_matching_mode: ""
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sync_users: true
        sync_keytab: sync_keytab
        sync_ccache: sync_ccache
        enabled: true
        group_matching_mode: ""
        kadmin_type: ""
        password_login_update_internal_password: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sync_users_password: true
        sync_password: sync_password
        spnego_server_name: spnego_server_name
        krb5_conf: krb5_conf
        spnego_keytab: spnego_keytab
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        realm: realm
        spnego_ccache: spnego_ccache
        slug: slug
        sync_principal: sync_principal
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        realm:
          description: Kerberos realm
          minLength: 1
          type: string
        krb5_conf:
          description: Custom krb5.conf to use. Uses the system one by default
          type: string
        kadmin_type:
          allOf:
          - $ref: '#/components/schemas/KadminTypeEnum'
          description: KAdmin server type
        sync_users:
          description: Sync users from Kerberos into authentik
          type: boolean
        sync_users_password:
          description: "When a user changes their password, sync it back to Kerberos"
          type: boolean
        sync_principal:
          description: Principal to authenticate to kadmin for sync.
          type: string
        sync_password:
          description: Password to authenticate to kadmin for sync
          type: string
          writeOnly: true
        sync_keytab:
          description: Keytab to authenticate to kadmin for sync. Must be base64-encoded
            or in the form TYPE:residual
          type: string
          writeOnly: true
        sync_ccache:
          description: Credentials cache to authenticate to kadmin for sync. Must
            be in the form TYPE:residual
          type: string
        spnego_server_name:
          description: Force the use of a specific server name for SPNEGO. Must be
            in the form HTTP@hostname
          type: string
        spnego_keytab:
          description: SPNEGO keytab base64-encoded or path to keytab in the form
            FILE:path
          type: string
          writeOnly: true
        spnego_ccache:
          description: Credential cache to use for SPNEGO in form type:residual
          type: string
        password_login_update_internal_password:
          description: "If enabled, the authentik-stored password will be updated\
            \ upon login with the Kerberos password backend"
          type: boolean
      type: object
    PatchedKubernetesServiceConnectionRequest:
      description: KubernetesServiceConnection Serializer
      example:
        verify_ssl: true
        name: name
        local: true
        kubeconfig:
          key: ""
      properties:
        name:
          minLength: 1
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
        kubeconfig:
          additionalProperties: {}
          description: Paste your kubeconfig here. authentik will automatically use
            the currently selected context.
          type: object
        verify_ssl:
          description: Verify SSL Certificates of the Kubernetes API endpoint
          type: boolean
      type: object
    PatchedLDAPProviderRequest:
      description: LDAPProvider Serializer
      example:
        uid_start_number: -1803530559
        search_mode: null
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tls_server_name: tls_server_name
        bind_mode: null
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mfa_support: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        base_dn: base_dn
        name: name
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        gid_start_number: 441289069
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        base_dn:
          description: DN under which objects are accessible.
          minLength: 1
          type: string
        certificate:
          format: uuid
          nullable: true
          type: string
        tls_server_name:
          type: string
        uid_start_number:
          description: "The start for uidNumbers, this number is added to the user.pk\
            \ to make sure that the numbers aren't too low for POSIX users. Default\
            \ is 2000 to ensure that we don't collide with local users uidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        gid_start_number:
          description: "The start for gidNumbers, this number is added to a number\
            \ generated from the group.pk to make sure that the numbers aren't too\
            \ low for POSIX groups. Default is 4000 to ensure that we don't collide\
            \ with local groups or users primary groups gidNumber"
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        search_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        bind_mode:
          $ref: '#/components/schemas/LDAPAPIAccessMode'
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      type: object
    PatchedLDAPSourcePropertyMappingRequest:
      description: LDAP PropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedLDAPSourceRequest:
      description: LDAP Source Serializer
      example:
        object_uniqueness_field: object_uniqueness_field
        user_matching_mode: ""
        start_tls: true
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        additional_user_dn: additional_user_dn
        sync_users: true
        enabled: true
        delete_not_found_objects: true
        client_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        base_dn: base_dn
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_membership_attribute: user_membership_attribute
        additional_group_dn: additional_group_dn
        sync_parent_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
        group_membership_field: group_membership_field
        server_uri: https://openapi-generator.tech
        bind_cn: bind_cn
        user_path_template: user_path_template
        sync_groups: true
        lookup_groups_from_user: true
        group_object_filter: group_object_filter
        sni: true
        password_login_update_internal_password: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sync_users_password: true
        bind_password: bind_password
        name: name
        user_object_filter: user_object_filter
        peer_certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        server_uri:
          format: uri
          minLength: 1
          type: string
        peer_certificate:
          description: Optionally verify the LDAP Server's Certificate against the
            CA Chain in this keypair.
          format: uuid
          nullable: true
          type: string
        client_certificate:
          description: Client certificate to authenticate against the LDAP Server's
            Certificate.
          format: uuid
          nullable: true
          type: string
        bind_cn:
          type: string
        bind_password:
          type: string
          writeOnly: true
        start_tls:
          title: Enable Start TLS
          type: boolean
        sni:
          title: Use Server URI for SNI verification
          type: boolean
        base_dn:
          minLength: 1
          type: string
        additional_user_dn:
          description: Prepended to Base DN for User-queries.
          title: Addition User DN
          type: string
        additional_group_dn:
          description: Prepended to Base DN for Group-queries.
          title: Addition Group DN
          type: string
        user_object_filter:
          description: Consider Objects matching this filter to be Users.
          minLength: 1
          type: string
        group_object_filter:
          description: Consider Objects matching this filter to be Groups.
          minLength: 1
          type: string
        group_membership_field:
          description: Field which contains members of a group.
          minLength: 1
          type: string
        user_membership_attribute:
          description: Attribute which matches the value of `group_membership_field`.
          minLength: 1
          type: string
        object_uniqueness_field:
          description: Field which contains a unique Identifier.
          minLength: 1
          type: string
        password_login_update_internal_password:
          description: Update internal authentik password when login succeeds with
            LDAP
          type: boolean
        sync_users:
          type: boolean
        sync_users_password:
          description: "When a user changes their password, sync it back to LDAP.\
            \ This can only be enabled on a single LDAP source."
          type: boolean
        sync_groups:
          type: boolean
        sync_parent_group:
          format: uuid
          nullable: true
          type: string
        lookup_groups_from_user:
          description: Lookup group membership based on a user attribute instead of
            a group attribute. This allows nested group resolution on systems like
            FreeIPA and Active Directory
          type: boolean
        delete_not_found_objects:
          description: "Delete authentik users and groups which were previously supplied\
            \ by this source, but are now missing from it."
          type: boolean
      type: object
    PatchedLicenseRequest:
      description: License Serializer
      example:
        key: key
      properties:
        key:
          minLength: 1
          type: string
      type: object
    PatchedMicrosoftEntraProviderMappingRequest:
      description: MicrosoftEntraProviderMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedMicrosoftEntraProviderRequest:
      description: MicrosoftEntraProvider Serializer
      example:
        tenant_id: tenant_id
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        dry_run: true
        client_secret: client_secret
        user_delete_action: null
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_id: client_id
        group_delete_action: null
        exclude_users_service_account: true
      properties:
        name:
          minLength: 1
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        client_id:
          minLength: 1
          type: string
        client_secret:
          minLength: 1
          type: string
        tenant_id:
          minLength: 1
          type: string
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        user_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        group_delete_action:
          $ref: '#/components/schemas/OutgoingSyncDeleteAction'
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      type: object
    PatchedMutualTLSStageRequest:
      description: MutualTLSStage Serializer
      example:
        mode: null
        certificate_authorities:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_attribute: null
        name: name
        cert_attribute: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        mode:
          $ref: '#/components/schemas/MutualTLSStageModeEnum'
        certificate_authorities:
          description: Configure certificate authorities to validate the certificate
            against. This option has a higher priority than the `client_certificate`
            option on `Brand`.
          items:
            format: uuid
            type: string
          type: array
        cert_attribute:
          $ref: '#/components/schemas/CertAttributeEnum'
        user_attribute:
          $ref: '#/components/schemas/UserAttributeEnum'
      type: object
    PatchedNotificationRequest:
      description: Notification Serializer
      example:
        event:
          app: app
          expires: 2000-01-23T04:56:07.000+00:00
          context:
            key: ""
          action: null
          client_ip: client_ip
          user:
            key: ""
          brand:
            key: ""
        seen: true
      properties:
        event:
          $ref: '#/components/schemas/EventRequest'
        seen:
          type: boolean
      type: object
    PatchedNotificationRuleRequest:
      description: NotificationRule Serializer
      example:
        severity: ""
        transports:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        destination_event_user: true
        destination_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        transports:
          description: "Select which transports should be used to notify the user.\
            \ If none are selected, the notification will only be shown in the authentik\
            \ UI."
          items:
            format: uuid
            type: string
          type: array
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          description: Controls which severity level the created notifications will
            have.
        destination_group:
          description: "Define which group of users this notification should be sent\
            \ and shown to. If left empty, Notification won't ben sent."
          format: uuid
          nullable: true
          type: string
        destination_event_user:
          description: "When enabled, notification will be sent to user the user that\
            \ triggered the event.When destination_group is configured, notification\
            \ is sent to both."
          type: boolean
      type: object
    PatchedNotificationTransportRequest:
      description: NotificationTransport Serializer
      example:
        mode: null
        webhook_mapping_headers: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        webhook_url: https://openapi-generator.tech
        name: name
        send_once: true
        webhook_mapping_body: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        mode:
          $ref: '#/components/schemas/NotificationTransportModeEnum'
        webhook_url:
          format: uri
          type: string
        webhook_mapping_body:
          description: Customize the body of the request. Mapping should return data
            that is JSON-serializable.
          format: uuid
          nullable: true
          type: string
        webhook_mapping_headers:
          description: Configure additional headers to be sent. Mapping should return
            a dictionary of key-value pairs
          format: uuid
          nullable: true
          type: string
        send_once:
          description: "Only send notification once, for example when sending a webhook\
            \ into a chat channel."
          type: boolean
      type: object
    PatchedNotificationWebhookMappingRequest:
      description: NotificationWebhookMapping Serializer
      example:
        expression: expression
        name: name
      properties:
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedOAuth2ProviderRequest:
      description: OAuth2Provider Serializer
      example:
        signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_type: ""
        redirect_uris:
        - matching_mode: null
          url: url
        - matching_mode: null
          url: url
        sub_mode: ""
        client_id: client_id
        jwt_federation_sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        refresh_token_validity: refresh_token_validity
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        access_code_validity: access_code_validity
        include_claims_in_id_token: true
        access_token_validity: access_token_validity
        issuer_mode: ""
        name: name
        encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_secret: client_secret
        jwt_federation_providers:
        - 0
        - 0
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        client_type:
          allOf:
          - $ref: '#/components/schemas/ClientTypeEnum'
          description: Confidential clients are capable of maintaining the confidentiality
            of their credentials. Public clients are incapable
        client_id:
          maxLength: 255
          minLength: 1
          type: string
        client_secret:
          maxLength: 255
          type: string
        access_code_validity:
          description: "Access codes not valid on or after current time + this value\
            \ (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        access_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        refresh_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        include_claims_in_id_token:
          description: "Include User claims from scopes in the id_token, for applications\
            \ that don't access the userinfo endpoint."
          type: boolean
        signing_key:
          description: Key used to sign the tokens.
          format: uuid
          nullable: true
          type: string
        encryption_key:
          description: "Key used to encrypt the tokens. When set, tokens will be encrypted\
            \ and returned as JWEs."
          format: uuid
          nullable: true
          type: string
        redirect_uris:
          items:
            $ref: '#/components/schemas/RedirectURIRequest'
          type: array
        sub_mode:
          allOf:
          - $ref: '#/components/schemas/SubModeEnum'
          description: "Configure what data should be used as unique User Identifier.\
            \ For most cases, the default should be fine."
        issuer_mode:
          allOf:
          - $ref: '#/components/schemas/IssuerModeEnum'
          description: Configure how the issuer field of the ID Token should be filled.
        jwt_federation_sources:
          items:
            format: uuid
            title: Any JWT signed by the JWK of the selected source can be used to
              authenticate.
            type: string
          title: Any JWT signed by the JWK of the selected source can be used to authenticate.
          type: array
        jwt_federation_providers:
          items:
            type: integer
          type: array
      type: object
    PatchedOAuthSourcePropertyMappingRequest:
      description: OAuthSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedOAuthSourceRequest:
      description: OAuth Source Serializer
      example:
        provider_type: null
        user_matching_mode: ""
        consumer_secret: consumer_secret
        oidc_jwks_url: oidc_jwks_url
        user_path_template: user_path_template
        request_token_url: request_token_url
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        profile_url: profile_url
        authorization_url: authorization_url
        oidc_jwks:
          key: ""
        authorization_code_auth_method: ""
        additional_scopes: additional_scopes
        enabled: true
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        consumer_key: consumer_key
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oidc_well_known_url: oidc_well_known_url
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        access_token_url: access_token_url
        slug: slug
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        provider_type:
          $ref: '#/components/schemas/ProviderTypeEnum'
        request_token_url:
          description: URL used to request the initial token. This URL is only required
            for OAuth 1.
          maxLength: 255
          nullable: true
          type: string
        authorization_url:
          description: URL the user is redirect to to conest the flow.
          maxLength: 255
          nullable: true
          type: string
        access_token_url:
          description: URL used by authentik to retrieve tokens.
          maxLength: 255
          nullable: true
          type: string
        profile_url:
          description: URL used by authentik to get user information.
          maxLength: 255
          nullable: true
          type: string
        consumer_key:
          minLength: 1
          type: string
        consumer_secret:
          minLength: 1
          type: string
          writeOnly: true
        additional_scopes:
          type: string
        oidc_well_known_url:
          type: string
        oidc_jwks_url:
          type: string
        oidc_jwks:
          additionalProperties: {}
          type: object
        authorization_code_auth_method:
          allOf:
          - $ref: '#/components/schemas/AuthorizationCodeAuthMethodEnum'
          description: How to perform authentication during an authorization_code
            token request flow
      type: object
    PatchedOutpostRequest:
      description: Outpost Serializer
      example:
        managed: managed
        name: name
        service_connection: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
        config:
          key: ""
        providers:
        - 0
        - 0
      properties:
        name:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/OutpostTypeEnum'
        providers:
          items:
            type: integer
          type: array
        service_connection:
          description: Select Service-Connection authentik should use to manage this
            outpost. Leave empty if authentik should not handle the deployment.
          format: uuid
          nullable: true
          type: string
        config:
          additionalProperties: {}
          type: object
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
      type: object
    PatchedPasswordExpiryPolicyRequest:
      description: Password Expiry Policy Serializer
      example:
        execution_logging: true
        deny_only: true
        name: name
        days: -1803530559
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        days:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        deny_only:
          type: boolean
      type: object
    PatchedPasswordPolicyRequest:
      description: Password Policy Serializer
      example:
        error_message: error_message
        amount_symbols: 1280358508
        amount_lowercase: 314780940
        execution_logging: true
        check_have_i_been_pwned: true
        check_zxcvbn: true
        amount_uppercase: 1294386358
        length_min: 1210617418
        password_field: password_field
        amount_digits: 171976544
        check_static_rules: true
        symbol_charset: symbol_charset
        name: name
        zxcvbn_score_threshold: 1516424369
        hibp_allowed_count: 494379917
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        password_field:
          description: "Field key to check, field keys defined in Prompt stages are\
            \ available."
          minLength: 1
          type: string
        amount_digits:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_uppercase:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_lowercase:
          maximum: 2147483647
          minimum: 0
          type: integer
        amount_symbols:
          maximum: 2147483647
          minimum: 0
          type: integer
        length_min:
          maximum: 2147483647
          minimum: 0
          type: integer
        symbol_charset:
          minLength: 1
          type: string
        error_message:
          type: string
        check_static_rules:
          type: boolean
        check_have_i_been_pwned:
          type: boolean
        check_zxcvbn:
          type: boolean
        hibp_allowed_count:
          description: How many times the password hash is allowed to be on haveibeenpwned
          maximum: 2147483647
          minimum: 0
          type: integer
        zxcvbn_score_threshold:
          description: "If the zxcvbn score is equal or less than this value, the\
            \ policy will fail."
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    PatchedPasswordStageRequest:
      description: PasswordStage Serializer
      example:
        configure_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allow_show_password: true
        name: name
        failed_attempts_before_cancel: -1803530559
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        backends:
        - null
        - null
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        backends:
          description: Selection of backends to test the password against.
          items:
            $ref: '#/components/schemas/BackendsEnum'
          type: array
        configure_flow:
          description: "Flow used by an authenticated user to configure this Stage.\
            \ If empty, user will not be able to configure this stage."
          format: uuid
          nullable: true
          type: string
        failed_attempts_before_cancel:
          description: "How many attempts a user has before the flow is canceled.\
            \ To lock the user out, use a reputation policy and a user_write stage."
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        allow_show_password:
          description: "When enabled, provides a 'show password' button with the password\
            \ input field."
          type: boolean
      type: object
    PatchedPermissionAssignRequest:
      description: Request to assign a new permission
      example:
        permissions:
        - permissions
        - permissions
        model: null
        object_pk: object_pk
      properties:
        permissions:
          items:
            minLength: 1
            type: string
          type: array
        model:
          $ref: '#/components/schemas/ModelEnum'
        object_pk:
          minLength: 1
          type: string
      type: object
    PatchedPlexSourcePropertyMappingRequest:
      description: PlexSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedPlexSourceRequest:
      description: Plex Source Serializer
      example:
        allowed_servers:
        - allowed_servers
        - allowed_servers
        user_matching_mode: ""
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enabled: true
        client_id: client_id
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allow_friends: true
        plex_token: plex_token
        slug: slug
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        client_id:
          description: Client identifier used to talk to Plex.
          minLength: 1
          type: string
        allowed_servers:
          description: Which servers a user has to be a member of to be granted access.
            Empty list allows every server.
          items:
            minLength: 1
            type: string
          type: array
        allow_friends:
          description: "Allow friends to authenticate, even if you don't share a server."
          type: boolean
        plex_token:
          description: Plex token used to check friends
          minLength: 1
          type: string
      type: object
    PatchedPolicyBindingRequest:
      description: PolicyBinding Serializer
      example:
        negate: true
        failure_result: true
        user: 0
        enabled: true
        timeout: 314780940
        policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: 441289069
      properties:
        policy:
          format: uuid
          nullable: true
          type: string
        group:
          format: uuid
          nullable: true
          type: string
        user:
          nullable: true
          type: integer
        target:
          format: uuid
          type: string
        negate:
          description: Negates the outcome of the policy. Messages are unaffected.
          type: boolean
        enabled:
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        timeout:
          description: Timeout after which Policy execution is terminated.
          maximum: 2147483647
          minimum: 0
          type: integer
        failure_result:
          description: Result if the Policy execution fails.
          type: boolean
      type: object
    PatchedPromptRequest:
      description: Prompt Serializer
      example:
        sub_text: sub_text
        promptstage_set:
        - name: name
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
        - name: name
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
        initial_value: initial_value
        initial_value_expression: true
        field_key: field_key
        name: name
        label: label
        placeholder: placeholder
        type: null
        placeholder_expression: true
        required: true
        order: -1803530559
      properties:
        name:
          minLength: 1
          type: string
        field_key:
          description: "Name of the form field, also used to store the value"
          minLength: 1
          type: string
        label:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/PromptTypeEnum'
        required:
          type: boolean
        placeholder:
          description: "Optionally provide a short hint that describes the expected\
            \ input value. When creating a fixed choice field, enable interpreting\
            \ as expression and return a list to return multiple choices."
          type: string
        initial_value:
          description: "Optionally pre-fill the input with an initial value. When\
            \ creating a fixed choice field, enable interpreting as expression and\
            \ return a list to return multiple default choices."
          type: string
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        promptstage_set:
          items:
            $ref: '#/components/schemas/StageRequest'
          type: array
        sub_text:
          type: string
        placeholder_expression:
          type: boolean
        initial_value_expression:
          type: boolean
      type: object
    PatchedPromptStageRequest:
      description: PromptStage Serializer
      example:
        name: name
        validation_policies:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fields:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        fields:
          items:
            format: uuid
            type: string
          type: array
        validation_policies:
          items:
            format: uuid
            type: string
          type: array
      type: object
    PatchedProxyProviderRequest:
      description: ProxyProvider Serializer
      example:
        external_host: https://openapi-generator.tech
        cookie_domain: cookie_domain
        skip_path_regex: skip_path_regex
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        basic_auth_password_attribute: basic_auth_password_attribute
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        jwt_federation_sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        refresh_token_validity: refresh_token_validity
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mode: ""
        internal_host: https://openapi-generator.tech
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        basic_auth_enabled: true
        basic_auth_user_attribute: basic_auth_user_attribute
        access_token_validity: access_token_validity
        name: name
        intercept_header_auth: true
        internal_host_ssl_validation: true
        jwt_federation_providers:
        - 0
        - 0
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        internal_host:
          format: uri
          type: string
        external_host:
          format: uri
          minLength: 1
          type: string
        internal_host_ssl_validation:
          description: Validate SSL Certificates of upstream servers
          type: boolean
        certificate:
          format: uuid
          nullable: true
          type: string
        skip_path_regex:
          description: Regular expressions for which authentication is not required.
            Each new line is interpreted as a new Regular Expression.
          type: string
        basic_auth_enabled:
          description: Set a custom HTTP-Basic Authentication header based on values
            from authentik.
          title: Set HTTP-Basic Authentication
          type: boolean
        basic_auth_password_attribute:
          description: User/Group Attribute used for the password part of the HTTP-Basic
            Header.
          title: HTTP-Basic Password Key
          type: string
        basic_auth_user_attribute:
          description: "User/Group Attribute used for the user part of the HTTP-Basic\
            \ Header. If not set, the user's Email address is used."
          title: HTTP-Basic Username Key
          type: string
        mode:
          allOf:
          - $ref: '#/components/schemas/ProxyMode'
          description: Enable support for forwardAuth in traefik and nginx auth_request.
            Exclusive with internal_host.
        intercept_header_auth:
          description: "When enabled, this provider will intercept the authorization\
            \ header and authenticate requests based on its value."
          type: boolean
        cookie_domain:
          type: string
        jwt_federation_sources:
          items:
            format: uuid
            title: Any JWT signed by the JWK of the selected source can be used to
              authenticate.
            type: string
          title: Any JWT signed by the JWK of the selected source can be used to authenticate.
          type: array
        jwt_federation_providers:
          items:
            type: integer
          type: array
        access_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        refresh_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
      type: object
    PatchedRACPropertyMappingRequest:
      description: RACPropertyMapping Serializer
      example:
        expression: expression
        static_settings:
          key: ""
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          type: string
        static_settings:
          additionalProperties: {}
          type: object
      type: object
    PatchedRACProviderRequest:
      description: RACProvider Serializer
      example:
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        settings:
          key: ""
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        delete_token_on_disconnect: true
        name: name
        connection_expiry: connection_expiry
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        settings:
          additionalProperties: {}
          type: object
        connection_expiry:
          description: "Determines how long a session lasts. Default of 0 means that\
            \ the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
        delete_token_on_disconnect:
          description: "When set to true, connection tokens will be deleted upon disconnect."
          type: boolean
      type: object
    PatchedRadiusProviderPropertyMappingRequest:
      description: RadiusProviderPropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedRadiusProviderRequest:
      description: RadiusProvider Serializer
      example:
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_networks: client_networks
        name: name
        shared_secret: shared_secret
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mfa_support: true
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        client_networks:
          description: List of CIDRs (comma-separated) that clients can connect from.
            A more specific CIDR will match before a looser one. Clients connecting
            from a non-specified CIDR will be dropped.
          minLength: 1
          type: string
        shared_secret:
          description: Shared secret between clients and server to hash packets.
          minLength: 1
          type: string
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      type: object
    PatchedRedirectStageRequest:
      description: RedirectStage Serializer
      example:
        mode: null
        target_static: target_static
        target_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        keep_context: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        keep_context:
          type: boolean
        mode:
          $ref: '#/components/schemas/RedirectStageModeEnum'
        target_static:
          type: string
        target_flow:
          format: uuid
          nullable: true
          type: string
      type: object
    PatchedReputationPolicyRequest:
      description: Reputation Policy Serializer
      example:
        check_ip: true
        execution_logging: true
        name: name
        check_username: true
        threshold: -1803530559
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        check_ip:
          type: boolean
        check_username:
          type: boolean
        threshold:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      type: object
    PatchedRoleRequest:
      description: Role serializer
      example:
        name: name
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
      type: object
    PatchedSAMLPropertyMappingRequest:
      description: SAMLPropertyMapping Serializer
      example:
        friendly_name: friendly_name
        expression: expression
        managed: managed
        name: name
        saml_name: saml_name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
        saml_name:
          minLength: 1
          type: string
        friendly_name:
          nullable: true
          type: string
      type: object
    PatchedSAMLProviderRequest:
      description: SAMLProvider Serializer
      example:
        audience: audience
        sign_response: true
        session_valid_not_on_or_after: session_valid_not_on_or_after
        sp_binding: ""
        default_relay_state: default_relay_state
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        acs_url: https://openapi-generator.tech
        issuer: issuer
        assertion_valid_not_before: assertion_valid_not_before
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authn_context_class_ref_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        digest_algorithm: null
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sign_assertion: true
        name: name
        assertion_valid_not_on_or_after: assertion_valid_not_on_or_after
        signature_algorithm: null
        verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name_id_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        acs_url:
          format: uri
          minLength: 1
          type: string
        audience:
          description: "Value of the audience restriction field of the assertion.\
            \ When left empty, no audience restriction will be added."
          type: string
        issuer:
          description: Also known as EntityID
          minLength: 1
          type: string
        assertion_valid_not_before:
          description: "Assertion valid not before current time + this value (Format:\
            \ hours=-1;minutes=-2;seconds=-3)."
          minLength: 1
          type: string
        assertion_valid_not_on_or_after:
          description: "Assertion not valid on or after current time + this value\
            \ (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        session_valid_not_on_or_after:
          description: "Session not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        name_id_mapping:
          description: "Configure how the NameID value will be created. When left\
            \ empty, the NameIDPolicy of the incoming request will be considered"
          format: uuid
          nullable: true
          title: NameID Property Mapping
          type: string
        authn_context_class_ref_mapping:
          description: "Configure how the AuthnContextClassRef value will be created.\
            \ When left empty, the AuthnContextClassRef will be set based on which\
            \ authentication methods the user used to authenticate."
          format: uuid
          nullable: true
          title: AuthnContextClassRef Property Mapping
          type: string
        digest_algorithm:
          $ref: '#/components/schemas/DigestAlgorithmEnum'
        signature_algorithm:
          $ref: '#/components/schemas/SignatureAlgorithmEnum'
        signing_kp:
          description: Keypair used to sign outgoing Responses going to the Service
            Provider.
          format: uuid
          nullable: true
          title: Signing Keypair
          type: string
        verification_kp:
          description: "When selected, incoming assertion's Signatures will be validated\
            \ against this certificate. To allow unsigned Requests, leave on default."
          format: uuid
          nullable: true
          title: Verification Certificate
          type: string
        encryption_kp:
          description: "When selected, incoming assertions are encrypted by the IdP\
            \ using the public key of the encryption keypair. The assertion is decrypted\
            \ by the SP using the the private key."
          format: uuid
          nullable: true
          title: Encryption Keypair
          type: string
        sign_assertion:
          type: boolean
        sign_response:
          type: boolean
        sp_binding:
          allOf:
          - $ref: '#/components/schemas/SpBindingEnum'
          description: This determines how authentik sends the response back to the
            Service Provider.
          title: Service Provider Binding
        default_relay_state:
          description: Default relay_state value for IDP-initiated logins
          type: string
      type: object
    PatchedSAMLSourcePropertyMappingRequest:
      description: SAMLSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedSAMLSourceRequest:
      description: SAMLSource Serializer
      example:
        binding_type: null
        allow_idp_initiated: true
        user_matching_mode: ""
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slo_url: https://openapi-generator.tech
        sso_url: https://openapi-generator.tech
        enabled: true
        issuer: issuer
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        digest_algorithm: null
        pre_authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name_id_policy: ""
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        signature_algorithm: null
        slug: slug
        signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        temporary_user_delete_after: temporary_user_delete_after
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        pre_authentication_flow:
          description: Flow used before authentication.
          format: uuid
          type: string
        issuer:
          description: Also known as Entity ID. Defaults the Metadata URL.
          type: string
        sso_url:
          description: URL that the initial Login request is sent to.
          format: uri
          minLength: 1
          type: string
        slo_url:
          description: Optional URL if your IDP supports Single-Logout.
          format: uri
          nullable: true
          type: string
        allow_idp_initiated:
          description: "Allows authentication flows initiated by the IdP. This can\
            \ be a security risk, as no validation of the request ID is done."
          type: boolean
        name_id_policy:
          allOf:
          - $ref: '#/components/schemas/NameIdPolicyEnum'
          description: "NameID Policy sent to the IdP. Can be unset, in which case\
            \ no Policy is sent."
        binding_type:
          $ref: '#/components/schemas/BindingTypeEnum'
        verification_kp:
          description: "When selected, incoming assertion's Signatures will be validated\
            \ against this certificate. To allow unsigned Requests, leave on default."
          format: uuid
          nullable: true
          title: Verification Certificate
          type: string
        signing_kp:
          description: Keypair used to sign outgoing Responses going to the Identity
            Provider.
          format: uuid
          nullable: true
          title: Signing Keypair
          type: string
        digest_algorithm:
          $ref: '#/components/schemas/DigestAlgorithmEnum'
        signature_algorithm:
          $ref: '#/components/schemas/SignatureAlgorithmEnum'
        temporary_user_delete_after:
          description: "Time offset when temporary users should be deleted. This only\
            \ applies if your IDP uses the NameID Format 'transient', and the user\
            \ doesn't log out manually. (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          title: Delete temporary users after
          type: string
        encryption_kp:
          description: "When selected, incoming assertions are encrypted by the IdP\
            \ using the public key of the encryption keypair. The assertion is decrypted\
            \ by the SP using the the private key."
          format: uuid
          nullable: true
          title: Encryption Keypair
          type: string
      type: object
    PatchedSCIMMappingRequest:
      description: SCIMMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedSCIMProviderRequest:
      description: SCIMProvider Serializer
      example:
        compatibility_mode: ""
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        dry_run: true
        verify_certificates: true
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url: url
        token: token
        exclude_users_service_account: true
      properties:
        name:
          minLength: 1
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        url:
          description: "Base URL to SCIM requests, usually ends in /v2"
          minLength: 1
          type: string
        verify_certificates:
          type: boolean
        token:
          description: Authentication token
          minLength: 1
          type: string
        compatibility_mode:
          allOf:
          - $ref: '#/components/schemas/CompatibilityModeEnum'
          description: Alter authentik behavior for vendor-specific SCIM implementations.
          title: SCIM Compatibility Mode
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      type: object
    PatchedSCIMSourceGroupRequest:
      description: SCIMSourceGroup Serializer
      example:
        attributes:
          key: ""
        id: id
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          minLength: 1
          type: string
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      type: object
    PatchedSCIMSourcePropertyMappingRequest:
      description: SCIMSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      type: object
    PatchedSCIMSourceRequest:
      description: SCIMSource Serializer
      example:
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
        enabled: true
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        user_path_template:
          minLength: 1
          type: string
      type: object
    PatchedSCIMSourceUserRequest:
      description: SCIMSourceUser Serializer
      example:
        attributes:
          key: ""
        id: id
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        id:
          minLength: 1
          type: string
        user:
          type: integer
        source:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      type: object
    PatchedSMSDeviceRequest:
      description: Serializer for sms authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      type: object
    PatchedSSFProviderRequest:
      description: SSFProvider Serializer
      example:
        signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oidc_auth_providers:
        - 0
        - 0
        name: name
        event_retention: event_retention
      properties:
        name:
          minLength: 1
          type: string
        signing_key:
          description: Key used to sign the SSF Events.
          format: uuid
          type: string
        oidc_auth_providers:
          items:
            type: integer
          type: array
        event_retention:
          minLength: 1
          type: string
      type: object
    PatchedScopeMappingRequest:
      description: ScopeMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
        description: description
        scope_name: scope_name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
        scope_name:
          description: Scope name requested by the client
          minLength: 1
          type: string
        description:
          description: "Description shown to the user when consenting. If left empty,\
            \ the user won't be informed."
          type: string
      type: object
    PatchedSettingsRequest:
      description: Settings Serializer
      example:
        reputation_upper_limit: 1294386358
        default_user_change_name: true
        impersonation: true
        default_token_duration: default_token_duration
        default_token_length: 314780941
        event_retention: event_retention
        default_user_change_email: true
        reputation_lower_limit: -1975507103
        impersonation_require_reason: true
        default_user_change_username: true
        footer_links: ""
        gdpr_compliance: true
        avatars: avatars
      properties:
        avatars:
          description: Configure how authentik should show avatars for users.
          minLength: 1
          type: string
        default_user_change_name:
          description: Enable the ability for users to change their name.
          type: boolean
        default_user_change_email:
          description: Enable the ability for users to change their email address.
          type: boolean
        default_user_change_username:
          description: Enable the ability for users to change their username.
          type: boolean
        event_retention:
          description: "Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2)."
          minLength: 1
          type: string
        reputation_lower_limit:
          description: Reputation cannot decrease lower than this value. Zero or negative.
          maximum: 0
          minimum: -2147483648
          type: integer
        reputation_upper_limit:
          description: Reputation cannot increase higher than this value. Zero or
            positive.
          maximum: 2147483647
          minimum: 0
          type: integer
        footer_links: {}
        gdpr_compliance:
          description: "When enabled, all the events caused by a user will be deleted\
            \ upon the user's deletion."
          type: boolean
        impersonation:
          description: Globally enable/disable impersonation.
          type: boolean
        impersonation_require_reason:
          description: Require administrators to provide a reason for impersonating
            a user.
          type: boolean
        default_token_duration:
          description: Default token duration
          minLength: 1
          type: string
        default_token_length:
          description: Default token length
          maximum: 2147483647
          minimum: 1
          type: integer
      type: object
    PatchedSourceStageRequest:
      description: SourceStage Serializer
      example:
        resume_timeout: resume_timeout
        name: name
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        source:
          format: uuid
          type: string
        resume_timeout:
          description: "Amount of time a user can take to return from the source to\
            \ continue the flow (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
      type: object
    PatchedStaticDeviceRequest:
      description: Serializer for static authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      type: object
    PatchedTOTPDeviceRequest:
      description: Serializer for totp authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      type: object
    PatchedTenantRequest:
      description: Tenant Serializer
      example:
        ready: true
        name: name
        schema_name: schema_name
      properties:
        schema_name:
          maxLength: 63
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        ready:
          type: boolean
      type: object
    PatchedTokenRequest:
      description: Token Serializer
      example:
        identifier: identifier
        expires: 2000-01-23T04:56:07.000+00:00
        expiring: true
        managed: managed
        description: description
        intent: null
        user: 0
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        identifier:
          maxLength: 255
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        intent:
          $ref: '#/components/schemas/IntentEnum'
        user:
          type: integer
        description:
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        expiring:
          type: boolean
      type: object
    PatchedUniquePasswordPolicyRequest:
      description: Password Uniqueness Policy Serializer
      example:
        password_field: password_field
        num_historical_passwords: 171976544
        execution_logging: true
        name: name
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        password_field:
          description: "Field key to check, field keys defined in Prompt stages are\
            \ available."
          minLength: 1
          type: string
        num_historical_passwords:
          description: Number of passwords to check against.
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    PatchedUserDeleteStageRequest:
      description: UserDeleteStage Serializer
      example:
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
      type: object
    PatchedUserKerberosSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedUserLDAPSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedUserLoginStageRequest:
      description: UserLoginStage Serializer
      example:
        terminate_other_sessions: true
        remember_me_offset: remember_me_offset
        name: name
        network_binding: ""
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        geoip_binding: ""
        session_duration: session_duration
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        session_duration:
          description: "Determines how long a session lasts. Default of 0 means that\
            \ the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
        terminate_other_sessions:
          description: Terminate all other sessions of the user logging in.
          type: boolean
        remember_me_offset:
          description: "Offset the session will be extended by when the user picks\
            \ the remember me option. Default of 0 means that the remember me option\
            \ will not be shown. (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
        network_binding:
          allOf:
          - $ref: '#/components/schemas/NetworkBindingEnum'
          description: Bind sessions created by this stage to the configured network
        geoip_binding:
          allOf:
          - $ref: '#/components/schemas/GeoipBindingEnum'
          description: Bind sessions created by this stage to the configured GeoIP
            location
      type: object
    PatchedUserLogoutStageRequest:
      description: UserLogoutStage Serializer
      example:
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
      type: object
    PatchedUserOAuthSourceConnectionRequest:
      description: User source connection
      example:
        access_token: access_token
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
        access_token:
          nullable: true
          type: string
          writeOnly: true
      type: object
    PatchedUserPlexSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plex_token: plex_token
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
        plex_token:
          minLength: 1
          type: string
          writeOnly: true
      type: object
    PatchedUserRequest:
      description: User Serializer
      example:
        path: path
        is_active: true
        last_login: 2000-01-23T04:56:07.000+00:00
        name: name
        groups:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attributes:
          key: ""
        type: null
        email: email
        username: username
      properties:
        username:
          maxLength: 150
          minLength: 1
          type: string
        name:
          description: User's display name.
          type: string
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          title: Active
          type: boolean
        last_login:
          format: date-time
          nullable: true
          type: string
        groups:
          items:
            format: uuid
            type: string
          type: array
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        attributes:
          additionalProperties: {}
          type: object
        path:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/UserTypeEnum'
      type: object
    PatchedUserSAMLSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedUserSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      type: object
    PatchedUserWriteStageRequest:
      description: UserWriteStage Serializer
      example:
        user_type: null
        user_path_template: user_path_template
        name: name
        create_users_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_creation_mode: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        create_users_as_inactive: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        user_creation_mode:
          $ref: '#/components/schemas/UserCreationModeEnum'
        create_users_as_inactive:
          description: "When set, newly created users are inactive and cannot login."
          type: boolean
        create_users_group:
          description: Optionally add newly created users to this group.
          format: uuid
          nullable: true
          type: string
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        user_path_template:
          type: string
      type: object
    PatchedWebAuthnDeviceRequest:
      description: Serializer for WebAuthn authenticator devices
      example:
        name: name
      properties:
        name:
          maxLength: 200
          minLength: 1
          type: string
      type: object
    Permission:
      description: Global permission
      example:
        app_label: app_label
        codename: codename
        model_verbose: model_verbose
        name: name
        model: model
        id: 1
        app_label_verbose: app_label_verbose
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type: string
        codename:
          maxLength: 100
          type: string
        model:
          readOnly: true
          title: Python model class name
          type: string
        app_label:
          readOnly: true
          type: string
        app_label_verbose:
          description: Human-readable app label
          readOnly: true
          type: string
        model_verbose:
          description: Human-readable model name
          readOnly: true
          type: string
      required:
      - app_label
      - app_label_verbose
      - codename
      - id
      - model
      - model_verbose
      - name
      type: object
    PermissionAssignRequest:
      description: Request to assign a new permission
      example:
        permissions:
        - permissions
        - permissions
        model: null
        object_pk: object_pk
      properties:
        permissions:
          items:
            minLength: 1
            type: string
          type: array
        model:
          $ref: '#/components/schemas/ModelEnum'
        object_pk:
          minLength: 1
          type: string
      required:
      - permissions
      type: object
    PermissionAssignResult:
      description: Result from assigning permissions to a user/role
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    PermissionRequest:
      description: Global permission
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        codename:
          maxLength: 100
          minLength: 1
          type: string
      required:
      - codename
      - name
      type: object
    PlexAuthenticationChallenge:
      description: Challenge shown to the user in identification stage
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-source-plex
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        client_id:
          type: string
        slug:
          type: string
      required:
      - client_id
      - slug
      type: object
    PlexAuthenticationChallengeResponseRequest:
      description: Pseudo class for plex response
      properties:
        component:
          default: ak-source-plex
          minLength: 1
          type: string
      type: object
    PlexSource:
      description: Plex Source Serializer
      example:
        allowed_servers:
        - allowed_servers
        - allowed_servers
        user_matching_mode: ""
        verbose_name_plural: verbose_name_plural
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        icon: icon
        enabled: true
        client_id: client_id
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        managed: managed
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allow_friends: true
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plex_token: plex_token
        slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Source's display Name.
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
        user_path_template:
          type: string
        icon:
          readOnly: true
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        client_id:
          description: Client identifier used to talk to Plex.
          type: string
        allowed_servers:
          description: Which servers a user has to be a member of to be granted access.
            Empty list allows every server.
          items:
            type: string
          type: array
        allow_friends:
          description: "Allow friends to authenticate, even if you don't share a server."
          type: boolean
        plex_token:
          description: Plex token used to check friends
          type: string
      required:
      - component
      - icon
      - managed
      - meta_model_name
      - name
      - pk
      - plex_token
      - slug
      - verbose_name
      - verbose_name_plural
      type: object
    PlexSourcePropertyMapping:
      description: PlexSourcePropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    PlexSourcePropertyMappingRequest:
      description: PlexSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    PlexSourceRequest:
      description: Plex Source Serializer
      example:
        allowed_servers:
        - allowed_servers
        - allowed_servers
        user_matching_mode: ""
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enabled: true
        client_id: client_id
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allow_friends: true
        plex_token: plex_token
        slug: slug
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        client_id:
          description: Client identifier used to talk to Plex.
          minLength: 1
          type: string
        allowed_servers:
          description: Which servers a user has to be a member of to be granted access.
            Empty list allows every server.
          items:
            minLength: 1
            type: string
          type: array
        allow_friends:
          description: "Allow friends to authenticate, even if you don't share a server."
          type: boolean
        plex_token:
          description: Plex token used to check friends
          minLength: 1
          type: string
      required:
      - name
      - plex_token
      - slug
      type: object
    PlexTokenRedeemRequest:
      description: Serializer to redeem a plex token
      example:
        plex_token: plex_token
      properties:
        plex_token:
          minLength: 1
          type: string
      required:
      - plex_token
      type: object
    Policy:
      description: Policy Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        execution_logging: true
        bound_to: 0
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
      required:
      - bound_to
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    PolicyBinding:
      description: PolicyBinding Serializer
      example:
        user_obj: ""
        failure_result: true
        policy_obj: ""
        enabled: true
        timeout: 314780940
        target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        negate: true
        group_obj: ""
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
        policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: 441289069
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy binding uuid
          type: string
        policy:
          format: uuid
          nullable: true
          type: string
        group:
          format: uuid
          nullable: true
          type: string
        user:
          nullable: true
          type: integer
        policy_obj:
          allOf:
          - $ref: '#/components/schemas/Policy'
          readOnly: true
        group_obj:
          allOf:
          - $ref: '#/components/schemas/Group'
          readOnly: true
        user_obj:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        target:
          format: uuid
          type: string
        negate:
          description: Negates the outcome of the policy. Messages are unaffected.
          type: boolean
        enabled:
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        timeout:
          description: Timeout after which Policy execution is terminated.
          maximum: 2147483647
          minimum: 0
          type: integer
        failure_result:
          description: Result if the Policy execution fails.
          type: boolean
      required:
      - group_obj
      - order
      - pk
      - policy_obj
      - target
      - user_obj
      type: object
    PolicyBindingRequest:
      description: PolicyBinding Serializer
      example:
        negate: true
        failure_result: true
        user: 0
        enabled: true
        timeout: 314780940
        policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        target: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: 441289069
      properties:
        policy:
          format: uuid
          nullable: true
          type: string
        group:
          format: uuid
          nullable: true
          type: string
        user:
          nullable: true
          type: integer
        target:
          format: uuid
          type: string
        negate:
          description: Negates the outcome of the policy. Messages are unaffected.
          type: boolean
        enabled:
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        timeout:
          description: Timeout after which Policy execution is terminated.
          maximum: 2147483647
          minimum: 0
          type: integer
        failure_result:
          description: Result if the Policy execution fails.
          type: boolean
      required:
      - order
      - target
      type: object
    PolicyEngineMode:
      enum:
      - all
      - any
      type: string
    PolicyRequest:
      description: Policy Serializer
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
      required:
      - name
      type: object
    PolicyTestRequest:
      description: Test policy execution for a user with context
      example:
        context:
          key: ""
        user: 0
      properties:
        user:
          type: integer
        context:
          additionalProperties: {}
          type: object
      required:
      - user
      type: object
    PolicyTestResult:
      description: result of a policy test
      example:
        log_messages:
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
        messages:
        - messages
        - messages
        passing: true
      properties:
        passing:
          type: boolean
        messages:
          items:
            type: string
          readOnly: true
          type: array
        log_messages:
          items:
            $ref: '#/components/schemas/LogEvent'
          readOnly: true
          type: array
      required:
      - log_messages
      - messages
      - passing
      type: object
    Prompt:
      description: Prompt Serializer
      example:
        sub_text: sub_text
        initial_value: initial_value
        initial_value_expression: true
        label: label
        type: null
        placeholder_expression: true
        required: true
        promptstage_set:
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        - component: component
          verbose_name: verbose_name
          verbose_name_plural: verbose_name_plural
          meta_model_name: meta_model_name
          name: name
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            background: background
            denied_action: ""
            name: name
            export_url: export_url
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            designation: ""
            title: title
            slug: slug
        field_key: field_key
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        placeholder: placeholder
        order: -1803530559
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Prompt uuid
          type: string
        name:
          type: string
        field_key:
          description: "Name of the form field, also used to store the value"
          type: string
        label:
          type: string
        type:
          $ref: '#/components/schemas/PromptTypeEnum'
        required:
          type: boolean
        placeholder:
          description: "Optionally provide a short hint that describes the expected\
            \ input value. When creating a fixed choice field, enable interpreting\
            \ as expression and return a list to return multiple choices."
          type: string
        initial_value:
          description: "Optionally pre-fill the input with an initial value. When\
            \ creating a fixed choice field, enable interpreting as expression and\
            \ return a list to return multiple default choices."
          type: string
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        promptstage_set:
          items:
            $ref: '#/components/schemas/Stage'
          type: array
        sub_text:
          type: string
        placeholder_expression:
          type: boolean
        initial_value_expression:
          type: boolean
      required:
      - field_key
      - label
      - name
      - pk
      - type
      type: object
    PromptChallenge:
      description: "Initial challenge being sent, define fields"
      example:
        component: ak-stage-prompt
        response_errors:
          key:
          - code: code
            string: string
          - code: code
            string: string
        flow_info:
          layout: null
          background: background
          title: title
          cancel_url: cancel_url
        fields:
        - sub_text: sub_text
          initial_value: initial_value
          field_key: field_key
          label: label
          placeholder: placeholder
          type: null
          choices:
          - choices
          - choices
          required: true
          order: 0
        - sub_text: sub_text
          initial_value: initial_value
          field_key: field_key
          label: label
          placeholder: placeholder
          type: null
          choices:
          - choices
          - choices
          required: true
          order: 0
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-prompt
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        fields:
          items:
            $ref: '#/components/schemas/StagePrompt'
          type: array
      required:
      - fields
      type: object
    PromptChallengeResponseRequest:
      additionalProperties: {}
      description: |-
        Validate response, fields are dynamically created based
        on the stage
      properties:
        component:
          default: ak-stage-prompt
          minLength: 1
          type: string
      type: object
    PromptRequest:
      description: Prompt Serializer
      example:
        sub_text: sub_text
        promptstage_set:
        - name: name
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
        - name: name
          flow_set:
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
          - policy_engine_mode: null
            compatibility_mode: true
            layout: null
            denied_action: ""
            name: name
            designation: ""
            title: title
            slug: slug
        initial_value: initial_value
        initial_value_expression: true
        field_key: field_key
        name: name
        label: label
        placeholder: placeholder
        type: null
        placeholder_expression: true
        required: true
        order: -1803530559
      properties:
        name:
          minLength: 1
          type: string
        field_key:
          description: "Name of the form field, also used to store the value"
          minLength: 1
          type: string
        label:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/PromptTypeEnum'
        required:
          type: boolean
        placeholder:
          description: "Optionally provide a short hint that describes the expected\
            \ input value. When creating a fixed choice field, enable interpreting\
            \ as expression and return a list to return multiple choices."
          type: string
        initial_value:
          description: "Optionally pre-fill the input with an initial value. When\
            \ creating a fixed choice field, enable interpreting as expression and\
            \ return a list to return multiple default choices."
          type: string
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        promptstage_set:
          items:
            $ref: '#/components/schemas/StageRequest'
          type: array
        sub_text:
          type: string
        placeholder_expression:
          type: boolean
        initial_value_expression:
          type: boolean
      required:
      - field_key
      - label
      - name
      - type
      type: object
    PromptStage:
      description: PromptStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        validation_policies:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fields:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        fields:
          items:
            format: uuid
            type: string
          type: array
        validation_policies:
          items:
            format: uuid
            type: string
          type: array
      required:
      - component
      - fields
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    PromptStageRequest:
      description: PromptStage Serializer
      example:
        name: name
        validation_policies:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fields:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        fields:
          items:
            format: uuid
            type: string
          type: array
        validation_policies:
          items:
            format: uuid
            type: string
          type: array
      required:
      - fields
      - name
      type: object
    PromptTypeEnum:
      enum:
      - text
      - text_area
      - text_read_only
      - text_area_read_only
      - username
      - email
      - password
      - number
      - checkbox
      - radio-button-group
      - dropdown
      - date
      - date-time
      - file
      - separator
      - hidden
      - static
      - ak-locale
      type: string
    PropertyMapping:
      description: PropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    PropertyMappingPreview:
      description: Preview how the current user is mapped via the property mappings
        selected in a provider
      example:
        preview:
          key: ""
      properties:
        preview:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - preview
      type: object
    PropertyMappingTestRequest:
      description: Test property mapping execution for a user/group with context
      example:
        context:
          key: ""
        user: 0
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        user:
          nullable: true
          type: integer
        context:
          additionalProperties: {}
          type: object
        group:
          format: uuid
          nullable: true
          type: string
      type: object
    PropertyMappingTestResult:
      description: Result of a Property-mapping test
      example:
        result: result
        successful: true
      properties:
        result:
          readOnly: true
          type: string
        successful:
          readOnly: true
          type: boolean
      required:
      - result
      - successful
      type: object
    ProtocolEnum:
      enum:
      - rdp
      - vnc
      - ssh
      type: string
    Provider:
      description: Provider Serializer
      example:
        verbose_name_plural: verbose_name_plural
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_application_slug: assigned_application_slug
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        assigned_application_name: assigned_application_name
        assigned_backchannel_application_name: assigned_backchannel_application_name
        name: name
        pk: 1
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - assigned_application_name
      - assigned_application_slug
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - authorization_flow
      - component
      - invalidation_flow
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    ProviderEnum:
      enum:
      - twilio
      - generic
      type: string
    ProviderModelEnum:
      enum:
      - authentik_providers_google_workspace.googleworkspaceprovider
      - authentik_providers_ldap.ldapprovider
      - authentik_providers_microsoft_entra.microsoftentraprovider
      - authentik_providers_oauth2.oauth2provider
      - authentik_providers_proxy.proxyprovider
      - authentik_providers_rac.racprovider
      - authentik_providers_radius.radiusprovider
      - authentik_providers_saml.samlprovider
      - authentik_providers_scim.scimprovider
      - authentik_providers_ssf.ssfprovider
      type: string
    ProviderRequest:
      description: Provider Serializer
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
      required:
      - authorization_flow
      - invalidation_flow
      - name
      type: object
    ProviderTypeEnum:
      enum:
      - apple
      - openidconnect
      - azuread
      - discord
      - facebook
      - github
      - gitlab
      - google
      - mailcow
      - okta
      - patreon
      - reddit
      - twitch
      - twitter
      type: string
    ProxyMode:
      enum:
      - proxy
      - forward_single
      - forward_domain
      type: string
    ProxyOutpostConfig:
      description: Proxy provider serializer for outposts
      example:
        external_host: https://openapi-generator.tech
        cookie_domain: cookie_domain
        skip_path_regex: skip_path_regex
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cookie_secret: cookie_secret
        basic_auth_password_attribute: basic_auth_password_attribute
        assigned_application_slug: assigned_application_slug
        client_id: client_id
        mode: ""
        internal_host: https://openapi-generator.tech
        oidc_configuration: ""
        basic_auth_enabled: true
        basic_auth_user_attribute: basic_auth_user_attribute
        access_token_validity: 6.027456183070403
        assigned_application_name: assigned_application_name
        name: name
        intercept_header_auth: true
        scopes_to_request:
        - scopes_to_request
        - scopes_to_request
        pk: 0
        client_secret: client_secret
        internal_host_ssl_validation: true
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        internal_host:
          format: uri
          type: string
        external_host:
          format: uri
          type: string
        internal_host_ssl_validation:
          description: Validate SSL Certificates of upstream servers
          type: boolean
        client_id:
          maxLength: 255
          type: string
        client_secret:
          maxLength: 255
          type: string
        oidc_configuration:
          allOf:
          - $ref: '#/components/schemas/OpenIDConnectConfiguration'
          readOnly: true
        cookie_secret:
          type: string
        certificate:
          format: uuid
          nullable: true
          type: string
        skip_path_regex:
          description: Regular expressions for which authentication is not required.
            Each new line is interpreted as a new Regular Expression.
          type: string
        basic_auth_enabled:
          description: Set a custom HTTP-Basic Authentication header based on values
            from authentik.
          title: Set HTTP-Basic Authentication
          type: boolean
        basic_auth_password_attribute:
          description: User/Group Attribute used for the password part of the HTTP-Basic
            Header.
          title: HTTP-Basic Password Key
          type: string
        basic_auth_user_attribute:
          description: "User/Group Attribute used for the user part of the HTTP-Basic\
            \ Header. If not set, the user's Email address is used."
          title: HTTP-Basic Username Key
          type: string
        mode:
          allOf:
          - $ref: '#/components/schemas/ProxyMode'
          description: Enable support for forwardAuth in traefik and nginx auth_request.
            Exclusive with internal_host.
        cookie_domain:
          type: string
        access_token_validity:
          description: Get token validity as second count
          format: double
          nullable: true
          readOnly: true
          type: number
        intercept_header_auth:
          description: "When enabled, this provider will intercept the authorization\
            \ header and authenticate requests based on its value."
          type: boolean
        scopes_to_request:
          description: |-
            Get all the scope names the outpost should request,
            including custom-defined ones
          items:
            type: string
          readOnly: true
          type: array
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
      required:
      - access_token_validity
      - assigned_application_name
      - assigned_application_slug
      - external_host
      - name
      - oidc_configuration
      - pk
      - scopes_to_request
      type: object
    ProxyProvider:
      description: ProxyProvider Serializer
      example:
        verbose_name_plural: verbose_name_plural
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_application_slug: assigned_application_slug
        client_id: client_id
        jwt_federation_sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        refresh_token_validity: refresh_token_validity
        mode: ""
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_application_name: assigned_application_name
        assigned_backchannel_application_name: assigned_backchannel_application_name
        intercept_header_auth: true
        internal_host_ssl_validation: true
        jwt_federation_providers:
        - 6
        - 6
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        external_host: https://openapi-generator.tech
        cookie_domain: cookie_domain
        skip_path_regex: skip_path_regex
        basic_auth_password_attribute: basic_auth_password_attribute
        redirect_uris:
        - matching_mode: null
          url: url
        - matching_mode: null
          url: url
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        internal_host: https://openapi-generator.tech
        outpost_set:
        - outpost_set
        - outpost_set
        component: component
        verbose_name: verbose_name
        basic_auth_enabled: true
        basic_auth_user_attribute: basic_auth_user_attribute
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        access_token_validity: access_token_validity
        name: name
        pk: 0
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        client_id:
          readOnly: true
          type: string
        internal_host:
          format: uri
          type: string
        external_host:
          format: uri
          type: string
        internal_host_ssl_validation:
          description: Validate SSL Certificates of upstream servers
          type: boolean
        certificate:
          format: uuid
          nullable: true
          type: string
        skip_path_regex:
          description: Regular expressions for which authentication is not required.
            Each new line is interpreted as a new Regular Expression.
          type: string
        basic_auth_enabled:
          description: Set a custom HTTP-Basic Authentication header based on values
            from authentik.
          title: Set HTTP-Basic Authentication
          type: boolean
        basic_auth_password_attribute:
          description: User/Group Attribute used for the password part of the HTTP-Basic
            Header.
          title: HTTP-Basic Password Key
          type: string
        basic_auth_user_attribute:
          description: "User/Group Attribute used for the user part of the HTTP-Basic\
            \ Header. If not set, the user's Email address is used."
          title: HTTP-Basic Username Key
          type: string
        mode:
          allOf:
          - $ref: '#/components/schemas/ProxyMode'
          description: Enable support for forwardAuth in traefik and nginx auth_request.
            Exclusive with internal_host.
        intercept_header_auth:
          description: "When enabled, this provider will intercept the authorization\
            \ header and authenticate requests based on its value."
          type: boolean
        redirect_uris:
          items:
            $ref: '#/components/schemas/RedirectURI'
          readOnly: true
          type: array
        cookie_domain:
          type: string
        jwt_federation_sources:
          items:
            format: uuid
            title: Any JWT signed by the JWK of the selected source can be used to
              authenticate.
            type: string
          title: Any JWT signed by the JWK of the selected source can be used to authenticate.
          type: array
        jwt_federation_providers:
          items:
            type: integer
          type: array
        access_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          type: string
        refresh_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          type: string
        outpost_set:
          items:
            type: string
          readOnly: true
          type: array
      required:
      - assigned_application_name
      - assigned_application_slug
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - authorization_flow
      - client_id
      - component
      - external_host
      - invalidation_flow
      - meta_model_name
      - name
      - outpost_set
      - pk
      - redirect_uris
      - verbose_name
      - verbose_name_plural
      type: object
    ProxyProviderRequest:
      description: ProxyProvider Serializer
      example:
        external_host: https://openapi-generator.tech
        cookie_domain: cookie_domain
        skip_path_regex: skip_path_regex
        certificate: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        basic_auth_password_attribute: basic_auth_password_attribute
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        jwt_federation_sources:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        refresh_token_validity: refresh_token_validity
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mode: ""
        internal_host: https://openapi-generator.tech
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        basic_auth_enabled: true
        basic_auth_user_attribute: basic_auth_user_attribute
        access_token_validity: access_token_validity
        name: name
        intercept_header_auth: true
        internal_host_ssl_validation: true
        jwt_federation_providers:
        - 0
        - 0
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        internal_host:
          format: uri
          type: string
        external_host:
          format: uri
          minLength: 1
          type: string
        internal_host_ssl_validation:
          description: Validate SSL Certificates of upstream servers
          type: boolean
        certificate:
          format: uuid
          nullable: true
          type: string
        skip_path_regex:
          description: Regular expressions for which authentication is not required.
            Each new line is interpreted as a new Regular Expression.
          type: string
        basic_auth_enabled:
          description: Set a custom HTTP-Basic Authentication header based on values
            from authentik.
          title: Set HTTP-Basic Authentication
          type: boolean
        basic_auth_password_attribute:
          description: User/Group Attribute used for the password part of the HTTP-Basic
            Header.
          title: HTTP-Basic Password Key
          type: string
        basic_auth_user_attribute:
          description: "User/Group Attribute used for the user part of the HTTP-Basic\
            \ Header. If not set, the user's Email address is used."
          title: HTTP-Basic Username Key
          type: string
        mode:
          allOf:
          - $ref: '#/components/schemas/ProxyMode'
          description: Enable support for forwardAuth in traefik and nginx auth_request.
            Exclusive with internal_host.
        intercept_header_auth:
          description: "When enabled, this provider will intercept the authorization\
            \ header and authenticate requests based on its value."
          type: boolean
        cookie_domain:
          type: string
        jwt_federation_sources:
          items:
            format: uuid
            title: Any JWT signed by the JWK of the selected source can be used to
              authenticate.
            type: string
          title: Any JWT signed by the JWK of the selected source can be used to authenticate.
          type: array
        jwt_federation_providers:
          items:
            type: integer
          type: array
        access_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        refresh_token_validity:
          description: "Tokens not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
      required:
      - authorization_flow
      - external_host
      - invalidation_flow
      - name
      type: object
    RACPropertyMapping:
      description: RACPropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        static_settings:
          key: ""
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        static_settings:
          additionalProperties: {}
          type: object
      required:
      - component
      - meta_model_name
      - name
      - pk
      - static_settings
      - verbose_name
      - verbose_name_plural
      type: object
    RACPropertyMappingRequest:
      description: RACPropertyMapping Serializer
      example:
        expression: expression
        static_settings:
          key: ""
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          type: string
        static_settings:
          additionalProperties: {}
          type: object
      required:
      - name
      - static_settings
      type: object
    RACProvider:
      description: RACProvider Serializer
      example:
        settings:
          key: ""
        verbose_name_plural: verbose_name_plural
        delete_token_on_disconnect: true
        assigned_application_slug: assigned_application_slug
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        outpost_set:
        - outpost_set
        - outpost_set
        component: component
        verbose_name: verbose_name
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        assigned_application_name: assigned_application_name
        assigned_backchannel_application_name: assigned_backchannel_application_name
        name: name
        pk: 0
        connection_expiry: connection_expiry
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        settings:
          additionalProperties: {}
          type: object
        outpost_set:
          items:
            type: string
          readOnly: true
          type: array
        connection_expiry:
          description: "Determines how long a session lasts. Default of 0 means that\
            \ the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)"
          type: string
        delete_token_on_disconnect:
          description: "When set to true, connection tokens will be deleted upon disconnect."
          type: boolean
      required:
      - assigned_application_name
      - assigned_application_slug
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - authorization_flow
      - component
      - meta_model_name
      - name
      - outpost_set
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    RACProviderRequest:
      description: RACProvider Serializer
      example:
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        settings:
          key: ""
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        delete_token_on_disconnect: true
        name: name
        connection_expiry: connection_expiry
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        settings:
          additionalProperties: {}
          type: object
        connection_expiry:
          description: "Determines how long a session lasts. Default of 0 means that\
            \ the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
        delete_token_on_disconnect:
          description: "When set to true, connection tokens will be deleted upon disconnect."
          type: boolean
      required:
      - authorization_flow
      - name
      type: object
    RadiusCheckAccess:
      description: Base serializer class which doesn't implement create/update methods
      example:
        access:
          log_messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          messages:
          - messages
          - messages
          passing: true
        attributes: attributes
      properties:
        attributes:
          type: string
        access:
          $ref: '#/components/schemas/PolicyTestResult'
      required:
      - access
      type: object
    RadiusOutpostConfig:
      description: RadiusProvider Serializer
      example:
        application_slug: application_slug
        client_networks: client_networks
        name: name
        auth_flow_slug: auth_flow_slug
        shared_secret: shared_secret
        pk: 0
        mfa_support: true
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        application_slug:
          type: string
        auth_flow_slug:
          type: string
        client_networks:
          description: List of CIDRs (comma-separated) that clients can connect from.
            A more specific CIDR will match before a looser one. Clients connecting
            from a non-specified CIDR will be dropped.
          type: string
        shared_secret:
          description: Shared secret between clients and server to hash packets.
          type: string
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      required:
      - application_slug
      - auth_flow_slug
      - name
      - pk
      type: object
    RadiusProvider:
      description: RadiusProvider Serializer
      example:
        client_networks: client_networks
        verbose_name_plural: verbose_name_plural
        shared_secret: shared_secret
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_application_slug: assigned_application_slug
        mfa_support: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        outpost_set:
        - outpost_set
        - outpost_set
        component: component
        verbose_name: verbose_name
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        assigned_application_name: assigned_application_name
        assigned_backchannel_application_name: assigned_backchannel_application_name
        name: name
        pk: 0
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        client_networks:
          description: List of CIDRs (comma-separated) that clients can connect from.
            A more specific CIDR will match before a looser one. Clients connecting
            from a non-specified CIDR will be dropped.
          type: string
        shared_secret:
          description: Shared secret between clients and server to hash packets.
          type: string
        outpost_set:
          items:
            type: string
          readOnly: true
          type: array
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      required:
      - assigned_application_name
      - assigned_application_slug
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - authorization_flow
      - component
      - invalidation_flow
      - meta_model_name
      - name
      - outpost_set
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    RadiusProviderPropertyMapping:
      description: RadiusProviderPropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    RadiusProviderPropertyMappingRequest:
      description: RadiusProviderPropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    RadiusProviderRequest:
      description: RadiusProvider Serializer
      example:
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        client_networks: client_networks
        name: name
        shared_secret: shared_secret
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mfa_support: true
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        client_networks:
          description: List of CIDRs (comma-separated) that clients can connect from.
            A more specific CIDR will match before a looser one. Clients connecting
            from a non-specified CIDR will be dropped.
          minLength: 1
          type: string
        shared_secret:
          description: Shared secret between clients and server to hash packets.
          minLength: 1
          type: string
        mfa_support:
          description: "When enabled, code-based multi-factor authentication can be\
            \ used by appending a semicolon and the TOTP code to the password. This\
            \ should only be enabled if all users that will bind to this provider\
            \ have a TOTP device configured, as otherwise a password may incorrectly\
            \ be rejected if it contains a semicolon."
          type: boolean
      required:
      - authorization_flow
      - invalidation_flow
      - name
      type: object
    RedirectChallenge:
      description: Challenge type to redirect the client
      example:
        component: xak-flow-redirect
        response_errors:
          key:
          - code: code
            string: string
          - code: code
            string: string
        to: to
        flow_info:
          layout: null
          background: background
          title: title
          cancel_url: cancel_url
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: xak-flow-redirect
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        to:
          type: string
      required:
      - to
      type: object
    RedirectChallengeResponseRequest:
      description: Redirect challenge response
      properties:
        component:
          default: xak-flow-redirect
          minLength: 1
          type: string
        to:
          minLength: 1
          type: string
      required:
      - to
      type: object
    RedirectStage:
      description: RedirectStage Serializer
      example:
        mode: null
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        target_static: target_static
        target_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        keep_context: true
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        keep_context:
          type: boolean
        mode:
          $ref: '#/components/schemas/RedirectStageModeEnum'
        target_static:
          type: string
        target_flow:
          format: uuid
          nullable: true
          type: string
      required:
      - component
      - meta_model_name
      - mode
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    RedirectStageModeEnum:
      enum:
      - static
      - flow
      type: string
    RedirectStageRequest:
      description: RedirectStage Serializer
      example:
        mode: null
        target_static: target_static
        target_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        keep_context: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        keep_context:
          type: boolean
        mode:
          $ref: '#/components/schemas/RedirectStageModeEnum'
        target_static:
          type: string
        target_flow:
          format: uuid
          nullable: true
          type: string
      required:
      - mode
      - name
      type: object
    RedirectURI:
      description: A single allowed redirect URI entry
      example:
        matching_mode: null
        url: url
      properties:
        matching_mode:
          $ref: '#/components/schemas/MatchingModeEnum'
        url:
          type: string
      required:
      - matching_mode
      - url
      type: object
    RedirectURIRequest:
      description: A single allowed redirect URI entry
      example:
        matching_mode: null
        url: url
      properties:
        matching_mode:
          $ref: '#/components/schemas/MatchingModeEnum'
        url:
          minLength: 1
          type: string
      required:
      - matching_mode
      - url
      type: object
    Reputation:
      description: Reputation Serializer
      example:
        identifier: identifier
        score: -7746104769210155008
        ip_asn_data:
          key: ""
        ip_geo_data:
          key: ""
        ip: ip
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        pk:
          format: uuid
          title: Reputation uuid
          type: string
        identifier:
          type: string
        ip:
          type: string
        ip_geo_data:
          additionalProperties: {}
          type: object
        ip_asn_data:
          additionalProperties: {}
          type: object
        score:
          format: int64
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          type: integer
        updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - identifier
      - ip
      - updated
      type: object
    ReputationPolicy:
      description: Reputation Policy Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        check_ip: true
        execution_logging: true
        bound_to: 0
        name: name
        check_username: true
        threshold: 441289069
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        check_ip:
          type: boolean
        check_username:
          type: boolean
        threshold:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - bound_to
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    ReputationPolicyRequest:
      description: Reputation Policy Serializer
      example:
        check_ip: true
        execution_logging: true
        name: name
        check_username: true
        threshold: -1803530559
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        check_ip:
          type: boolean
        check_username:
          type: boolean
        threshold:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - name
      type: object
    ResidentKeyRequirementEnum:
      enum:
      - discouraged
      - preferred
      - required
      type: string
    Role:
      description: Role serializer
      example:
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        name:
          maxLength: 150
          type: string
      required:
      - name
      - pk
      type: object
    RoleAssignedObjectPermission:
      description: Roles assigned object permission serializer
      example:
        role_pk: role_pk
        permissions:
        - app_label: app_label
          codename: codename
          name: name
          model: model
          id: 0
          object_pk: object_pk
        - app_label: app_label
          codename: codename
          name: name
          model: model
          id: 0
          object_pk: object_pk
        name: name
      properties:
        role_pk:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/RoleObjectPermission'
          type: array
      required:
      - name
      - permissions
      - role_pk
      type: object
    RoleObjectPermission:
      description: Role-bound object level permission
      example:
        app_label: app_label
        codename: codename
        name: name
        model: model
        id: 0
        object_pk: object_pk
      properties:
        id:
          readOnly: true
          type: integer
        codename:
          readOnly: true
          type: string
        model:
          readOnly: true
          title: Python model class name
          type: string
        app_label:
          readOnly: true
          type: string
        object_pk:
          type: string
        name:
          readOnly: true
          type: string
      required:
      - app_label
      - codename
      - id
      - model
      - name
      - object_pk
      type: object
    RoleRequest:
      description: Role serializer
      example:
        name: name
      properties:
        name:
          maxLength: 150
          minLength: 1
          type: string
      required:
      - name
      type: object
    SAMLMetadata:
      description: SAML Provider Metadata serializer
      example:
        metadata: metadata
        download_url: download_url
      properties:
        metadata:
          readOnly: true
          type: string
        download_url:
          readOnly: true
          type: string
      required:
      - download_url
      - metadata
      type: object
    SAMLPropertyMapping:
      description: SAMLPropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        friendly_name: friendly_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        saml_name: saml_name
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        saml_name:
          type: string
        friendly_name:
          nullable: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - saml_name
      - verbose_name
      - verbose_name_plural
      type: object
    SAMLPropertyMappingRequest:
      description: SAMLPropertyMapping Serializer
      example:
        friendly_name: friendly_name
        expression: expression
        managed: managed
        name: name
        saml_name: saml_name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
        saml_name:
          minLength: 1
          type: string
        friendly_name:
          nullable: true
          type: string
      required:
      - expression
      - name
      - saml_name
      type: object
    SAMLProvider:
      description: SAMLProvider Serializer
      example:
        url_sso_init: url_sso_init
        verbose_name_plural: verbose_name_plural
        url_slo_redirect: url_slo_redirect
        session_valid_not_on_or_after: session_valid_not_on_or_after
        default_relay_state: default_relay_state
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_application_slug: assigned_application_slug
        issuer: issuer
        url_sso_redirect: url_sso_redirect
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url_slo_post: url_slo_post
        assigned_application_name: assigned_application_name
        assigned_backchannel_application_name: assigned_backchannel_application_name
        signature_algorithm: null
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        audience: audience
        sign_response: true
        sp_binding: ""
        acs_url: https://openapi-generator.tech
        url_download_metadata: url_download_metadata
        assertion_valid_not_before: assertion_valid_not_before
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        authn_context_class_ref_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        digest_algorithm: null
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sign_assertion: true
        url_sso_post: url_sso_post
        name: name
        assertion_valid_not_on_or_after: assertion_valid_not_on_or_after
        verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 0
        name_id_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        acs_url:
          format: uri
          type: string
        audience:
          description: "Value of the audience restriction field of the assertion.\
            \ When left empty, no audience restriction will be added."
          type: string
        issuer:
          description: Also known as EntityID
          type: string
        assertion_valid_not_before:
          description: "Assertion valid not before current time + this value (Format:\
            \ hours=-1;minutes=-2;seconds=-3)."
          type: string
        assertion_valid_not_on_or_after:
          description: "Assertion not valid on or after current time + this value\
            \ (Format: hours=1;minutes=2;seconds=3)."
          type: string
        session_valid_not_on_or_after:
          description: "Session not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          type: string
        name_id_mapping:
          description: "Configure how the NameID value will be created. When left\
            \ empty, the NameIDPolicy of the incoming request will be considered"
          format: uuid
          nullable: true
          title: NameID Property Mapping
          type: string
        authn_context_class_ref_mapping:
          description: "Configure how the AuthnContextClassRef value will be created.\
            \ When left empty, the AuthnContextClassRef will be set based on which\
            \ authentication methods the user used to authenticate."
          format: uuid
          nullable: true
          title: AuthnContextClassRef Property Mapping
          type: string
        digest_algorithm:
          $ref: '#/components/schemas/DigestAlgorithmEnum'
        signature_algorithm:
          $ref: '#/components/schemas/SignatureAlgorithmEnum'
        signing_kp:
          description: Keypair used to sign outgoing Responses going to the Service
            Provider.
          format: uuid
          nullable: true
          title: Signing Keypair
          type: string
        verification_kp:
          description: "When selected, incoming assertion's Signatures will be validated\
            \ against this certificate. To allow unsigned Requests, leave on default."
          format: uuid
          nullable: true
          title: Verification Certificate
          type: string
        encryption_kp:
          description: "When selected, incoming assertions are encrypted by the IdP\
            \ using the public key of the encryption keypair. The assertion is decrypted\
            \ by the SP using the the private key."
          format: uuid
          nullable: true
          title: Encryption Keypair
          type: string
        sign_assertion:
          type: boolean
        sign_response:
          type: boolean
        sp_binding:
          allOf:
          - $ref: '#/components/schemas/SpBindingEnum'
          description: This determines how authentik sends the response back to the
            Service Provider.
          title: Service Provider Binding
        default_relay_state:
          description: Default relay_state value for IDP-initiated logins
          type: string
        url_download_metadata:
          description: Get metadata download URL
          readOnly: true
          type: string
        url_sso_post:
          description: Get SSO Post URL
          readOnly: true
          type: string
        url_sso_redirect:
          description: Get SSO Redirect URL
          readOnly: true
          type: string
        url_sso_init:
          description: Get SSO IDP-Initiated URL
          readOnly: true
          type: string
        url_slo_post:
          description: Get SLO POST URL
          readOnly: true
          type: string
        url_slo_redirect:
          description: Get SLO redirect URL
          readOnly: true
          type: string
      required:
      - acs_url
      - assigned_application_name
      - assigned_application_slug
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - authorization_flow
      - component
      - invalidation_flow
      - meta_model_name
      - name
      - pk
      - url_download_metadata
      - url_slo_post
      - url_slo_redirect
      - url_sso_init
      - url_sso_post
      - url_sso_redirect
      - verbose_name
      - verbose_name_plural
      type: object
    SAMLProviderImportRequest:
      description: Import saml provider from XML Metadata
      properties:
        name:
          minLength: 1
          type: string
        authorization_flow:
          format: uuid
          type: string
        invalidation_flow:
          format: uuid
          type: string
        file:
          format: binary
          type: string
      required:
      - authorization_flow
      - file
      - invalidation_flow
      - name
      type: object
    SAMLProviderRequest:
      description: SAMLProvider Serializer
      example:
        audience: audience
        sign_response: true
        session_valid_not_on_or_after: session_valid_not_on_or_after
        sp_binding: ""
        default_relay_state: default_relay_state
        invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        acs_url: https://openapi-generator.tech
        issuer: issuer
        assertion_valid_not_before: assertion_valid_not_before
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authn_context_class_ref_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        digest_algorithm: null
        authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sign_assertion: true
        name: name
        assertion_valid_not_on_or_after: assertion_valid_not_on_or_after
        signature_algorithm: null
        verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name_id_mapping: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          minLength: 1
          type: string
        authentication_flow:
          description: Flow used for authentication when the associated application
            is accessed by an un-authenticated user.
          format: uuid
          nullable: true
          type: string
        authorization_flow:
          description: Flow used when authorizing this provider.
          format: uuid
          type: string
        invalidation_flow:
          description: Flow used ending the session from a provider.
          format: uuid
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        acs_url:
          format: uri
          minLength: 1
          type: string
        audience:
          description: "Value of the audience restriction field of the assertion.\
            \ When left empty, no audience restriction will be added."
          type: string
        issuer:
          description: Also known as EntityID
          minLength: 1
          type: string
        assertion_valid_not_before:
          description: "Assertion valid not before current time + this value (Format:\
            \ hours=-1;minutes=-2;seconds=-3)."
          minLength: 1
          type: string
        assertion_valid_not_on_or_after:
          description: "Assertion not valid on or after current time + this value\
            \ (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        session_valid_not_on_or_after:
          description: "Session not valid on or after current time + this value (Format:\
            \ hours=1;minutes=2;seconds=3)."
          minLength: 1
          type: string
        name_id_mapping:
          description: "Configure how the NameID value will be created. When left\
            \ empty, the NameIDPolicy of the incoming request will be considered"
          format: uuid
          nullable: true
          title: NameID Property Mapping
          type: string
        authn_context_class_ref_mapping:
          description: "Configure how the AuthnContextClassRef value will be created.\
            \ When left empty, the AuthnContextClassRef will be set based on which\
            \ authentication methods the user used to authenticate."
          format: uuid
          nullable: true
          title: AuthnContextClassRef Property Mapping
          type: string
        digest_algorithm:
          $ref: '#/components/schemas/DigestAlgorithmEnum'
        signature_algorithm:
          $ref: '#/components/schemas/SignatureAlgorithmEnum'
        signing_kp:
          description: Keypair used to sign outgoing Responses going to the Service
            Provider.
          format: uuid
          nullable: true
          title: Signing Keypair
          type: string
        verification_kp:
          description: "When selected, incoming assertion's Signatures will be validated\
            \ against this certificate. To allow unsigned Requests, leave on default."
          format: uuid
          nullable: true
          title: Verification Certificate
          type: string
        encryption_kp:
          description: "When selected, incoming assertions are encrypted by the IdP\
            \ using the public key of the encryption keypair. The assertion is decrypted\
            \ by the SP using the the private key."
          format: uuid
          nullable: true
          title: Encryption Keypair
          type: string
        sign_assertion:
          type: boolean
        sign_response:
          type: boolean
        sp_binding:
          allOf:
          - $ref: '#/components/schemas/SpBindingEnum'
          description: This determines how authentik sends the response back to the
            Service Provider.
          title: Service Provider Binding
        default_relay_state:
          description: Default relay_state value for IDP-initiated logins
          type: string
      required:
      - acs_url
      - authorization_flow
      - invalidation_flow
      - name
      type: object
    SAMLSource:
      description: SAMLSource Serializer
      example:
        allow_idp_initiated: true
        user_matching_mode: ""
        verbose_name_plural: verbose_name_plural
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        icon: icon
        sso_url: https://openapi-generator.tech
        enabled: true
        issuer: issuer
        managed: managed
        name_id_policy: ""
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        signature_algorithm: null
        slug: slug
        signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        binding_type: null
        user_path_template: user_path_template
        slo_url: https://openapi-generator.tech
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        digest_algorithm: null
        meta_model_name: meta_model_name
        pre_authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        temporary_user_delete_after: temporary_user_delete_after
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Source's display Name.
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
        user_path_template:
          type: string
        icon:
          readOnly: true
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        pre_authentication_flow:
          description: Flow used before authentication.
          format: uuid
          type: string
        issuer:
          description: Also known as Entity ID. Defaults the Metadata URL.
          type: string
        sso_url:
          description: URL that the initial Login request is sent to.
          format: uri
          type: string
        slo_url:
          description: Optional URL if your IDP supports Single-Logout.
          format: uri
          nullable: true
          type: string
        allow_idp_initiated:
          description: "Allows authentication flows initiated by the IdP. This can\
            \ be a security risk, as no validation of the request ID is done."
          type: boolean
        name_id_policy:
          allOf:
          - $ref: '#/components/schemas/NameIdPolicyEnum'
          description: "NameID Policy sent to the IdP. Can be unset, in which case\
            \ no Policy is sent."
        binding_type:
          $ref: '#/components/schemas/BindingTypeEnum'
        verification_kp:
          description: "When selected, incoming assertion's Signatures will be validated\
            \ against this certificate. To allow unsigned Requests, leave on default."
          format: uuid
          nullable: true
          title: Verification Certificate
          type: string
        signing_kp:
          description: Keypair used to sign outgoing Responses going to the Identity
            Provider.
          format: uuid
          nullable: true
          title: Signing Keypair
          type: string
        digest_algorithm:
          $ref: '#/components/schemas/DigestAlgorithmEnum'
        signature_algorithm:
          $ref: '#/components/schemas/SignatureAlgorithmEnum'
        temporary_user_delete_after:
          description: "Time offset when temporary users should be deleted. This only\
            \ applies if your IDP uses the NameID Format 'transient', and the user\
            \ doesn't log out manually. (Format: hours=1;minutes=2;seconds=3)."
          title: Delete temporary users after
          type: string
        encryption_kp:
          description: "When selected, incoming assertions are encrypted by the IdP\
            \ using the public key of the encryption keypair. The assertion is decrypted\
            \ by the SP using the the private key."
          format: uuid
          nullable: true
          title: Encryption Keypair
          type: string
      required:
      - component
      - icon
      - managed
      - meta_model_name
      - name
      - pk
      - pre_authentication_flow
      - slug
      - sso_url
      - verbose_name
      - verbose_name_plural
      type: object
    SAMLSourcePropertyMapping:
      description: SAMLSourcePropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    SAMLSourcePropertyMappingRequest:
      description: SAMLSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    SAMLSourceRequest:
      description: SAMLSource Serializer
      example:
        binding_type: null
        allow_idp_initiated: true
        user_matching_mode: ""
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slo_url: https://openapi-generator.tech
        sso_url: https://openapi-generator.tech
        enabled: true
        issuer: issuer
        group_matching_mode: ""
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        digest_algorithm: null
        pre_authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryption_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name_id_policy: ""
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verification_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        signature_algorithm: null
        slug: slug
        signing_kp: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        temporary_user_delete_after: temporary_user_delete_after
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
        group_matching_mode:
          allOf:
          - $ref: '#/components/schemas/GroupMatchingModeEnum'
          description: How the source determines if an existing group should be used
            or a new group created.
        pre_authentication_flow:
          description: Flow used before authentication.
          format: uuid
          type: string
        issuer:
          description: Also known as Entity ID. Defaults the Metadata URL.
          type: string
        sso_url:
          description: URL that the initial Login request is sent to.
          format: uri
          minLength: 1
          type: string
        slo_url:
          description: Optional URL if your IDP supports Single-Logout.
          format: uri
          nullable: true
          type: string
        allow_idp_initiated:
          description: "Allows authentication flows initiated by the IdP. This can\
            \ be a security risk, as no validation of the request ID is done."
          type: boolean
        name_id_policy:
          allOf:
          - $ref: '#/components/schemas/NameIdPolicyEnum'
          description: "NameID Policy sent to the IdP. Can be unset, in which case\
            \ no Policy is sent."
        binding_type:
          $ref: '#/components/schemas/BindingTypeEnum'
        verification_kp:
          description: "When selected, incoming assertion's Signatures will be validated\
            \ against this certificate. To allow unsigned Requests, leave on default."
          format: uuid
          nullable: true
          title: Verification Certificate
          type: string
        signing_kp:
          description: Keypair used to sign outgoing Responses going to the Identity
            Provider.
          format: uuid
          nullable: true
          title: Signing Keypair
          type: string
        digest_algorithm:
          $ref: '#/components/schemas/DigestAlgorithmEnum'
        signature_algorithm:
          $ref: '#/components/schemas/SignatureAlgorithmEnum'
        temporary_user_delete_after:
          description: "Time offset when temporary users should be deleted. This only\
            \ applies if your IDP uses the NameID Format 'transient', and the user\
            \ doesn't log out manually. (Format: hours=1;minutes=2;seconds=3)."
          minLength: 1
          title: Delete temporary users after
          type: string
        encryption_kp:
          description: "When selected, incoming assertions are encrypted by the IdP\
            \ using the public key of the encryption keypair. The assertion is decrypted\
            \ by the SP using the the private key."
          format: uuid
          nullable: true
          title: Encryption Keypair
          type: string
      required:
      - name
      - pre_authentication_flow
      - slug
      - sso_url
      type: object
    SCIMMapping:
      description: SCIMMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    SCIMMappingRequest:
      description: SCIMMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    SCIMProvider:
      description: SCIMProvider Serializer
      example:
        compatibility_mode: ""
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        verbose_name_plural: verbose_name_plural
        url: url
        token: token
        exclude_users_service_account: true
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        assigned_backchannel_application_slug: assigned_backchannel_application_slug
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assigned_backchannel_application_name: assigned_backchannel_application_name
        name: name
        dry_run: true
        pk: 0
        verify_certificates: true
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        assigned_backchannel_application_slug:
          description: "Internal application name, used in URLs."
          readOnly: true
          type: string
        assigned_backchannel_application_name:
          description: Application's display Name.
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        url:
          description: "Base URL to SCIM requests, usually ends in /v2"
          type: string
        verify_certificates:
          type: boolean
        token:
          description: Authentication token
          type: string
        compatibility_mode:
          allOf:
          - $ref: '#/components/schemas/CompatibilityModeEnum'
          description: Alter authentik behavior for vendor-specific SCIM implementations.
          title: SCIM Compatibility Mode
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      required:
      - assigned_backchannel_application_name
      - assigned_backchannel_application_slug
      - component
      - meta_model_name
      - name
      - pk
      - token
      - url
      - verbose_name
      - verbose_name_plural
      type: object
    SCIMProviderGroup:
      description: SCIMProviderGroup Serializer
      example:
        scim_id: scim_id
        provider: 0
        group_obj: ""
        attributes:
          key: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        scim_id:
          type: string
        group:
          format: uuid
          type: string
        group_obj:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          readOnly: true
        provider:
          type: integer
        attributes:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - attributes
      - group
      - group_obj
      - id
      - provider
      - scim_id
      type: object
    SCIMProviderGroupRequest:
      description: SCIMProviderGroup Serializer
      example:
        scim_id: scim_id
        provider: 0
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        scim_id:
          minLength: 1
          type: string
        group:
          format: uuid
          type: string
        provider:
          type: integer
      required:
      - group
      - provider
      - scim_id
      type: object
    SCIMProviderRequest:
      description: SCIMProvider Serializer
      example:
        compatibility_mode: ""
        property_mappings_group:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        filter_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        dry_run: true
        verify_certificates: true
        property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url: url
        token: token
        exclude_users_service_account: true
      properties:
        name:
          minLength: 1
          type: string
        property_mappings:
          items:
            format: uuid
            type: string
          type: array
        property_mappings_group:
          description: Property mappings used for group creation/updating.
          items:
            format: uuid
            type: string
          type: array
        url:
          description: "Base URL to SCIM requests, usually ends in /v2"
          minLength: 1
          type: string
        verify_certificates:
          type: boolean
        token:
          description: Authentication token
          minLength: 1
          type: string
        compatibility_mode:
          allOf:
          - $ref: '#/components/schemas/CompatibilityModeEnum'
          description: Alter authentik behavior for vendor-specific SCIM implementations.
          title: SCIM Compatibility Mode
        exclude_users_service_account:
          type: boolean
        filter_group:
          format: uuid
          nullable: true
          type: string
        dry_run:
          description: "When enabled, provider will not modify or create objects in\
            \ the remote system."
          type: boolean
      required:
      - name
      - token
      - url
      type: object
    SCIMProviderUser:
      description: SCIMProviderUser Serializer
      example:
        scim_id: scim_id
        user_obj: ""
        provider: 6
        attributes:
          key: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        scim_id:
          type: string
        user:
          type: integer
        user_obj:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
        provider:
          type: integer
        attributes:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - attributes
      - id
      - provider
      - scim_id
      - user
      - user_obj
      type: object
    SCIMProviderUserRequest:
      description: SCIMProviderUser Serializer
      example:
        scim_id: scim_id
        provider: 6
        user: 0
      properties:
        scim_id:
          minLength: 1
          type: string
        user:
          type: integer
        provider:
          type: integer
      required:
      - provider
      - scim_id
      - user
      type: object
    SCIMSource:
      description: SCIMSource Serializer
      example:
        root_url: root_url
        token_obj: ""
        verbose_name_plural: verbose_name_plural
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enabled: true
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        managed: managed
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Source's display Name.
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
        user_path_template:
          type: string
        root_url:
          description: Get Root URL
          readOnly: true
          type: string
        token_obj:
          allOf:
          - $ref: '#/components/schemas/Token'
          readOnly: true
      required:
      - component
      - managed
      - meta_model_name
      - name
      - pk
      - root_url
      - slug
      - token_obj
      - verbose_name
      - verbose_name_plural
      type: object
    SCIMSourceGroup:
      description: SCIMSourceGroup Serializer
      example:
        group_obj: ""
        attributes:
          key: ""
        id: id
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          type: string
        group:
          format: uuid
          type: string
        group_obj:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          readOnly: true
        source:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - group
      - group_obj
      - id
      - source
      type: object
    SCIMSourceGroupRequest:
      description: SCIMSourceGroup Serializer
      example:
        attributes:
          key: ""
        id: id
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          minLength: 1
          type: string
        group:
          format: uuid
          type: string
        source:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - group
      - id
      - source
      type: object
    SCIMSourcePropertyMapping:
      description: SCIMSourcePropertyMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    SCIMSourcePropertyMappingRequest:
      description: SCIMSourcePropertyMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - expression
      - name
      type: object
    SCIMSourceRequest:
      description: SCIMSource Serializer
      example:
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
        enabled: true
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        user_path_template:
          minLength: 1
          type: string
      required:
      - name
      - slug
      type: object
    SCIMSourceUser:
      description: SCIMSourceUser Serializer
      example:
        user_obj: ""
        attributes:
          key: ""
        id: id
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        id:
          type: string
        user:
          type: integer
        user_obj:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
        source:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - id
      - source
      - user
      - user_obj
      type: object
    SCIMSourceUserRequest:
      description: SCIMSourceUser Serializer
      example:
        attributes:
          key: ""
        id: id
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        id:
          minLength: 1
          type: string
        user:
          type: integer
        source:
          format: uuid
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - id
      - source
      - user
      type: object
    SMSDevice:
      description: Serializer for sms authenticator devices
      example:
        name: name
        phone_number: phone_number
        pk: 0
        user: ""
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          type: string
        pk:
          readOnly: true
          title: ID
          type: integer
        phone_number:
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
      required:
      - name
      - phone_number
      - pk
      - user
      type: object
    SMSDeviceRequest:
      description: Serializer for sms authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - name
      type: object
    SSFProvider:
      description: SSFProvider Serializer
      example:
        component: component
        verbose_name: verbose_name
        token_obj: ""
        ssf_url: ssf_url
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oidc_auth_providers:
        - 6
        - 6
        name: name
        pk: 0
        event_retention: event_retention
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          type: string
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        signing_key:
          description: Key used to sign the SSF Events.
          format: uuid
          type: string
        token_obj:
          allOf:
          - $ref: '#/components/schemas/Token'
          readOnly: true
        oidc_auth_providers:
          items:
            type: integer
          type: array
        ssf_url:
          nullable: true
          readOnly: true
          type: string
        event_retention:
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - signing_key
      - ssf_url
      - token_obj
      - verbose_name
      - verbose_name_plural
      type: object
    SSFProviderRequest:
      description: SSFProvider Serializer
      example:
        signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oidc_auth_providers:
        - 0
        - 0
        name: name
        event_retention: event_retention
      properties:
        name:
          minLength: 1
          type: string
        signing_key:
          description: Key used to sign the SSF Events.
          format: uuid
          type: string
        oidc_auth_providers:
          items:
            type: integer
          type: array
        event_retention:
          minLength: 1
          type: string
      required:
      - name
      - signing_key
      type: object
    SSFStream:
      description: SSFStream Serializer
      example:
        aud:
        - aud
        - aud
        provider_obj: ""
        endpoint_url: endpoint_url
        provider: 0
        delivery_method: null
        format: format
        iss: iss
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        events_requested:
        - null
        - null
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        provider:
          type: integer
        provider_obj:
          allOf:
          - $ref: '#/components/schemas/SSFProvider'
          readOnly: true
        delivery_method:
          $ref: '#/components/schemas/DeliveryMethodEnum'
        endpoint_url:
          nullable: true
          type: string
        events_requested:
          items:
            $ref: '#/components/schemas/EventsRequestedEnum'
          type: array
        format:
          type: string
        aud:
          items:
            type: string
          type: array
        iss:
          type: string
      required:
      - delivery_method
      - format
      - iss
      - pk
      - provider
      - provider_obj
      type: object
    ScopeMapping:
      description: ScopeMapping Serializer
      example:
        component: component
        verbose_name: verbose_name
        expression: expression
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        managed: managed
        name: name
        description: description
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scope_name: scope_name
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pm uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        name:
          type: string
        expression:
          type: string
        component:
          description: Get object's component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        scope_name:
          description: Scope name requested by the client
          type: string
        description:
          description: "Description shown to the user when consenting. If left empty,\
            \ the user won't be informed."
          type: string
      required:
      - component
      - expression
      - meta_model_name
      - name
      - pk
      - scope_name
      - verbose_name
      - verbose_name_plural
      type: object
    ScopeMappingRequest:
      description: ScopeMapping Serializer
      example:
        expression: expression
        managed: managed
        name: name
        description: description
        scope_name: scope_name
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        name:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
        scope_name:
          description: Scope name requested by the client
          minLength: 1
          type: string
        description:
          description: "Description shown to the user when consenting. If left empty,\
            \ the user won't be informed."
          type: string
      required:
      - expression
      - name
      - scope_name
      type: object
    SelectableStage:
      description: Serializer for stages which can be selected by users
      properties:
        pk:
          format: uuid
          type: string
        name:
          type: string
        verbose_name:
          type: string
        meta_model_name:
          type: string
      required:
      - meta_model_name
      - name
      - pk
      - verbose_name
      type: object
    ServiceConnection:
      description: ServiceConnection Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        local: true
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Uuid
          type: string
        name:
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
        component:
          description: Return component used to edit this object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    ServiceConnectionRequest:
      description: ServiceConnection Serializer
      properties:
        name:
          minLength: 1
          type: string
        local:
          description: "If enabled, use the local connection. Required Docker socket/Kubernetes\
            \ Integration"
          type: boolean
      required:
      - name
      type: object
    ServiceConnectionState:
      description: Serializer for Service connection state
      example:
        healthy: true
        version: version
      properties:
        healthy:
          readOnly: true
          type: boolean
        version:
          readOnly: true
          type: string
      required:
      - healthy
      - version
      type: object
    SessionEndChallenge:
      description: Challenge for ending a session
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-session-end
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
        application_name:
          type: string
        application_launch_url:
          type: string
        invalidation_flow_url:
          type: string
        brand_name:
          type: string
      required:
      - brand_name
      - pending_user
      - pending_user_avatar
      type: object
    SessionUser:
      description: |-
        Response for the /user/me endpoint, returns the currently active user (as `user` property)
        and, if this user is being impersonated, the original user in the `original` property.
      example:
        original:
          uid: uid
          settings:
            key: ""
          is_active: true
          is_superuser: true
          name: name
          groups:
          - name: name
            pk: pk
          - name: name
            pk: pk
          system_permissions:
          - system_permissions
          - system_permissions
          pk: 0
          avatar: avatar
          type: null
          email: email
          username: username
        user:
          uid: uid
          settings:
            key: ""
          is_active: true
          is_superuser: true
          name: name
          groups:
          - name: name
            pk: pk
          - name: name
            pk: pk
          system_permissions:
          - system_permissions
          - system_permissions
          pk: 0
          avatar: avatar
          type: null
          email: email
          username: username
      properties:
        user:
          $ref: '#/components/schemas/UserSelf'
        original:
          $ref: '#/components/schemas/UserSelf'
      required:
      - user
      type: object
    Settings:
      description: Settings Serializer
      example:
        reputation_upper_limit: 1294386358
        default_user_change_name: true
        impersonation: true
        default_token_duration: default_token_duration
        default_token_length: 314780941
        event_retention: event_retention
        default_user_change_email: true
        reputation_lower_limit: -1975507103
        impersonation_require_reason: true
        default_user_change_username: true
        footer_links: ""
        gdpr_compliance: true
        avatars: avatars
      properties:
        avatars:
          description: Configure how authentik should show avatars for users.
          type: string
        default_user_change_name:
          description: Enable the ability for users to change their name.
          type: boolean
        default_user_change_email:
          description: Enable the ability for users to change their email address.
          type: boolean
        default_user_change_username:
          description: Enable the ability for users to change their username.
          type: boolean
        event_retention:
          description: "Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2)."
          type: string
        reputation_lower_limit:
          description: Reputation cannot decrease lower than this value. Zero or negative.
          maximum: 0
          minimum: -2147483648
          type: integer
        reputation_upper_limit:
          description: Reputation cannot increase higher than this value. Zero or
            positive.
          maximum: 2147483647
          minimum: 0
          type: integer
        footer_links: {}
        gdpr_compliance:
          description: "When enabled, all the events caused by a user will be deleted\
            \ upon the user's deletion."
          type: boolean
        impersonation:
          description: Globally enable/disable impersonation.
          type: boolean
        impersonation_require_reason:
          description: Require administrators to provide a reason for impersonating
            a user.
          type: boolean
        default_token_duration:
          description: Default token duration
          type: string
        default_token_length:
          description: Default token length
          maximum: 2147483647
          minimum: 1
          type: integer
      type: object
    SettingsRequest:
      description: Settings Serializer
      example:
        reputation_upper_limit: 1294386358
        default_user_change_name: true
        impersonation: true
        default_token_duration: default_token_duration
        default_token_length: 314780941
        event_retention: event_retention
        default_user_change_email: true
        reputation_lower_limit: -1975507103
        impersonation_require_reason: true
        default_user_change_username: true
        footer_links: ""
        gdpr_compliance: true
        avatars: avatars
      properties:
        avatars:
          description: Configure how authentik should show avatars for users.
          minLength: 1
          type: string
        default_user_change_name:
          description: Enable the ability for users to change their name.
          type: boolean
        default_user_change_email:
          description: Enable the ability for users to change their email address.
          type: boolean
        default_user_change_username:
          description: Enable the ability for users to change their username.
          type: boolean
        event_retention:
          description: "Events will be deleted after this duration.(Format: weeks=3;days=2;hours=3,seconds=2)."
          minLength: 1
          type: string
        reputation_lower_limit:
          description: Reputation cannot decrease lower than this value. Zero or negative.
          maximum: 0
          minimum: -2147483648
          type: integer
        reputation_upper_limit:
          description: Reputation cannot increase higher than this value. Zero or
            positive.
          maximum: 2147483647
          minimum: 0
          type: integer
        footer_links: {}
        gdpr_compliance:
          description: "When enabled, all the events caused by a user will be deleted\
            \ upon the user's deletion."
          type: boolean
        impersonation:
          description: Globally enable/disable impersonation.
          type: boolean
        impersonation_require_reason:
          description: Require administrators to provide a reason for impersonating
            a user.
          type: boolean
        default_token_duration:
          description: Default token duration
          minLength: 1
          type: string
        default_token_length:
          description: Default token length
          maximum: 2147483647
          minimum: 1
          type: integer
      type: object
    SeverityEnum:
      enum:
      - notice
      - warning
      - alert
      type: string
    ShellChallenge:
      description: challenge type to render HTML as-is
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: xak-flow-shell
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        body:
          type: string
      required:
      - body
      type: object
    SignatureAlgorithmEnum:
      enum:
      - http://www.w3.org/2000/09/xmldsig#rsa-sha1
      - http://www.w3.org/2001/04/xmldsig-more#rsa-sha256
      - http://www.w3.org/2001/04/xmldsig-more#rsa-sha384
      - http://www.w3.org/2001/04/xmldsig-more#rsa-sha512
      - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1
      - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256
      - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384
      - http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512
      - http://www.w3.org/2000/09/xmldsig#dsa-sha1
      type: string
    Source:
      description: Source Serializer
      example:
        user_matching_mode: ""
        verbose_name_plural: verbose_name_plural
        user_path_template: user_path_template
        group_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        icon: icon
        enabled: true
        authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policy_engine_mode: null
        enrollment_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        component: component
        verbose_name: verbose_name
        meta_model_name: meta_model_name
        managed: managed
        name: name
        user_property_mappings:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Pbm uuid
          type: string
        name:
          description: Source's display Name.
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          readOnly: true
          title: Managed by authentik
          type: string
        user_path_template:
          type: string
        icon:
          description: |-
            Get the URL to the Icon. If the name is /static or
            starts with http it is returned as-is
          nullable: true
          readOnly: true
          type: string
      required:
      - component
      - icon
      - managed
      - meta_model_name
      - name
      - pk
      - slug
      - verbose_name
      - verbose_name_plural
      type: object
    SourceRequest:
      description: Source Serializer
      properties:
        name:
          description: Source's display Name.
          minLength: 1
          type: string
        slug:
          description: "Internal source name, used in URLs."
          maxLength: 50
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        enabled:
          type: boolean
        authentication_flow:
          description: Flow to use when authenticating existing users.
          format: uuid
          nullable: true
          type: string
        enrollment_flow:
          description: Flow to use when enrolling new users.
          format: uuid
          nullable: true
          type: string
        user_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        group_property_mappings:
          items:
            format: uuid
            type: string
          type: array
        policy_engine_mode:
          $ref: '#/components/schemas/PolicyEngineMode'
        user_matching_mode:
          allOf:
          - $ref: '#/components/schemas/UserMatchingModeEnum'
          description: How the source determines if an existing user should be authenticated
            or a new user enrolled.
        user_path_template:
          minLength: 1
          type: string
      required:
      - name
      - slug
      type: object
    SourceStage:
      description: SourceStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        resume_timeout: resume_timeout
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        source:
          format: uuid
          type: string
        resume_timeout:
          description: "Amount of time a user can take to return from the source to\
            \ continue the flow (Format: hours=-1;minutes=-2;seconds=-3)"
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - source
      - verbose_name
      - verbose_name_plural
      type: object
    SourceStageRequest:
      description: SourceStage Serializer
      example:
        resume_timeout: resume_timeout
        name: name
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        source:
          format: uuid
          type: string
        resume_timeout:
          description: "Amount of time a user can take to return from the source to\
            \ continue the flow (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
      required:
      - name
      - source
      type: object
    SourceType:
      description: Serializer for SourceType
      example:
        oidc_well_known_url: oidc_well_known_url
        verbose_name: verbose_name
        oidc_jwks_url: oidc_jwks_url
        request_token_url: request_token_url
        profile_url: profile_url
        authorization_url: authorization_url
        name: name
        urls_customizable: true
        access_token_url: access_token_url
      properties:
        name:
          type: string
        verbose_name:
          type: string
        urls_customizable:
          type: boolean
        request_token_url:
          nullable: true
          readOnly: true
          type: string
        authorization_url:
          nullable: true
          readOnly: true
          type: string
        access_token_url:
          nullable: true
          readOnly: true
          type: string
        profile_url:
          nullable: true
          readOnly: true
          type: string
        oidc_well_known_url:
          nullable: true
          readOnly: true
          type: string
        oidc_jwks_url:
          nullable: true
          readOnly: true
          type: string
      required:
      - access_token_url
      - authorization_url
      - name
      - oidc_jwks_url
      - oidc_well_known_url
      - profile_url
      - request_token_url
      - urls_customizable
      - verbose_name
      type: object
    SpBindingEnum:
      enum:
      - redirect
      - post
      type: string
    Stage:
      description: Stage Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    StagePrompt:
      description: Serializer for a single Prompt field
      example:
        sub_text: sub_text
        initial_value: initial_value
        field_key: field_key
        label: label
        placeholder: placeholder
        type: null
        choices:
        - choices
        - choices
        required: true
        order: 0
      properties:
        field_key:
          type: string
        label:
          type: string
        type:
          $ref: '#/components/schemas/PromptTypeEnum'
        required:
          type: boolean
        placeholder:
          type: string
        initial_value:
          type: string
        order:
          type: integer
        sub_text:
          type: string
        choices:
          items:
            type: string
          nullable: true
          type: array
      required:
      - choices
      - field_key
      - initial_value
      - label
      - order
      - placeholder
      - required
      - sub_text
      - type
      type: object
    StageRequest:
      description: Stage Serializer
      example:
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
      required:
      - name
      type: object
    StaticDevice:
      description: Serializer for static authenticator devices
      example:
        name: name
        token_set:
        - token: token
        - token: token
        pk: 0
        user: ""
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          type: string
        token_set:
          items:
            $ref: '#/components/schemas/StaticDeviceToken'
          readOnly: true
          type: array
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
      required:
      - name
      - pk
      - token_set
      - user
      type: object
    StaticDeviceRequest:
      description: Serializer for static authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - name
      type: object
    StaticDeviceToken:
      description: Serializer for static device's tokens
      example:
        token: token
      properties:
        token:
          maxLength: 16
          type: string
      required:
      - token
      type: object
    StaticDeviceTokenRequest:
      description: Serializer for static device's tokens
      properties:
        token:
          maxLength: 16
          minLength: 1
          type: string
      required:
      - token
      type: object
    SubModeEnum:
      enum:
      - hashed_user_id
      - user_id
      - user_uuid
      - user_username
      - user_email
      - user_upn
      type: string
    SyncObjectModelEnum:
      enum:
      - authentik.core.models.User
      - authentik.core.models.Group
      type: string
    SyncObjectRequest:
      description: Sync object serializer
      example:
        sync_object_model: null
        override_dry_run: false
        sync_object_id: sync_object_id
      properties:
        sync_object_model:
          $ref: '#/components/schemas/SyncObjectModelEnum'
        sync_object_id:
          minLength: 1
          type: string
        override_dry_run:
          default: false
          type: boolean
      required:
      - sync_object_id
      - sync_object_model
      type: object
    SyncObjectResult:
      description: Result of a single object sync
      example:
        messages:
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        messages:
          items:
            $ref: '#/components/schemas/LogEvent'
          readOnly: true
          type: array
      required:
      - messages
      type: object
    SyncStatus:
      description: Provider sync status
      example:
        is_running: true
        tasks:
        - duration: 0.8008281904610115
          uid: uid
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          full_name: full_name
          start_timestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finish_timestamp: 2000-01-23T04:56:07.000+00:00
          status: null
        - duration: 0.8008281904610115
          uid: uid
          expires: 2000-01-23T04:56:07.000+00:00
          expiring: true
          full_name: full_name
          start_timestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          messages:
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          - logger: logger
            log_level: null
            attributes:
              key: ""
            event: event
            timestamp: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finish_timestamp: 2000-01-23T04:56:07.000+00:00
          status: null
      properties:
        is_running:
          readOnly: true
          type: boolean
        tasks:
          items:
            $ref: '#/components/schemas/SystemTask'
          readOnly: true
          type: array
      required:
      - is_running
      - tasks
      type: object
    SystemInfo:
      description: Get system information.
      example:
        server_time: 2000-01-23T04:56:07.000+00:00
        http_headers:
          key: http_headers
        runtime:
          environment: environment
          uname: uname
          openssl_version: openssl_version
          python_version: python_version
          openssl_fips_enabled: true
          authentik_version: authentik_version
          platform: platform
          architecture: architecture
        embedded_outpost_host: embedded_outpost_host
        http_host: http_host
        brand: brand
        http_is_secure: true
        embedded_outpost_disabled: true
      properties:
        http_headers:
          additionalProperties:
            type: string
          description: Get HTTP Request headers
          readOnly: true
          type: object
        http_host:
          description: Get HTTP host
          readOnly: true
          type: string
        http_is_secure:
          description: Get HTTP Secure flag
          readOnly: true
          type: boolean
        runtime:
          $ref: '#/components/schemas/SystemInfo_runtime'
        brand:
          description: Currently active brand
          readOnly: true
          type: string
        server_time:
          description: Current server time
          format: date-time
          readOnly: true
          type: string
        embedded_outpost_disabled:
          description: Whether the embedded outpost is disabled
          readOnly: true
          type: boolean
        embedded_outpost_host:
          description: Get the FQDN configured on the embedded outpost
          readOnly: true
          type: string
      required:
      - brand
      - embedded_outpost_disabled
      - embedded_outpost_host
      - http_headers
      - http_host
      - http_is_secure
      - runtime
      - server_time
      type: object
    SystemTask:
      description: Serialize TaskInfo and TaskResult
      example:
        duration: 0.8008281904610115
        uid: uid
        expires: 2000-01-23T04:56:07.000+00:00
        expiring: true
        full_name: full_name
        start_timestamp: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        messages:
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
        - logger: logger
          log_level: null
          attributes:
            key: ""
          event: event
          timestamp: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        finish_timestamp: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        full_name:
          description: Get full name with UID
          readOnly: true
          type: string
        uid:
          type: string
        description:
          type: string
        start_timestamp:
          format: date-time
          readOnly: true
          type: string
        finish_timestamp:
          format: date-time
          readOnly: true
          type: string
        duration:
          format: double
          readOnly: true
          type: number
        status:
          $ref: '#/components/schemas/SystemTaskStatusEnum'
        messages:
          items:
            $ref: '#/components/schemas/LogEvent'
          type: array
        expires:
          format: date-time
          nullable: true
          type: string
        expiring:
          type: boolean
      required:
      - description
      - duration
      - finish_timestamp
      - full_name
      - messages
      - name
      - start_timestamp
      - status
      - uuid
      type: object
    SystemTaskStatusEnum:
      enum:
      - unknown
      - successful
      - warning
      - error
      type: string
    TOTPDevice:
      description: Serializer for totp authenticator devices
      example:
        name: name
        pk: 0
        user: ""
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          type: string
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
      required:
      - name
      - pk
      - user
      type: object
    TOTPDeviceRequest:
      description: Serializer for totp authenticator devices
      example:
        name: name
      properties:
        name:
          description: The human-readable name of this device.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - name
      type: object
    Tenant:
      description: Tenant Serializer
      example:
        tenant_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ready: true
        name: name
        schema_name: schema_name
      properties:
        tenant_uuid:
          format: uuid
          readOnly: true
          type: string
        schema_name:
          maxLength: 63
          type: string
        name:
          type: string
        ready:
          type: boolean
      required:
      - name
      - schema_name
      - tenant_uuid
      type: object
    TenantAdminGroupRequestRequest:
      description: Tenant admin group creation request serializer
      example:
        user: user
      properties:
        user:
          minLength: 1
          type: string
      required:
      - user
      type: object
    TenantRecoveryKeyRequestRequest:
      description: Tenant recovery key creation request serializer
      example:
        duration_days: 0
        user: user
      properties:
        user:
          minLength: 1
          type: string
        duration_days:
          type: integer
      required:
      - duration_days
      - user
      type: object
    TenantRecoveryKeyResponse:
      description: Tenant recovery key creation response serializer
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        url: url
      properties:
        expiry:
          format: date-time
          type: string
        url:
          type: string
      required:
      - expiry
      - url
      type: object
    TenantRequest:
      description: Tenant Serializer
      example:
        ready: true
        name: name
        schema_name: schema_name
      properties:
        schema_name:
          maxLength: 63
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        ready:
          type: boolean
      required:
      - name
      - schema_name
      type: object
    Token:
      description: Token Serializer
      example:
        identifier: identifier
        user_obj: ""
        expires: 2000-01-23T04:56:07.000+00:00
        expiring: true
        managed: managed
        description: description
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        intent: null
        user: 0
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Token uuid
          type: string
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          nullable: true
          title: Managed by authentik
          type: string
        identifier:
          maxLength: 255
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        intent:
          $ref: '#/components/schemas/IntentEnum'
        user:
          type: integer
        user_obj:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        description:
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        expiring:
          type: boolean
      required:
      - identifier
      - pk
      - user_obj
      type: object
    TokenModel:
      description: Serializer for BaseGrantModel and RefreshToken
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        is_expired: true
        provider:
          verbose_name_plural: verbose_name_plural
          signing_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          assigned_application_slug: assigned_application_slug
          client_type: ""
          sub_mode: ""
          client_id: client_id
          jwt_federation_sources:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          refresh_token_validity: refresh_token_validity
          authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          access_code_validity: access_code_validity
          assigned_application_name: assigned_application_name
          assigned_backchannel_application_name: assigned_backchannel_application_name
          issuer_mode: ""
          client_secret: client_secret
          jwt_federation_providers:
          - 1
          - 1
          property_mappings:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redirect_uris:
          - matching_mode: null
            url: url
          - matching_mode: null
            url: url
          authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          component: component
          verbose_name: verbose_name
          meta_model_name: meta_model_name
          include_claims_in_id_token: true
          assigned_backchannel_application_slug: assigned_backchannel_application_slug
          access_token_validity: access_token_validity
          name: name
          encryption_key: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 6
        scope:
        - scope
        - scope
        id_token: id_token
        pk: 0
        revoked: true
        user:
          is_active: true
          is_superuser: true
          last_login: 2000-01-23T04:56:07.000+00:00
          password_change_date: 2000-01-23T04:56:07.000+00:00
          groups:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: avatar
          type: null
          groups_obj:
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uid: uid
          path: path
          name: name
          attributes:
            key: ""
          pk: 6
          date_joined: 2000-01-23T04:56:07.000+00:00
          email: email
          username: username
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        provider:
          $ref: '#/components/schemas/OAuth2Provider'
        user:
          $ref: '#/components/schemas/User'
        is_expired:
          description: Check if token is expired yet.
          readOnly: true
          type: boolean
        expires:
          format: date-time
          nullable: true
          type: string
        scope:
          items:
            type: string
          type: array
        id_token:
          description: Get the token's id_token as JSON String
          readOnly: true
          type: string
        revoked:
          type: boolean
      required:
      - id_token
      - is_expired
      - pk
      - provider
      - scope
      - user
      type: object
    TokenRequest:
      description: Token Serializer
      example:
        identifier: identifier
        expires: 2000-01-23T04:56:07.000+00:00
        expiring: true
        managed: managed
        description: description
        intent: null
        user: 0
      properties:
        managed:
          description: "Objects that are managed by authentik. These objects are created\
            \ and updated automatically. This flag only indicates that an object can\
            \ be overwritten by migrations. You can still modify the objects via the\
            \ API, but expect changes to be overwritten in a later update."
          minLength: 1
          nullable: true
          title: Managed by authentik
          type: string
        identifier:
          maxLength: 255
          minLength: 1
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        intent:
          $ref: '#/components/schemas/IntentEnum'
        user:
          type: integer
        description:
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        expiring:
          type: boolean
      required:
      - identifier
      type: object
    TokenSetKeyRequest:
      example:
        key: key
      properties:
        key:
          minLength: 1
          type: string
      required:
      - key
      type: object
    TokenView:
      description: Show token's current key
      example:
        key: key
      properties:
        key:
          readOnly: true
          type: string
      required:
      - key
      type: object
    TransactionApplicationRequest:
      description: Serializer for creating a provider and an application in one transaction
      example:
        app:
          policy_engine_mode: null
          meta_description: meta_description
          backchannel_providers:
          - 6
          - 6
          provider: 0
          open_in_new_tab: true
          name: name
          meta_launch_url: https://openapi-generator.tech
          slug: slug
          meta_publisher: meta_publisher
          group: group
        provider_model: null
        provider: null
        policy_bindings:
        - negate: true
          failure_result: true
          user: 0
          enabled: true
          timeout: 314780940
          policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 441289069
        - negate: true
          failure_result: true
          user: 0
          enabled: true
          timeout: 314780940
          policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 441289069
      properties:
        app:
          $ref: '#/components/schemas/ApplicationRequest'
        provider_model:
          $ref: '#/components/schemas/ProviderModelEnum'
        provider:
          $ref: '#/components/schemas/modelRequest'
        policy_bindings:
          items:
            $ref: '#/components/schemas/TransactionPolicyBindingRequest'
          type: array
      required:
      - app
      - provider
      - provider_model
      type: object
    TransactionApplicationResponse:
      description: Transactional creation response
      example:
        applied: true
        logs:
        - logs
        - logs
      properties:
        applied:
          type: boolean
        logs:
          items:
            type: string
          type: array
      required:
      - applied
      - logs
      type: object
    TransactionPolicyBindingRequest:
      description: PolicyBindingSerializer which does not require target as target
        is set implicitly
      example:
        negate: true
        failure_result: true
        user: 0
        enabled: true
        timeout: 314780940
        policy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: 441289069
      properties:
        policy:
          format: uuid
          nullable: true
          type: string
        group:
          format: uuid
          nullable: true
          type: string
        user:
          nullable: true
          type: integer
        negate:
          description: Negates the outcome of the policy. Messages are unaffected.
          type: boolean
        enabled:
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        timeout:
          description: Timeout after which Policy execution is terminated.
          maximum: 2147483647
          minimum: 0
          type: integer
        failure_result:
          description: Result if the Policy execution fails.
          type: boolean
      required:
      - order
      type: object
    TypeCreate:
      description: Types of an object that can be created
      example:
        icon_url: icon_url
        component: component
        model_name: model_name
        name: name
        description: description
        requires_enterprise: false
      properties:
        name:
          type: string
        description:
          type: string
        component:
          type: string
        model_name:
          type: string
        icon_url:
          type: string
        requires_enterprise:
          default: false
          type: boolean
      required:
      - component
      - description
      - model_name
      - name
      type: object
    UiThemeEnum:
      enum:
      - automatic
      - light
      - dark
      type: string
    UniquePasswordPolicy:
      description: Password Uniqueness Policy Serializer
      example:
        password_field: password_field
        num_historical_passwords: 1294386358
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        execution_logging: true
        bound_to: 0
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Policy uuid
          type: string
        name:
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        component:
          description: Get object component so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        bound_to:
          description: Return objects policy is bound to
          readOnly: true
          type: integer
        password_field:
          description: "Field key to check, field keys defined in Prompt stages are\
            \ available."
          type: string
        num_historical_passwords:
          description: Number of passwords to check against.
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - bound_to
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    UniquePasswordPolicyRequest:
      description: Password Uniqueness Policy Serializer
      example:
        password_field: password_field
        num_historical_passwords: 171976544
        execution_logging: true
        name: name
      properties:
        name:
          minLength: 1
          type: string
        execution_logging:
          description: "When this option is enabled, all executions of this policy\
            \ will be logged. By default, only execution errors are logged."
          type: boolean
        password_field:
          description: "Field key to check, field keys defined in Prompt stages are\
            \ available."
          minLength: 1
          type: string
        num_historical_passwords:
          description: Number of passwords to check against.
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - name
      type: object
    UsedBy:
      description: A list of all objects referencing the queried object
      example:
        app: app
        model_name: model_name
        name: name
        action: null
        pk: pk
      properties:
        app:
          type: string
        model_name:
          type: string
        pk:
          type: string
        name:
          type: string
        action:
          $ref: '#/components/schemas/UsedByActionEnum'
      required:
      - action
      - app
      - model_name
      - name
      - pk
      type: object
    UsedByActionEnum:
      enum:
      - cascade
      - cascade_many
      - set_null
      - set_default
      type: string
    User:
      description: User Serializer
      example:
        is_active: true
        is_superuser: true
        last_login: 2000-01-23T04:56:07.000+00:00
        password_change_date: 2000-01-23T04:56:07.000+00:00
        groups:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        avatar: avatar
        type: null
        groups_obj:
        - parent_name: parent_name
          parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_superuser: true
          name: name
          attributes:
            key: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          num_pk: 1
        - parent_name: parent_name
          parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_superuser: true
          name: name
          attributes:
            key: ""
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          num_pk: 1
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uid: uid
        path: path
        name: name
        attributes:
          key: ""
        pk: 6
        date_joined: 2000-01-23T04:56:07.000+00:00
        email: email
        username: username
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        username:
          maxLength: 150
          type: string
        name:
          description: User's display name.
          type: string
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          title: Active
          type: boolean
        last_login:
          format: date-time
          nullable: true
          type: string
        date_joined:
          format: date-time
          readOnly: true
          type: string
        is_superuser:
          readOnly: true
          type: boolean
        groups:
          items:
            format: uuid
            type: string
          type: array
        groups_obj:
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: true
          readOnly: true
          type: array
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        avatar:
          description: "User's avatar, either a http/https URL or a data URI"
          readOnly: true
          type: string
        attributes:
          additionalProperties: {}
          type: object
        uid:
          readOnly: true
          type: string
        path:
          type: string
        type:
          $ref: '#/components/schemas/UserTypeEnum'
        uuid:
          format: uuid
          readOnly: true
          type: string
        password_change_date:
          format: date-time
          readOnly: true
          type: string
      required:
      - avatar
      - date_joined
      - groups_obj
      - is_superuser
      - name
      - password_change_date
      - pk
      - uid
      - username
      - uuid
      type: object
    UserAccountRequest:
      description: Account adding/removing operations
      example:
        pk: 0
      properties:
        pk:
          type: integer
      required:
      - pk
      type: object
    UserAssignedObjectPermission:
      description: Users assigned object permission serializer
      example:
        uid: uid
        is_active: true
        is_superuser: true
        last_login: 2000-01-23T04:56:07.000+00:00
        permissions:
        - app_label: app_label
          codename: codename
          name: name
          model: model
          id: 6
          object_pk: object_pk
        - app_label: app_label
          codename: codename
          name: name
          model: model
          id: 6
          object_pk: object_pk
        name: name
        attributes:
          key: ""
        pk: 0
        email: email
        username: username
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        name:
          description: User's display name.
          type: string
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          title: Active
          type: boolean
        last_login:
          format: date-time
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        attributes:
          additionalProperties: {}
          type: object
        uid:
          readOnly: true
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/UserObjectPermission'
          type: array
        is_superuser:
          type: boolean
      required:
      - is_superuser
      - name
      - permissions
      - pk
      - uid
      - username
      type: object
    UserAttributeEnum:
      enum:
      - username
      - email
      type: string
    UserConsent:
      description: UserConsent Serializer
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        expiring: true
        application:
          provider_obj: ""
          backchannel_providers:
          - 6
          - 6
          meta_launch_url: https://openapi-generator.tech
          meta_icon: meta_icon
          meta_publisher: meta_publisher
          policy_engine_mode: null
          meta_description: meta_description
          launch_url: launch_url
          provider: 0
          open_in_new_tab: true
          name: name
          backchannel_providers_obj:
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - verbose_name_plural: verbose_name_plural
            invalidation_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            assigned_application_slug: assigned_application_slug
            authentication_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            component: component
            verbose_name: verbose_name
            authorization_flow: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            meta_model_name: meta_model_name
            assigned_backchannel_application_slug: assigned_backchannel_application_slug
            assigned_application_name: assigned_application_name
            assigned_backchannel_application_name: assigned_backchannel_application_name
            name: name
            pk: 1
            property_mappings:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
          group: group
        permissions: permissions
        pk: 0
        user:
          is_active: true
          is_superuser: true
          last_login: 2000-01-23T04:56:07.000+00:00
          password_change_date: 2000-01-23T04:56:07.000+00:00
          groups:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: avatar
          type: null
          groups_obj:
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          - parent_name: parent_name
            parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            is_superuser: true
            name: name
            attributes:
              key: ""
            pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            num_pk: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uid: uid
          path: path
          name: name
          attributes:
            key: ""
          pk: 6
          date_joined: 2000-01-23T04:56:07.000+00:00
          email: email
          username: username
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        expires:
          format: date-time
          nullable: true
          type: string
        expiring:
          type: boolean
        user:
          $ref: '#/components/schemas/User'
        application:
          $ref: '#/components/schemas/Application'
        permissions:
          default: ""
          type: string
      required:
      - application
      - pk
      - user
      type: object
    UserCreationModeEnum:
      enum:
      - never_create
      - create_when_required
      - always_create
      type: string
    UserDeleteStage:
      description: UserDeleteStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    UserDeleteStageRequest:
      description: UserDeleteStage Serializer
      example:
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
      required:
      - name
      type: object
    UserFieldsEnum:
      enum:
      - email
      - username
      - upn
      type: string
    UserGroup:
      description: Simplified Group Serializer for user's groups
      example:
        parent_name: parent_name
        parent: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_superuser: true
        name: name
        attributes:
          key: ""
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        num_pk: 1
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Group uuid
          type: string
        num_pk:
          description: "Get a numerical, int32 ID for the group"
          readOnly: true
          type: integer
        name:
          type: string
        is_superuser:
          description: Users added to this group will be superusers.
          type: boolean
        parent:
          format: uuid
          nullable: true
          type: string
        parent_name:
          nullable: true
          readOnly: true
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - name
      - num_pk
      - parent_name
      - pk
      type: object
    UserGroupRequest:
      description: Simplified Group Serializer for user's groups
      properties:
        name:
          minLength: 1
          type: string
        is_superuser:
          description: Users added to this group will be superusers.
          type: boolean
        parent:
          format: uuid
          nullable: true
          type: string
        attributes:
          additionalProperties: {}
          type: object
      required:
      - name
      type: object
    UserKerberosSourceConnection:
      description: User source connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 6
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          type: integer
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      - user
      type: object
    UserKerberosSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - identifier
      - source
      - user
      type: object
    UserLDAPSourceConnection:
      description: User source connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 6
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          type: integer
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      - user
      type: object
    UserLDAPSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - identifier
      - source
      - user
      type: object
    UserLoginChallenge:
      description: Empty challenge
      properties:
        flow_info:
          $ref: '#/components/schemas/ContextualFlowInfo'
        component:
          default: ak-stage-user-login
          type: string
        response_errors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ErrorDetail'
            type: array
          type: object
        pending_user:
          type: string
        pending_user_avatar:
          type: string
      required:
      - pending_user
      - pending_user_avatar
      type: object
    UserLoginChallengeResponseRequest:
      description: User login challenge
      properties:
        component:
          default: ak-stage-user-login
          minLength: 1
          type: string
        remember_me:
          type: boolean
      required:
      - remember_me
      type: object
    UserLoginStage:
      description: UserLoginStage Serializer
      example:
        terminate_other_sessions: true
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        remember_me_offset: remember_me_offset
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        network_binding: ""
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        geoip_binding: ""
        session_duration: session_duration
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        session_duration:
          description: "Determines how long a session lasts. Default of 0 means that\
            \ the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)"
          type: string
        terminate_other_sessions:
          description: Terminate all other sessions of the user logging in.
          type: boolean
        remember_me_offset:
          description: "Offset the session will be extended by when the user picks\
            \ the remember me option. Default of 0 means that the remember me option\
            \ will not be shown. (Format: hours=-1;minutes=-2;seconds=-3)"
          type: string
        network_binding:
          allOf:
          - $ref: '#/components/schemas/NetworkBindingEnum'
          description: Bind sessions created by this stage to the configured network
        geoip_binding:
          allOf:
          - $ref: '#/components/schemas/GeoipBindingEnum'
          description: Bind sessions created by this stage to the configured GeoIP
            location
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    UserLoginStageRequest:
      description: UserLoginStage Serializer
      example:
        terminate_other_sessions: true
        remember_me_offset: remember_me_offset
        name: name
        network_binding: ""
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        geoip_binding: ""
        session_duration: session_duration
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        session_duration:
          description: "Determines how long a session lasts. Default of 0 means that\
            \ the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
        terminate_other_sessions:
          description: Terminate all other sessions of the user logging in.
          type: boolean
        remember_me_offset:
          description: "Offset the session will be extended by when the user picks\
            \ the remember me option. Default of 0 means that the remember me option\
            \ will not be shown. (Format: hours=-1;minutes=-2;seconds=-3)"
          minLength: 1
          type: string
        network_binding:
          allOf:
          - $ref: '#/components/schemas/NetworkBindingEnum'
          description: Bind sessions created by this stage to the configured network
        geoip_binding:
          allOf:
          - $ref: '#/components/schemas/GeoipBindingEnum'
          description: Bind sessions created by this stage to the configured GeoIP
            location
      required:
      - name
      type: object
    UserLogoutStage:
      description: UserLogoutStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        name: name
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    UserLogoutStageRequest:
      description: UserLogoutStage Serializer
      example:
        name: name
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
      required:
      - name
      type: object
    UserMatchingModeEnum:
      enum:
      - identifier
      - email_link
      - email_deny
      - username_link
      - username_deny
      type: string
    UserOAuthSourceConnection:
      description: User source connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 6
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          type: integer
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      - user
      type: object
    UserOAuthSourceConnectionRequest:
      description: User source connection
      example:
        access_token: access_token
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
        access_token:
          nullable: true
          type: string
          writeOnly: true
      required:
      - identifier
      - source
      - user
      type: object
    UserObjectPermission:
      description: User-bound object level permission
      example:
        app_label: app_label
        codename: codename
        name: name
        model: model
        id: 6
        object_pk: object_pk
      properties:
        id:
          readOnly: true
          type: integer
        codename:
          readOnly: true
          type: string
        model:
          readOnly: true
          title: Python model class name
          type: string
        app_label:
          readOnly: true
          type: string
        object_pk:
          type: string
        name:
          readOnly: true
          type: string
      required:
      - app_label
      - codename
      - id
      - model
      - name
      - object_pk
      type: object
    UserPasswordSetRequest:
      example:
        password: password
      properties:
        password:
          minLength: 1
          type: string
      required:
      - password
      type: object
    UserPath:
      example:
        paths:
        - paths
        - paths
      properties:
        paths:
          items:
            type: string
          readOnly: true
          type: array
      required:
      - paths
      type: object
    UserPlexSourceConnection:
      description: User source connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 6
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          type: integer
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      - user
      type: object
    UserPlexSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plex_token: plex_token
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
        plex_token:
          minLength: 1
          type: string
          writeOnly: true
      required:
      - identifier
      - plex_token
      - source
      - user
      type: object
    UserRequest:
      description: User Serializer
      example:
        path: path
        is_active: true
        last_login: 2000-01-23T04:56:07.000+00:00
        name: name
        groups:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attributes:
          key: ""
        type: null
        email: email
        username: username
      properties:
        username:
          maxLength: 150
          minLength: 1
          type: string
        name:
          description: User's display name.
          type: string
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          title: Active
          type: boolean
        last_login:
          format: date-time
          nullable: true
          type: string
        groups:
          items:
            format: uuid
            type: string
          type: array
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        attributes:
          additionalProperties: {}
          type: object
        path:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/UserTypeEnum'
      required:
      - name
      - username
      type: object
    UserSAMLSourceConnection:
      description: User source connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 6
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          type: integer
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      - user
      type: object
    UserSAMLSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - identifier
      - source
      - user
      type: object
    UserSelf:
      description: User Serializer for information a user can retrieve about themselves
      example:
        uid: uid
        settings:
          key: ""
        is_active: true
        is_superuser: true
        name: name
        groups:
        - name: name
          pk: pk
        - name: name
          pk: pk
        system_permissions:
        - system_permissions
        - system_permissions
        pk: 0
        avatar: avatar
        type: null
        email: email
        username: username
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        name:
          description: User's display name.
          type: string
        is_active:
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
          readOnly: true
          title: Active
          type: boolean
        is_superuser:
          readOnly: true
          type: boolean
        groups:
          items:
            $ref: '#/components/schemas/UserSelfGroups'
          readOnly: true
          type: array
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        avatar:
          description: "User's avatar, either a http/https URL or a data URI"
          readOnly: true
          type: string
        uid:
          readOnly: true
          type: string
        settings:
          additionalProperties: {}
          description: Get user settings with brand and group settings applied
          readOnly: true
          type: object
        type:
          $ref: '#/components/schemas/UserTypeEnum'
        system_permissions:
          description: Get all system permissions assigned to the user
          items:
            type: string
          readOnly: true
          type: array
      required:
      - avatar
      - groups
      - is_active
      - is_superuser
      - name
      - pk
      - settings
      - system_permissions
      - uid
      - username
      type: object
    UserSelfGroups:
      example:
        name: name
        pk: pk
      properties:
        name:
          readOnly: true
          type: string
        pk:
          readOnly: true
          type: string
      required:
      - name
      - pk
      type: object
    UserServiceAccountRequest:
      example:
        create_group: false
        expiring: true
        expires: 2000-01-23T04:56:07.000+00:00
        name: name
      properties:
        name:
          minLength: 1
          type: string
        create_group:
          default: false
          type: boolean
        expiring:
          default: true
          type: boolean
        expires:
          description: "If not provided, valid for 360 days"
          format: date-time
          type: string
      required:
      - name
      type: object
    UserServiceAccountResponse:
      example:
        user_pk: 0
        group_pk: group_pk
        username: username
        token: token
        user_uid: user_uid
      properties:
        username:
          type: string
        token:
          type: string
        user_uid:
          type: string
        user_pk:
          type: integer
        group_pk:
          type: string
      required:
      - token
      - user_pk
      - user_uid
      - username
      type: object
    UserSetting:
      description: Serializer for User settings for stages and sources
      example:
        icon_url: icon_url
        component: component
        configure_url: configure_url
        object_uid: object_uid
        title: title
      properties:
        object_uid:
          type: string
        component:
          type: string
        title:
          type: string
        configure_url:
          type: string
        icon_url:
          type: string
      required:
      - component
      - object_uid
      - title
      type: object
    UserSourceConnection:
      description: User source connection
      example:
        identifier: identifier
        last_updated: 2000-01-23T04:56:07.000+00:00
        source_obj: ""
        created: 2000-01-23T04:56:07.000+00:00
        pk: 0
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 6
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        user:
          type: integer
        source:
          format: uuid
          type: string
        source_obj:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        identifier:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        last_updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - identifier
      - last_updated
      - pk
      - source
      - source_obj
      - user
      type: object
    UserSourceConnectionRequest:
      description: User source connection
      example:
        identifier: identifier
        source: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 0
      properties:
        user:
          type: integer
        source:
          format: uuid
          type: string
        identifier:
          minLength: 1
          type: string
      required:
      - identifier
      - source
      - user
      type: object
    UserTypeEnum:
      enum:
      - internal
      - external
      - service_account
      - internal_service_account
      type: string
    UserVerificationEnum:
      enum:
      - required
      - preferred
      - discouraged
      type: string
    UserWriteStage:
      description: UserWriteStage Serializer
      example:
        component: component
        verbose_name: verbose_name
        user_type: null
        verbose_name_plural: verbose_name_plural
        meta_model_name: meta_model_name
        user_path_template: user_path_template
        name: name
        create_users_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_creation_mode: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          policybindingmodel_ptr_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          background: background
          denied_action: ""
          name: name
          export_url: export_url
          pk: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          designation: ""
          title: title
          slug: slug
        create_users_as_inactive: true
      properties:
        pk:
          format: uuid
          readOnly: true
          title: Stage uuid
          type: string
        name:
          type: string
        component:
          description: Get object type so that we know how to edit the object
          readOnly: true
          type: string
        verbose_name:
          description: Return object's verbose_name
          readOnly: true
          type: string
        verbose_name_plural:
          description: Return object's plural verbose_name
          readOnly: true
          type: string
        meta_model_name:
          description: Return internal model name
          readOnly: true
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSet'
          type: array
        user_creation_mode:
          $ref: '#/components/schemas/UserCreationModeEnum'
        create_users_as_inactive:
          description: "When set, newly created users are inactive and cannot login."
          type: boolean
        create_users_group:
          description: Optionally add newly created users to this group.
          format: uuid
          nullable: true
          type: string
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        user_path_template:
          type: string
      required:
      - component
      - meta_model_name
      - name
      - pk
      - verbose_name
      - verbose_name_plural
      type: object
    UserWriteStageRequest:
      description: UserWriteStage Serializer
      example:
        user_type: null
        user_path_template: user_path_template
        name: name
        create_users_group: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user_creation_mode: null
        flow_set:
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        - policy_engine_mode: null
          compatibility_mode: true
          layout: null
          denied_action: ""
          name: name
          designation: ""
          title: title
          slug: slug
        create_users_as_inactive: true
      properties:
        name:
          minLength: 1
          type: string
        flow_set:
          items:
            $ref: '#/components/schemas/FlowSetRequest'
          type: array
        user_creation_mode:
          $ref: '#/components/schemas/UserCreationModeEnum'
        create_users_as_inactive:
          description: "When set, newly created users are inactive and cannot login."
          type: boolean
        create_users_group:
          description: Optionally add newly created users to this group.
          format: uuid
          nullable: true
          type: string
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        user_path_template:
          type: string
      required:
      - name
      type: object
    ValidationError:
      additionalProperties: {}
      description: Validation Error
      properties:
        non_field_errors:
          items:
            type: string
          type: array
        code:
          type: string
      type: object
    Version:
      description: Get running and latest version.
      example:
        version_current: version_current
        outdated: true
        version_latest_valid: true
        version_latest: version_latest
        outpost_outdated: true
        build_hash: build_hash
      properties:
        version_current:
          description: Get current version
          readOnly: true
          type: string
        version_latest:
          description: Get latest version from cache
          readOnly: true
          type: string
        version_latest_valid:
          description: Check if latest version is valid
          readOnly: true
          type: boolean
        build_hash:
          description: "Get build hash, if version is not latest or released"
          readOnly: true
          type: string
        outdated:
          description: Check if we're running the latest version
          readOnly: true
          type: boolean
        outpost_outdated:
          description: Check if any outpost is outdated/has a version mismatch
          readOnly: true
          type: boolean
      required:
      - build_hash
      - outdated
      - outpost_outdated
      - version_current
      - version_latest
      - version_latest_valid
      type: object
    VersionHistory:
      description: VersionHistory Serializer
      example:
        build: build
        id: 0
        version: version
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        timestamp:
          format: date-time
          type: string
        version:
          type: string
        build:
          type: string
      required:
      - build
      - id
      - timestamp
      - version
      type: object
    WebAuthnDevice:
      description: Serializer for WebAuthn authenticator devices
      example:
        aaguid: aaguid
        created_on: 2000-01-23T04:56:07.000+00:00
        name: name
        device_type: null
        pk: 0
        user: ""
      properties:
        pk:
          readOnly: true
          title: ID
          type: integer
        name:
          maxLength: 200
          type: string
        created_on:
          format: date-time
          readOnly: true
          type: string
        device_type:
          $ref: '#/components/schemas/WebAuthnDevice_device_type'
        aaguid:
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/GroupMember'
          readOnly: true
      required:
      - aaguid
      - created_on
      - device_type
      - name
      - pk
      - user
      type: object
    WebAuthnDeviceRequest:
      description: Serializer for WebAuthn authenticator devices
      example:
        name: name
      properties:
        name:
          maxLength: 200
          minLength: 1
          type: string
      required:
      - name
      type: object
    WebAuthnDeviceType:
      description: WebAuthnDeviceType Serializer
      example:
        aaguid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
      properties:
        aaguid:
          format: uuid
          type: string
        description:
          type: string
      required:
      - aaguid
      - description
      type: object
    WebAuthnDeviceTypeRequest:
      description: WebAuthnDeviceType Serializer
      properties:
        aaguid:
          format: uuid
          type: string
        description:
          minLength: 1
          type: string
      required:
      - aaguid
      - description
      type: object
    Worker:
      example:
        version: version
        version_matching: true
        worker_id: worker_id
      properties:
        worker_id:
          type: string
        version:
          type: string
        version_matching:
          type: boolean
      required:
      - version
      - version_matching
      - worker_id
      type: object
    modelRequest:
      discriminator:
        mapping:
          authentik_providers_google_workspace.googleworkspaceprovider: '#/components/schemas/GoogleWorkspaceProviderRequest'
          authentik_providers_ldap.ldapprovider: '#/components/schemas/LDAPProviderRequest'
          authentik_providers_microsoft_entra.microsoftentraprovider: '#/components/schemas/MicrosoftEntraProviderRequest'
          authentik_providers_oauth2.oauth2provider: '#/components/schemas/OAuth2ProviderRequest'
          authentik_providers_proxy.proxyprovider: '#/components/schemas/ProxyProviderRequest'
          authentik_providers_rac.racprovider: '#/components/schemas/RACProviderRequest'
          authentik_providers_radius.radiusprovider: '#/components/schemas/RadiusProviderRequest'
          authentik_providers_saml.samlprovider: '#/components/schemas/SAMLProviderRequest'
          authentik_providers_scim.scimprovider: '#/components/schemas/SCIMProviderRequest'
          authentik_providers_ssf.ssfprovider: '#/components/schemas/SSFProviderRequest'
        propertyName: provider_model
      oneOf:
      - $ref: '#/components/schemas/GoogleWorkspaceProviderRequest'
      - $ref: '#/components/schemas/LDAPProviderRequest'
      - $ref: '#/components/schemas/MicrosoftEntraProviderRequest'
      - $ref: '#/components/schemas/OAuth2ProviderRequest'
      - $ref: '#/components/schemas/ProxyProviderRequest'
      - $ref: '#/components/schemas/RACProviderRequest'
      - $ref: '#/components/schemas/RadiusProviderRequest'
      - $ref: '#/components/schemas/SAMLProviderRequest'
      - $ref: '#/components/schemas/SCIMProviderRequest'
      - $ref: '#/components/schemas/SSFProviderRequest'
    AuthenticatedSession_user_agent_device:
      description: User agent device
      example:
        model: model
        family: family
        brand: brand
      properties:
        brand:
          type: string
        family:
          type: string
        model:
          type: string
      required:
      - brand
      - family
      - model
      type: object
    AuthenticatedSession_user_agent_os:
      description: User agent os
      example:
        patch: patch
        patch_minor: patch_minor
        major: major
        minor: minor
        family: family
      properties:
        family:
          type: string
        major:
          type: string
        minor:
          type: string
        patch:
          type: string
        patch_minor:
          type: string
      required:
      - family
      - major
      - minor
      - patch
      - patch_minor
      type: object
    AuthenticatedSession_user_agent_user_agent:
      description: User agent browser
      example:
        patch: patch
        major: major
        minor: minor
        family: family
      properties:
        family:
          type: string
        major:
          type: string
        minor:
          type: string
        patch:
          type: string
      required:
      - family
      - major
      - minor
      - patch
      type: object
    AuthenticatedSession_user_agent:
      description: Get parsed user agent
      example:
        os:
          patch: patch
          patch_minor: patch_minor
          major: major
          minor: minor
          family: family
        string: string
        device:
          model: model
          family: family
          brand: brand
        user_agent:
          patch: patch
          major: major
          minor: minor
          family: family
      properties:
        device:
          $ref: '#/components/schemas/AuthenticatedSession_user_agent_device'
        os:
          $ref: '#/components/schemas/AuthenticatedSession_user_agent_os'
        user_agent:
          $ref: '#/components/schemas/AuthenticatedSession_user_agent_user_agent'
        string:
          type: string
      readOnly: true
      required:
      - device
      - os
      - string
      - user_agent
      type: object
    AuthenticatedSession_geo_ip:
      description: Get GeoIP Data
      example:
        continent: continent
        country: country
        city: city
        lat: 0.8008281904610115
        long: 6.027456183070403
      nullable: true
      properties:
        continent:
          type: string
        country:
          type: string
        lat:
          format: double
          type: number
        long:
          format: double
          type: number
        city:
          type: string
      readOnly: true
      required:
      - city
      - continent
      - country
      - lat
      - long
      type: object
    AuthenticatedSession_asn:
      description: Get ASN Data
      example:
        as_org: as_org
        asn: 1
        network: network
      nullable: true
      properties:
        asn:
          type: integer
        as_org:
          nullable: true
          type: string
        network:
          nullable: true
          type: string
      readOnly: true
      required:
      - as_org
      - asn
      - network
      type: object
    IdentificationChallenge_captcha_stage:
      allOf:
      - $ref: '#/components/schemas/CaptchaChallenge'
      nullable: true
    SystemInfo_runtime:
      description: Get versions
      example:
        environment: environment
        uname: uname
        openssl_version: openssl_version
        python_version: python_version
        openssl_fips_enabled: true
        authentik_version: authentik_version
        platform: platform
        architecture: architecture
      properties:
        python_version:
          type: string
        environment:
          type: string
        architecture:
          type: string
        platform:
          type: string
        uname:
          type: string
        openssl_version:
          type: string
        openssl_fips_enabled:
          nullable: true
          type: boolean
        authentik_version:
          type: string
      readOnly: true
      required:
      - architecture
      - authentik_version
      - environment
      - openssl_fips_enabled
      - openssl_version
      - platform
      - python_version
      - uname
      type: object
    WebAuthnDevice_device_type:
      allOf:
      - $ref: '#/components/schemas/WebAuthnDeviceType'
      nullable: true
      readOnly: true
  securitySchemes:
    authentik:
      scheme: bearer
      type: http
