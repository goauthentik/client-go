/*
authentik

Making authentication simple.

API version: 2024.10.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SyncObjectResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncObjectResult{}

// SyncObjectResult Result of a single object sync
type SyncObjectResult struct {
	Messages []LogEvent `json:"messages"`
}

type _SyncObjectResult SyncObjectResult

// NewSyncObjectResult instantiates a new SyncObjectResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncObjectResult(messages []LogEvent) *SyncObjectResult {
	this := SyncObjectResult{}
	this.Messages = messages
	return &this
}

// NewSyncObjectResultWithDefaults instantiates a new SyncObjectResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncObjectResultWithDefaults() *SyncObjectResult {
	this := SyncObjectResult{}
	return &this
}

// GetMessages returns the Messages field value
func (o *SyncObjectResult) GetMessages() []LogEvent {
	if o == nil {
		var ret []LogEvent
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *SyncObjectResult) GetMessagesOk() ([]LogEvent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *SyncObjectResult) SetMessages(v []LogEvent) {
	o.Messages = v
}

func (o SyncObjectResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncObjectResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messages"] = o.Messages
	return toSerialize, nil
}

func (o *SyncObjectResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSyncObjectResult := _SyncObjectResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSyncObjectResult)

	if err != nil {
		return err
	}

	*o = SyncObjectResult(varSyncObjectResult)

	return err
}

type NullableSyncObjectResult struct {
	value *SyncObjectResult
	isSet bool
}

func (v NullableSyncObjectResult) Get() *SyncObjectResult {
	return v.value
}

func (v *NullableSyncObjectResult) Set(val *SyncObjectResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncObjectResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncObjectResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncObjectResult(val *SyncObjectResult) *NullableSyncObjectResult {
	return &NullableSyncObjectResult{value: val, isSet: true}
}

func (v NullableSyncObjectResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncObjectResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
