/*
authentik

Making authentication simple.

API version: 2022.7.3
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// BlueprintInstance Info about a single blueprint instance file
type BlueprintInstance struct {
	Name        string                      `json:"name"`
	Path        string                      `json:"path"`
	Context     map[string]interface{}      `json:"context"`
	LastApplied time.Time                   `json:"last_applied"`
	Status      BlueprintInstanceStatusEnum `json:"status"`
	Enabled     *bool                       `json:"enabled,omitempty"`
}

// NewBlueprintInstance instantiates a new BlueprintInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintInstance(name string, path string, context map[string]interface{}, lastApplied time.Time, status BlueprintInstanceStatusEnum) *BlueprintInstance {
	this := BlueprintInstance{}
	this.Name = name
	this.Path = path
	this.Context = context
	this.LastApplied = lastApplied
	this.Status = status
	return &this
}

// NewBlueprintInstanceWithDefaults instantiates a new BlueprintInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintInstanceWithDefaults() *BlueprintInstance {
	this := BlueprintInstance{}
	return &this
}

// GetName returns the Name field value
func (o *BlueprintInstance) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstance) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BlueprintInstance) SetName(v string) {
	o.Name = v
}

// GetPath returns the Path field value
func (o *BlueprintInstance) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstance) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *BlueprintInstance) SetPath(v string) {
	o.Path = v
}

// GetContext returns the Context field value
func (o *BlueprintInstance) GetContext() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstance) GetContextOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Context, true
}

// SetContext sets field value
func (o *BlueprintInstance) SetContext(v map[string]interface{}) {
	o.Context = v
}

// GetLastApplied returns the LastApplied field value
func (o *BlueprintInstance) GetLastApplied() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastApplied
}

// GetLastAppliedOk returns a tuple with the LastApplied field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstance) GetLastAppliedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastApplied, true
}

// SetLastApplied sets field value
func (o *BlueprintInstance) SetLastApplied(v time.Time) {
	o.LastApplied = v
}

// GetStatus returns the Status field value
func (o *BlueprintInstance) GetStatus() BlueprintInstanceStatusEnum {
	if o == nil {
		var ret BlueprintInstanceStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstance) GetStatusOk() (*BlueprintInstanceStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BlueprintInstance) SetStatus(v BlueprintInstanceStatusEnum) {
	o.Status = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BlueprintInstance) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintInstance) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BlueprintInstance) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BlueprintInstance) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o BlueprintInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["context"] = o.Context
	}
	if true {
		toSerialize["last_applied"] = o.LastApplied
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableBlueprintInstance struct {
	value *BlueprintInstance
	isSet bool
}

func (v NullableBlueprintInstance) Get() *BlueprintInstance {
	return v.value
}

func (v *NullableBlueprintInstance) Set(val *BlueprintInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintInstance(val *BlueprintInstance) *NullableBlueprintInstance {
	return &NullableBlueprintInstance{value: val, isSet: true}
}

func (v NullableBlueprintInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
