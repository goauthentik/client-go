/*
authentik

Making authentication simple.

API version: 2025.2.0
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ConnectionToken ConnectionToken Serializer
type ConnectionToken struct {
	Pk          *string     `json:"pk,omitempty"`
	Provider    int32       `json:"provider"`
	ProviderObj RACProvider `json:"provider_obj"`
	Endpoint    string      `json:"endpoint"`
	EndpointObj Endpoint    `json:"endpoint_obj"`
	User        GroupMember `json:"user"`
}

// NewConnectionToken instantiates a new ConnectionToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionToken(provider int32, providerObj RACProvider, endpoint string, endpointObj Endpoint, user GroupMember) *ConnectionToken {
	this := ConnectionToken{}
	this.Provider = provider
	this.ProviderObj = providerObj
	this.Endpoint = endpoint
	this.EndpointObj = endpointObj
	this.User = user
	return &this
}

// NewConnectionTokenWithDefaults instantiates a new ConnectionToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionTokenWithDefaults() *ConnectionToken {
	this := ConnectionToken{}
	return &this
}

// GetPk returns the Pk field value if set, zero value otherwise.
func (o *ConnectionToken) GetPk() string {
	if o == nil || o.Pk == nil {
		var ret string
		return ret
	}
	return *o.Pk
}

// GetPkOk returns a tuple with the Pk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionToken) GetPkOk() (*string, bool) {
	if o == nil || o.Pk == nil {
		return nil, false
	}
	return o.Pk, true
}

// HasPk returns a boolean if a field has been set.
func (o *ConnectionToken) HasPk() bool {
	if o != nil && o.Pk != nil {
		return true
	}

	return false
}

// SetPk gets a reference to the given string and assigns it to the Pk field.
func (o *ConnectionToken) SetPk(v string) {
	o.Pk = &v
}

// GetProvider returns the Provider field value
func (o *ConnectionToken) GetProvider() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *ConnectionToken) GetProviderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *ConnectionToken) SetProvider(v int32) {
	o.Provider = v
}

// GetProviderObj returns the ProviderObj field value
func (o *ConnectionToken) GetProviderObj() RACProvider {
	if o == nil {
		var ret RACProvider
		return ret
	}

	return o.ProviderObj
}

// GetProviderObjOk returns a tuple with the ProviderObj field value
// and a boolean to check if the value has been set.
func (o *ConnectionToken) GetProviderObjOk() (*RACProvider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderObj, true
}

// SetProviderObj sets field value
func (o *ConnectionToken) SetProviderObj(v RACProvider) {
	o.ProviderObj = v
}

// GetEndpoint returns the Endpoint field value
func (o *ConnectionToken) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *ConnectionToken) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *ConnectionToken) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetEndpointObj returns the EndpointObj field value
func (o *ConnectionToken) GetEndpointObj() Endpoint {
	if o == nil {
		var ret Endpoint
		return ret
	}

	return o.EndpointObj
}

// GetEndpointObjOk returns a tuple with the EndpointObj field value
// and a boolean to check if the value has been set.
func (o *ConnectionToken) GetEndpointObjOk() (*Endpoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointObj, true
}

// SetEndpointObj sets field value
func (o *ConnectionToken) SetEndpointObj(v Endpoint) {
	o.EndpointObj = v
}

// GetUser returns the User field value
func (o *ConnectionToken) GetUser() GroupMember {
	if o == nil {
		var ret GroupMember
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *ConnectionToken) GetUserOk() (*GroupMember, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *ConnectionToken) SetUser(v GroupMember) {
	o.User = v
}

func (o ConnectionToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pk != nil {
		toSerialize["pk"] = o.Pk
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["provider_obj"] = o.ProviderObj
	}
	if true {
		toSerialize["endpoint"] = o.Endpoint
	}
	if true {
		toSerialize["endpoint_obj"] = o.EndpointObj
	}
	if true {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionToken struct {
	value *ConnectionToken
	isSet bool
}

func (v NullableConnectionToken) Get() *ConnectionToken {
	return v.value
}

func (v *NullableConnectionToken) Set(val *ConnectionToken) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionToken) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionToken(val *ConnectionToken) *NullableConnectionToken {
	return &NullableConnectionToken{value: val, isSet: true}
}

func (v NullableConnectionToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
