/*
authentik

Making authentication simple.

API version: 2024.10.4
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PatchedTenantRequest Tenant Serializer
type PatchedTenantRequest struct {
	SchemaName *string `json:"schema_name,omitempty"`
	Name       *string `json:"name,omitempty"`
	Ready      *bool   `json:"ready,omitempty"`
}

// NewPatchedTenantRequest instantiates a new PatchedTenantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedTenantRequest() *PatchedTenantRequest {
	this := PatchedTenantRequest{}
	return &this
}

// NewPatchedTenantRequestWithDefaults instantiates a new PatchedTenantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedTenantRequestWithDefaults() *PatchedTenantRequest {
	this := PatchedTenantRequest{}
	return &this
}

// GetSchemaName returns the SchemaName field value if set, zero value otherwise.
func (o *PatchedTenantRequest) GetSchemaName() string {
	if o == nil || o.SchemaName == nil {
		var ret string
		return ret
	}
	return *o.SchemaName
}

// GetSchemaNameOk returns a tuple with the SchemaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTenantRequest) GetSchemaNameOk() (*string, bool) {
	if o == nil || o.SchemaName == nil {
		return nil, false
	}
	return o.SchemaName, true
}

// HasSchemaName returns a boolean if a field has been set.
func (o *PatchedTenantRequest) HasSchemaName() bool {
	if o != nil && o.SchemaName != nil {
		return true
	}

	return false
}

// SetSchemaName gets a reference to the given string and assigns it to the SchemaName field.
func (o *PatchedTenantRequest) SetSchemaName(v string) {
	o.SchemaName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedTenantRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTenantRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedTenantRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedTenantRequest) SetName(v string) {
	o.Name = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *PatchedTenantRequest) GetReady() bool {
	if o == nil || o.Ready == nil {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTenantRequest) GetReadyOk() (*bool, bool) {
	if o == nil || o.Ready == nil {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *PatchedTenantRequest) HasReady() bool {
	if o != nil && o.Ready != nil {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *PatchedTenantRequest) SetReady(v bool) {
	o.Ready = &v
}

func (o PatchedTenantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchemaName != nil {
		toSerialize["schema_name"] = o.SchemaName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Ready != nil {
		toSerialize["ready"] = o.Ready
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedTenantRequest struct {
	value *PatchedTenantRequest
	isSet bool
}

func (v NullablePatchedTenantRequest) Get() *PatchedTenantRequest {
	return v.value
}

func (v *NullablePatchedTenantRequest) Set(val *PatchedTenantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedTenantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedTenantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedTenantRequest(val *PatchedTenantRequest) *NullablePatchedTenantRequest {
	return &NullablePatchedTenantRequest{value: val, isSet: true}
}

func (v NullablePatchedTenantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedTenantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
