/*
authentik

Making authentication simple.

API version: 2025.6.4
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PatchedInitialPermissionsRequest InitialPermissions serializer
type PatchedInitialPermissionsRequest struct {
	Name        *string                     `json:"name,omitempty"`
	Mode        *InitialPermissionsModeEnum `json:"mode,omitempty"`
	Role        *string                     `json:"role,omitempty"`
	Permissions []int32                     `json:"permissions,omitempty"`
}

// NewPatchedInitialPermissionsRequest instantiates a new PatchedInitialPermissionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedInitialPermissionsRequest() *PatchedInitialPermissionsRequest {
	this := PatchedInitialPermissionsRequest{}
	return &this
}

// NewPatchedInitialPermissionsRequestWithDefaults instantiates a new PatchedInitialPermissionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedInitialPermissionsRequestWithDefaults() *PatchedInitialPermissionsRequest {
	this := PatchedInitialPermissionsRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedInitialPermissionsRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedInitialPermissionsRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedInitialPermissionsRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedInitialPermissionsRequest) SetName(v string) {
	o.Name = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *PatchedInitialPermissionsRequest) GetMode() InitialPermissionsModeEnum {
	if o == nil || o.Mode == nil {
		var ret InitialPermissionsModeEnum
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedInitialPermissionsRequest) GetModeOk() (*InitialPermissionsModeEnum, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *PatchedInitialPermissionsRequest) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given InitialPermissionsModeEnum and assigns it to the Mode field.
func (o *PatchedInitialPermissionsRequest) SetMode(v InitialPermissionsModeEnum) {
	o.Mode = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PatchedInitialPermissionsRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedInitialPermissionsRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PatchedInitialPermissionsRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *PatchedInitialPermissionsRequest) SetRole(v string) {
	o.Role = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *PatchedInitialPermissionsRequest) GetPermissions() []int32 {
	if o == nil || o.Permissions == nil {
		var ret []int32
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedInitialPermissionsRequest) GetPermissionsOk() ([]int32, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *PatchedInitialPermissionsRequest) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []int32 and assigns it to the Permissions field.
func (o *PatchedInitialPermissionsRequest) SetPermissions(v []int32) {
	o.Permissions = v
}

func (o PatchedInitialPermissionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedInitialPermissionsRequest struct {
	value *PatchedInitialPermissionsRequest
	isSet bool
}

func (v NullablePatchedInitialPermissionsRequest) Get() *PatchedInitialPermissionsRequest {
	return v.value
}

func (v *NullablePatchedInitialPermissionsRequest) Set(val *PatchedInitialPermissionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedInitialPermissionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedInitialPermissionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedInitialPermissionsRequest(val *PatchedInitialPermissionsRequest) *NullablePatchedInitialPermissionsRequest {
	return &NullablePatchedInitialPermissionsRequest{value: val, isSet: true}
}

func (v NullablePatchedInitialPermissionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedInitialPermissionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
