/*
authentik

Making authentication simple.

API version: 2024.10.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the NotificationWebhookMappingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationWebhookMappingRequest{}

// NotificationWebhookMappingRequest NotificationWebhookMapping Serializer
type NotificationWebhookMappingRequest struct {
	Name       string `json:"name"`
	Expression string `json:"expression"`
}

type _NotificationWebhookMappingRequest NotificationWebhookMappingRequest

// NewNotificationWebhookMappingRequest instantiates a new NotificationWebhookMappingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationWebhookMappingRequest(name string, expression string) *NotificationWebhookMappingRequest {
	this := NotificationWebhookMappingRequest{}
	this.Name = name
	this.Expression = expression
	return &this
}

// NewNotificationWebhookMappingRequestWithDefaults instantiates a new NotificationWebhookMappingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationWebhookMappingRequestWithDefaults() *NotificationWebhookMappingRequest {
	this := NotificationWebhookMappingRequest{}
	return &this
}

// GetName returns the Name field value
func (o *NotificationWebhookMappingRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhookMappingRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NotificationWebhookMappingRequest) SetName(v string) {
	o.Name = v
}

// GetExpression returns the Expression field value
func (o *NotificationWebhookMappingRequest) GetExpression() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value
// and a boolean to check if the value has been set.
func (o *NotificationWebhookMappingRequest) GetExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expression, true
}

// SetExpression sets field value
func (o *NotificationWebhookMappingRequest) SetExpression(v string) {
	o.Expression = v
}

func (o NotificationWebhookMappingRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationWebhookMappingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["expression"] = o.Expression
	return toSerialize, nil
}

func (o *NotificationWebhookMappingRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"expression",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNotificationWebhookMappingRequest := _NotificationWebhookMappingRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNotificationWebhookMappingRequest)

	if err != nil {
		return err
	}

	*o = NotificationWebhookMappingRequest(varNotificationWebhookMappingRequest)

	return err
}

type NullableNotificationWebhookMappingRequest struct {
	value *NotificationWebhookMappingRequest
	isSet bool
}

func (v NullableNotificationWebhookMappingRequest) Get() *NotificationWebhookMappingRequest {
	return v.value
}

func (v *NullableNotificationWebhookMappingRequest) Set(val *NotificationWebhookMappingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationWebhookMappingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationWebhookMappingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationWebhookMappingRequest(val *NotificationWebhookMappingRequest) *NullableNotificationWebhookMappingRequest {
	return &NullableNotificationWebhookMappingRequest{value: val, isSet: true}
}

func (v NullableNotificationWebhookMappingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationWebhookMappingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
