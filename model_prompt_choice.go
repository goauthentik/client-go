/*
authentik

Making authentication simple.

API version: 2025.12.0-rc1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PromptChoice Serializer for a single Choice field
type PromptChoice struct {
	Value string `json:"value"`
	Label string `json:"label"`
}

// NewPromptChoice instantiates a new PromptChoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromptChoice(value string, label string) *PromptChoice {
	this := PromptChoice{}
	this.Value = value
	this.Label = label
	return &this
}

// NewPromptChoiceWithDefaults instantiates a new PromptChoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromptChoiceWithDefaults() *PromptChoice {
	this := PromptChoice{}
	return &this
}

// GetValue returns the Value field value
func (o *PromptChoice) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PromptChoice) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PromptChoice) SetValue(v string) {
	o.Value = v
}

// GetLabel returns the Label field value
func (o *PromptChoice) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PromptChoice) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PromptChoice) SetLabel(v string) {
	o.Label = v
}

func (o PromptChoice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullablePromptChoice struct {
	value *PromptChoice
	isSet bool
}

func (v NullablePromptChoice) Get() *PromptChoice {
	return v.value
}

func (v *NullablePromptChoice) Set(val *PromptChoice) {
	v.value = val
	v.isSet = true
}

func (v NullablePromptChoice) IsSet() bool {
	return v.isSet
}

func (v *NullablePromptChoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromptChoice(val *PromptChoice) *NullablePromptChoice {
	return &NullablePromptChoice{value: val, isSet: true}
}

func (v NullablePromptChoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromptChoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
