/*
authentik

Making authentication simple.

API version: 2022.7.3
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// BlueprintInstanceRequest Info about a single blueprint instance file
type BlueprintInstanceRequest struct {
	Name    string                      `json:"name"`
	Path    string                      `json:"path"`
	Context map[string]interface{}      `json:"context"`
	Status  BlueprintInstanceStatusEnum `json:"status"`
	Enabled *bool                       `json:"enabled,omitempty"`
}

// NewBlueprintInstanceRequest instantiates a new BlueprintInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintInstanceRequest(name string, path string, context map[string]interface{}, status BlueprintInstanceStatusEnum) *BlueprintInstanceRequest {
	this := BlueprintInstanceRequest{}
	this.Name = name
	this.Path = path
	this.Context = context
	this.Status = status
	return &this
}

// NewBlueprintInstanceRequestWithDefaults instantiates a new BlueprintInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintInstanceRequestWithDefaults() *BlueprintInstanceRequest {
	this := BlueprintInstanceRequest{}
	return &this
}

// GetName returns the Name field value
func (o *BlueprintInstanceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstanceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BlueprintInstanceRequest) SetName(v string) {
	o.Name = v
}

// GetPath returns the Path field value
func (o *BlueprintInstanceRequest) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstanceRequest) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *BlueprintInstanceRequest) SetPath(v string) {
	o.Path = v
}

// GetContext returns the Context field value
func (o *BlueprintInstanceRequest) GetContext() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstanceRequest) GetContextOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Context, true
}

// SetContext sets field value
func (o *BlueprintInstanceRequest) SetContext(v map[string]interface{}) {
	o.Context = v
}

// GetStatus returns the Status field value
func (o *BlueprintInstanceRequest) GetStatus() BlueprintInstanceStatusEnum {
	if o == nil {
		var ret BlueprintInstanceStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BlueprintInstanceRequest) GetStatusOk() (*BlueprintInstanceStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BlueprintInstanceRequest) SetStatus(v BlueprintInstanceStatusEnum) {
	o.Status = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BlueprintInstanceRequest) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintInstanceRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BlueprintInstanceRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BlueprintInstanceRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o BlueprintInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["context"] = o.Context
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableBlueprintInstanceRequest struct {
	value *BlueprintInstanceRequest
	isSet bool
}

func (v NullableBlueprintInstanceRequest) Get() *BlueprintInstanceRequest {
	return v.value
}

func (v *NullableBlueprintInstanceRequest) Set(val *BlueprintInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintInstanceRequest(val *BlueprintInstanceRequest) *NullableBlueprintInstanceRequest {
	return &NullableBlueprintInstanceRequest{value: val, isSet: true}
}

func (v NullableBlueprintInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
