/*
authentik

Making authentication simple.

API version: 2024.10.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PatchedLDAPSourceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedLDAPSourceRequest{}

// PatchedLDAPSourceRequest LDAP Source Serializer
type PatchedLDAPSourceRequest struct {
	// Source's display Name.
	Name *string `json:"name,omitempty"`
	// Internal source name, used in URLs.
	Slug    *string `json:"slug,omitempty" validate:"regexp=^[-a-zA-Z0-9_]+$"`
	Enabled *bool   `json:"enabled,omitempty"`
	// Flow to use when authenticating existing users.
	AuthenticationFlow NullableString `json:"authentication_flow,omitempty"`
	// Flow to use when enrolling new users.
	EnrollmentFlow        NullableString    `json:"enrollment_flow,omitempty"`
	UserPropertyMappings  []string          `json:"user_property_mappings,omitempty"`
	GroupPropertyMappings []string          `json:"group_property_mappings,omitempty"`
	PolicyEngineMode      *PolicyEngineMode `json:"policy_engine_mode,omitempty"`
	// How the source determines if an existing user should be authenticated or a new user enrolled.
	UserMatchingMode *UserMatchingModeEnum `json:"user_matching_mode,omitempty"`
	UserPathTemplate *string               `json:"user_path_template,omitempty"`
	ServerUri        *string               `json:"server_uri,omitempty"`
	// Optionally verify the LDAP Server's Certificate against the CA Chain in this keypair.
	PeerCertificate NullableString `json:"peer_certificate,omitempty"`
	// Client certificate to authenticate against the LDAP Server's Certificate.
	ClientCertificate NullableString `json:"client_certificate,omitempty"`
	BindCn            *string        `json:"bind_cn,omitempty"`
	BindPassword      *string        `json:"bind_password,omitempty"`
	StartTls          *bool          `json:"start_tls,omitempty"`
	Sni               *bool          `json:"sni,omitempty"`
	BaseDn            *string        `json:"base_dn,omitempty"`
	// Prepended to Base DN for User-queries.
	AdditionalUserDn *string `json:"additional_user_dn,omitempty"`
	// Prepended to Base DN for Group-queries.
	AdditionalGroupDn *string `json:"additional_group_dn,omitempty"`
	// Consider Objects matching this filter to be Users.
	UserObjectFilter *string `json:"user_object_filter,omitempty"`
	// Consider Objects matching this filter to be Groups.
	GroupObjectFilter *string `json:"group_object_filter,omitempty"`
	// Field which contains members of a group.
	GroupMembershipField *string `json:"group_membership_field,omitempty"`
	// Field which contains a unique Identifier.
	ObjectUniquenessField *string `json:"object_uniqueness_field,omitempty"`
	// Update internal authentik password when login succeeds with LDAP
	PasswordLoginUpdateInternalPassword *bool `json:"password_login_update_internal_password,omitempty"`
	SyncUsers                           *bool `json:"sync_users,omitempty"`
	// When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
	SyncUsersPassword *bool          `json:"sync_users_password,omitempty"`
	SyncGroups        *bool          `json:"sync_groups,omitempty"`
	SyncParentGroup   NullableString `json:"sync_parent_group,omitempty"`
}

// NewPatchedLDAPSourceRequest instantiates a new PatchedLDAPSourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedLDAPSourceRequest() *PatchedLDAPSourceRequest {
	this := PatchedLDAPSourceRequest{}
	return &this
}

// NewPatchedLDAPSourceRequestWithDefaults instantiates a new PatchedLDAPSourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedLDAPSourceRequestWithDefaults() *PatchedLDAPSourceRequest {
	this := PatchedLDAPSourceRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedLDAPSourceRequest) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *PatchedLDAPSourceRequest) SetSlug(v string) {
	o.Slug = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PatchedLDAPSourceRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAuthenticationFlow returns the AuthenticationFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedLDAPSourceRequest) GetAuthenticationFlow() string {
	if o == nil || IsNil(o.AuthenticationFlow.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationFlow.Get()
}

// GetAuthenticationFlowOk returns a tuple with the AuthenticationFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedLDAPSourceRequest) GetAuthenticationFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationFlow.Get(), o.AuthenticationFlow.IsSet()
}

// HasAuthenticationFlow returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasAuthenticationFlow() bool {
	if o != nil && o.AuthenticationFlow.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationFlow gets a reference to the given NullableString and assigns it to the AuthenticationFlow field.
func (o *PatchedLDAPSourceRequest) SetAuthenticationFlow(v string) {
	o.AuthenticationFlow.Set(&v)
}

// SetAuthenticationFlowNil sets the value for AuthenticationFlow to be an explicit nil
func (o *PatchedLDAPSourceRequest) SetAuthenticationFlowNil() {
	o.AuthenticationFlow.Set(nil)
}

// UnsetAuthenticationFlow ensures that no value is present for AuthenticationFlow, not even an explicit nil
func (o *PatchedLDAPSourceRequest) UnsetAuthenticationFlow() {
	o.AuthenticationFlow.Unset()
}

// GetEnrollmentFlow returns the EnrollmentFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedLDAPSourceRequest) GetEnrollmentFlow() string {
	if o == nil || IsNil(o.EnrollmentFlow.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentFlow.Get()
}

// GetEnrollmentFlowOk returns a tuple with the EnrollmentFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedLDAPSourceRequest) GetEnrollmentFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentFlow.Get(), o.EnrollmentFlow.IsSet()
}

// HasEnrollmentFlow returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasEnrollmentFlow() bool {
	if o != nil && o.EnrollmentFlow.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentFlow gets a reference to the given NullableString and assigns it to the EnrollmentFlow field.
func (o *PatchedLDAPSourceRequest) SetEnrollmentFlow(v string) {
	o.EnrollmentFlow.Set(&v)
}

// SetEnrollmentFlowNil sets the value for EnrollmentFlow to be an explicit nil
func (o *PatchedLDAPSourceRequest) SetEnrollmentFlowNil() {
	o.EnrollmentFlow.Set(nil)
}

// UnsetEnrollmentFlow ensures that no value is present for EnrollmentFlow, not even an explicit nil
func (o *PatchedLDAPSourceRequest) UnsetEnrollmentFlow() {
	o.EnrollmentFlow.Unset()
}

// GetUserPropertyMappings returns the UserPropertyMappings field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetUserPropertyMappings() []string {
	if o == nil || IsNil(o.UserPropertyMappings) {
		var ret []string
		return ret
	}
	return o.UserPropertyMappings
}

// GetUserPropertyMappingsOk returns a tuple with the UserPropertyMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetUserPropertyMappingsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserPropertyMappings) {
		return nil, false
	}
	return o.UserPropertyMappings, true
}

// HasUserPropertyMappings returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasUserPropertyMappings() bool {
	if o != nil && !IsNil(o.UserPropertyMappings) {
		return true
	}

	return false
}

// SetUserPropertyMappings gets a reference to the given []string and assigns it to the UserPropertyMappings field.
func (o *PatchedLDAPSourceRequest) SetUserPropertyMappings(v []string) {
	o.UserPropertyMappings = v
}

// GetGroupPropertyMappings returns the GroupPropertyMappings field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetGroupPropertyMappings() []string {
	if o == nil || IsNil(o.GroupPropertyMappings) {
		var ret []string
		return ret
	}
	return o.GroupPropertyMappings
}

// GetGroupPropertyMappingsOk returns a tuple with the GroupPropertyMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetGroupPropertyMappingsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupPropertyMappings) {
		return nil, false
	}
	return o.GroupPropertyMappings, true
}

// HasGroupPropertyMappings returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasGroupPropertyMappings() bool {
	if o != nil && !IsNil(o.GroupPropertyMappings) {
		return true
	}

	return false
}

// SetGroupPropertyMappings gets a reference to the given []string and assigns it to the GroupPropertyMappings field.
func (o *PatchedLDAPSourceRequest) SetGroupPropertyMappings(v []string) {
	o.GroupPropertyMappings = v
}

// GetPolicyEngineMode returns the PolicyEngineMode field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetPolicyEngineMode() PolicyEngineMode {
	if o == nil || IsNil(o.PolicyEngineMode) {
		var ret PolicyEngineMode
		return ret
	}
	return *o.PolicyEngineMode
}

// GetPolicyEngineModeOk returns a tuple with the PolicyEngineMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetPolicyEngineModeOk() (*PolicyEngineMode, bool) {
	if o == nil || IsNil(o.PolicyEngineMode) {
		return nil, false
	}
	return o.PolicyEngineMode, true
}

// HasPolicyEngineMode returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasPolicyEngineMode() bool {
	if o != nil && !IsNil(o.PolicyEngineMode) {
		return true
	}

	return false
}

// SetPolicyEngineMode gets a reference to the given PolicyEngineMode and assigns it to the PolicyEngineMode field.
func (o *PatchedLDAPSourceRequest) SetPolicyEngineMode(v PolicyEngineMode) {
	o.PolicyEngineMode = &v
}

// GetUserMatchingMode returns the UserMatchingMode field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetUserMatchingMode() UserMatchingModeEnum {
	if o == nil || IsNil(o.UserMatchingMode) {
		var ret UserMatchingModeEnum
		return ret
	}
	return *o.UserMatchingMode
}

// GetUserMatchingModeOk returns a tuple with the UserMatchingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetUserMatchingModeOk() (*UserMatchingModeEnum, bool) {
	if o == nil || IsNil(o.UserMatchingMode) {
		return nil, false
	}
	return o.UserMatchingMode, true
}

// HasUserMatchingMode returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasUserMatchingMode() bool {
	if o != nil && !IsNil(o.UserMatchingMode) {
		return true
	}

	return false
}

// SetUserMatchingMode gets a reference to the given UserMatchingModeEnum and assigns it to the UserMatchingMode field.
func (o *PatchedLDAPSourceRequest) SetUserMatchingMode(v UserMatchingModeEnum) {
	o.UserMatchingMode = &v
}

// GetUserPathTemplate returns the UserPathTemplate field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetUserPathTemplate() string {
	if o == nil || IsNil(o.UserPathTemplate) {
		var ret string
		return ret
	}
	return *o.UserPathTemplate
}

// GetUserPathTemplateOk returns a tuple with the UserPathTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetUserPathTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.UserPathTemplate) {
		return nil, false
	}
	return o.UserPathTemplate, true
}

// HasUserPathTemplate returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasUserPathTemplate() bool {
	if o != nil && !IsNil(o.UserPathTemplate) {
		return true
	}

	return false
}

// SetUserPathTemplate gets a reference to the given string and assigns it to the UserPathTemplate field.
func (o *PatchedLDAPSourceRequest) SetUserPathTemplate(v string) {
	o.UserPathTemplate = &v
}

// GetServerUri returns the ServerUri field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetServerUri() string {
	if o == nil || IsNil(o.ServerUri) {
		var ret string
		return ret
	}
	return *o.ServerUri
}

// GetServerUriOk returns a tuple with the ServerUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetServerUriOk() (*string, bool) {
	if o == nil || IsNil(o.ServerUri) {
		return nil, false
	}
	return o.ServerUri, true
}

// HasServerUri returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasServerUri() bool {
	if o != nil && !IsNil(o.ServerUri) {
		return true
	}

	return false
}

// SetServerUri gets a reference to the given string and assigns it to the ServerUri field.
func (o *PatchedLDAPSourceRequest) SetServerUri(v string) {
	o.ServerUri = &v
}

// GetPeerCertificate returns the PeerCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedLDAPSourceRequest) GetPeerCertificate() string {
	if o == nil || IsNil(o.PeerCertificate.Get()) {
		var ret string
		return ret
	}
	return *o.PeerCertificate.Get()
}

// GetPeerCertificateOk returns a tuple with the PeerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedLDAPSourceRequest) GetPeerCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PeerCertificate.Get(), o.PeerCertificate.IsSet()
}

// HasPeerCertificate returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasPeerCertificate() bool {
	if o != nil && o.PeerCertificate.IsSet() {
		return true
	}

	return false
}

// SetPeerCertificate gets a reference to the given NullableString and assigns it to the PeerCertificate field.
func (o *PatchedLDAPSourceRequest) SetPeerCertificate(v string) {
	o.PeerCertificate.Set(&v)
}

// SetPeerCertificateNil sets the value for PeerCertificate to be an explicit nil
func (o *PatchedLDAPSourceRequest) SetPeerCertificateNil() {
	o.PeerCertificate.Set(nil)
}

// UnsetPeerCertificate ensures that no value is present for PeerCertificate, not even an explicit nil
func (o *PatchedLDAPSourceRequest) UnsetPeerCertificate() {
	o.PeerCertificate.Unset()
}

// GetClientCertificate returns the ClientCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedLDAPSourceRequest) GetClientCertificate() string {
	if o == nil || IsNil(o.ClientCertificate.Get()) {
		var ret string
		return ret
	}
	return *o.ClientCertificate.Get()
}

// GetClientCertificateOk returns a tuple with the ClientCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedLDAPSourceRequest) GetClientCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientCertificate.Get(), o.ClientCertificate.IsSet()
}

// HasClientCertificate returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasClientCertificate() bool {
	if o != nil && o.ClientCertificate.IsSet() {
		return true
	}

	return false
}

// SetClientCertificate gets a reference to the given NullableString and assigns it to the ClientCertificate field.
func (o *PatchedLDAPSourceRequest) SetClientCertificate(v string) {
	o.ClientCertificate.Set(&v)
}

// SetClientCertificateNil sets the value for ClientCertificate to be an explicit nil
func (o *PatchedLDAPSourceRequest) SetClientCertificateNil() {
	o.ClientCertificate.Set(nil)
}

// UnsetClientCertificate ensures that no value is present for ClientCertificate, not even an explicit nil
func (o *PatchedLDAPSourceRequest) UnsetClientCertificate() {
	o.ClientCertificate.Unset()
}

// GetBindCn returns the BindCn field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetBindCn() string {
	if o == nil || IsNil(o.BindCn) {
		var ret string
		return ret
	}
	return *o.BindCn
}

// GetBindCnOk returns a tuple with the BindCn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetBindCnOk() (*string, bool) {
	if o == nil || IsNil(o.BindCn) {
		return nil, false
	}
	return o.BindCn, true
}

// HasBindCn returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasBindCn() bool {
	if o != nil && !IsNil(o.BindCn) {
		return true
	}

	return false
}

// SetBindCn gets a reference to the given string and assigns it to the BindCn field.
func (o *PatchedLDAPSourceRequest) SetBindCn(v string) {
	o.BindCn = &v
}

// GetBindPassword returns the BindPassword field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetBindPassword() string {
	if o == nil || IsNil(o.BindPassword) {
		var ret string
		return ret
	}
	return *o.BindPassword
}

// GetBindPasswordOk returns a tuple with the BindPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetBindPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BindPassword) {
		return nil, false
	}
	return o.BindPassword, true
}

// HasBindPassword returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasBindPassword() bool {
	if o != nil && !IsNil(o.BindPassword) {
		return true
	}

	return false
}

// SetBindPassword gets a reference to the given string and assigns it to the BindPassword field.
func (o *PatchedLDAPSourceRequest) SetBindPassword(v string) {
	o.BindPassword = &v
}

// GetStartTls returns the StartTls field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetStartTls() bool {
	if o == nil || IsNil(o.StartTls) {
		var ret bool
		return ret
	}
	return *o.StartTls
}

// GetStartTlsOk returns a tuple with the StartTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetStartTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.StartTls) {
		return nil, false
	}
	return o.StartTls, true
}

// HasStartTls returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasStartTls() bool {
	if o != nil && !IsNil(o.StartTls) {
		return true
	}

	return false
}

// SetStartTls gets a reference to the given bool and assigns it to the StartTls field.
func (o *PatchedLDAPSourceRequest) SetStartTls(v bool) {
	o.StartTls = &v
}

// GetSni returns the Sni field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetSni() bool {
	if o == nil || IsNil(o.Sni) {
		var ret bool
		return ret
	}
	return *o.Sni
}

// GetSniOk returns a tuple with the Sni field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetSniOk() (*bool, bool) {
	if o == nil || IsNil(o.Sni) {
		return nil, false
	}
	return o.Sni, true
}

// HasSni returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasSni() bool {
	if o != nil && !IsNil(o.Sni) {
		return true
	}

	return false
}

// SetSni gets a reference to the given bool and assigns it to the Sni field.
func (o *PatchedLDAPSourceRequest) SetSni(v bool) {
	o.Sni = &v
}

// GetBaseDn returns the BaseDn field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetBaseDn() string {
	if o == nil || IsNil(o.BaseDn) {
		var ret string
		return ret
	}
	return *o.BaseDn
}

// GetBaseDnOk returns a tuple with the BaseDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetBaseDnOk() (*string, bool) {
	if o == nil || IsNil(o.BaseDn) {
		return nil, false
	}
	return o.BaseDn, true
}

// HasBaseDn returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasBaseDn() bool {
	if o != nil && !IsNil(o.BaseDn) {
		return true
	}

	return false
}

// SetBaseDn gets a reference to the given string and assigns it to the BaseDn field.
func (o *PatchedLDAPSourceRequest) SetBaseDn(v string) {
	o.BaseDn = &v
}

// GetAdditionalUserDn returns the AdditionalUserDn field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetAdditionalUserDn() string {
	if o == nil || IsNil(o.AdditionalUserDn) {
		var ret string
		return ret
	}
	return *o.AdditionalUserDn
}

// GetAdditionalUserDnOk returns a tuple with the AdditionalUserDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetAdditionalUserDnOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalUserDn) {
		return nil, false
	}
	return o.AdditionalUserDn, true
}

// HasAdditionalUserDn returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasAdditionalUserDn() bool {
	if o != nil && !IsNil(o.AdditionalUserDn) {
		return true
	}

	return false
}

// SetAdditionalUserDn gets a reference to the given string and assigns it to the AdditionalUserDn field.
func (o *PatchedLDAPSourceRequest) SetAdditionalUserDn(v string) {
	o.AdditionalUserDn = &v
}

// GetAdditionalGroupDn returns the AdditionalGroupDn field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetAdditionalGroupDn() string {
	if o == nil || IsNil(o.AdditionalGroupDn) {
		var ret string
		return ret
	}
	return *o.AdditionalGroupDn
}

// GetAdditionalGroupDnOk returns a tuple with the AdditionalGroupDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetAdditionalGroupDnOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalGroupDn) {
		return nil, false
	}
	return o.AdditionalGroupDn, true
}

// HasAdditionalGroupDn returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasAdditionalGroupDn() bool {
	if o != nil && !IsNil(o.AdditionalGroupDn) {
		return true
	}

	return false
}

// SetAdditionalGroupDn gets a reference to the given string and assigns it to the AdditionalGroupDn field.
func (o *PatchedLDAPSourceRequest) SetAdditionalGroupDn(v string) {
	o.AdditionalGroupDn = &v
}

// GetUserObjectFilter returns the UserObjectFilter field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetUserObjectFilter() string {
	if o == nil || IsNil(o.UserObjectFilter) {
		var ret string
		return ret
	}
	return *o.UserObjectFilter
}

// GetUserObjectFilterOk returns a tuple with the UserObjectFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetUserObjectFilterOk() (*string, bool) {
	if o == nil || IsNil(o.UserObjectFilter) {
		return nil, false
	}
	return o.UserObjectFilter, true
}

// HasUserObjectFilter returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasUserObjectFilter() bool {
	if o != nil && !IsNil(o.UserObjectFilter) {
		return true
	}

	return false
}

// SetUserObjectFilter gets a reference to the given string and assigns it to the UserObjectFilter field.
func (o *PatchedLDAPSourceRequest) SetUserObjectFilter(v string) {
	o.UserObjectFilter = &v
}

// GetGroupObjectFilter returns the GroupObjectFilter field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetGroupObjectFilter() string {
	if o == nil || IsNil(o.GroupObjectFilter) {
		var ret string
		return ret
	}
	return *o.GroupObjectFilter
}

// GetGroupObjectFilterOk returns a tuple with the GroupObjectFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetGroupObjectFilterOk() (*string, bool) {
	if o == nil || IsNil(o.GroupObjectFilter) {
		return nil, false
	}
	return o.GroupObjectFilter, true
}

// HasGroupObjectFilter returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasGroupObjectFilter() bool {
	if o != nil && !IsNil(o.GroupObjectFilter) {
		return true
	}

	return false
}

// SetGroupObjectFilter gets a reference to the given string and assigns it to the GroupObjectFilter field.
func (o *PatchedLDAPSourceRequest) SetGroupObjectFilter(v string) {
	o.GroupObjectFilter = &v
}

// GetGroupMembershipField returns the GroupMembershipField field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetGroupMembershipField() string {
	if o == nil || IsNil(o.GroupMembershipField) {
		var ret string
		return ret
	}
	return *o.GroupMembershipField
}

// GetGroupMembershipFieldOk returns a tuple with the GroupMembershipField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetGroupMembershipFieldOk() (*string, bool) {
	if o == nil || IsNil(o.GroupMembershipField) {
		return nil, false
	}
	return o.GroupMembershipField, true
}

// HasGroupMembershipField returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasGroupMembershipField() bool {
	if o != nil && !IsNil(o.GroupMembershipField) {
		return true
	}

	return false
}

// SetGroupMembershipField gets a reference to the given string and assigns it to the GroupMembershipField field.
func (o *PatchedLDAPSourceRequest) SetGroupMembershipField(v string) {
	o.GroupMembershipField = &v
}

// GetObjectUniquenessField returns the ObjectUniquenessField field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetObjectUniquenessField() string {
	if o == nil || IsNil(o.ObjectUniquenessField) {
		var ret string
		return ret
	}
	return *o.ObjectUniquenessField
}

// GetObjectUniquenessFieldOk returns a tuple with the ObjectUniquenessField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetObjectUniquenessFieldOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectUniquenessField) {
		return nil, false
	}
	return o.ObjectUniquenessField, true
}

// HasObjectUniquenessField returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasObjectUniquenessField() bool {
	if o != nil && !IsNil(o.ObjectUniquenessField) {
		return true
	}

	return false
}

// SetObjectUniquenessField gets a reference to the given string and assigns it to the ObjectUniquenessField field.
func (o *PatchedLDAPSourceRequest) SetObjectUniquenessField(v string) {
	o.ObjectUniquenessField = &v
}

// GetPasswordLoginUpdateInternalPassword returns the PasswordLoginUpdateInternalPassword field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetPasswordLoginUpdateInternalPassword() bool {
	if o == nil || IsNil(o.PasswordLoginUpdateInternalPassword) {
		var ret bool
		return ret
	}
	return *o.PasswordLoginUpdateInternalPassword
}

// GetPasswordLoginUpdateInternalPasswordOk returns a tuple with the PasswordLoginUpdateInternalPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetPasswordLoginUpdateInternalPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.PasswordLoginUpdateInternalPassword) {
		return nil, false
	}
	return o.PasswordLoginUpdateInternalPassword, true
}

// HasPasswordLoginUpdateInternalPassword returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasPasswordLoginUpdateInternalPassword() bool {
	if o != nil && !IsNil(o.PasswordLoginUpdateInternalPassword) {
		return true
	}

	return false
}

// SetPasswordLoginUpdateInternalPassword gets a reference to the given bool and assigns it to the PasswordLoginUpdateInternalPassword field.
func (o *PatchedLDAPSourceRequest) SetPasswordLoginUpdateInternalPassword(v bool) {
	o.PasswordLoginUpdateInternalPassword = &v
}

// GetSyncUsers returns the SyncUsers field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetSyncUsers() bool {
	if o == nil || IsNil(o.SyncUsers) {
		var ret bool
		return ret
	}
	return *o.SyncUsers
}

// GetSyncUsersOk returns a tuple with the SyncUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetSyncUsersOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncUsers) {
		return nil, false
	}
	return o.SyncUsers, true
}

// HasSyncUsers returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasSyncUsers() bool {
	if o != nil && !IsNil(o.SyncUsers) {
		return true
	}

	return false
}

// SetSyncUsers gets a reference to the given bool and assigns it to the SyncUsers field.
func (o *PatchedLDAPSourceRequest) SetSyncUsers(v bool) {
	o.SyncUsers = &v
}

// GetSyncUsersPassword returns the SyncUsersPassword field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetSyncUsersPassword() bool {
	if o == nil || IsNil(o.SyncUsersPassword) {
		var ret bool
		return ret
	}
	return *o.SyncUsersPassword
}

// GetSyncUsersPasswordOk returns a tuple with the SyncUsersPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetSyncUsersPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncUsersPassword) {
		return nil, false
	}
	return o.SyncUsersPassword, true
}

// HasSyncUsersPassword returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasSyncUsersPassword() bool {
	if o != nil && !IsNil(o.SyncUsersPassword) {
		return true
	}

	return false
}

// SetSyncUsersPassword gets a reference to the given bool and assigns it to the SyncUsersPassword field.
func (o *PatchedLDAPSourceRequest) SetSyncUsersPassword(v bool) {
	o.SyncUsersPassword = &v
}

// GetSyncGroups returns the SyncGroups field value if set, zero value otherwise.
func (o *PatchedLDAPSourceRequest) GetSyncGroups() bool {
	if o == nil || IsNil(o.SyncGroups) {
		var ret bool
		return ret
	}
	return *o.SyncGroups
}

// GetSyncGroupsOk returns a tuple with the SyncGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedLDAPSourceRequest) GetSyncGroupsOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncGroups) {
		return nil, false
	}
	return o.SyncGroups, true
}

// HasSyncGroups returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasSyncGroups() bool {
	if o != nil && !IsNil(o.SyncGroups) {
		return true
	}

	return false
}

// SetSyncGroups gets a reference to the given bool and assigns it to the SyncGroups field.
func (o *PatchedLDAPSourceRequest) SetSyncGroups(v bool) {
	o.SyncGroups = &v
}

// GetSyncParentGroup returns the SyncParentGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedLDAPSourceRequest) GetSyncParentGroup() string {
	if o == nil || IsNil(o.SyncParentGroup.Get()) {
		var ret string
		return ret
	}
	return *o.SyncParentGroup.Get()
}

// GetSyncParentGroupOk returns a tuple with the SyncParentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedLDAPSourceRequest) GetSyncParentGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyncParentGroup.Get(), o.SyncParentGroup.IsSet()
}

// HasSyncParentGroup returns a boolean if a field has been set.
func (o *PatchedLDAPSourceRequest) HasSyncParentGroup() bool {
	if o != nil && o.SyncParentGroup.IsSet() {
		return true
	}

	return false
}

// SetSyncParentGroup gets a reference to the given NullableString and assigns it to the SyncParentGroup field.
func (o *PatchedLDAPSourceRequest) SetSyncParentGroup(v string) {
	o.SyncParentGroup.Set(&v)
}

// SetSyncParentGroupNil sets the value for SyncParentGroup to be an explicit nil
func (o *PatchedLDAPSourceRequest) SetSyncParentGroupNil() {
	o.SyncParentGroup.Set(nil)
}

// UnsetSyncParentGroup ensures that no value is present for SyncParentGroup, not even an explicit nil
func (o *PatchedLDAPSourceRequest) UnsetSyncParentGroup() {
	o.SyncParentGroup.Unset()
}

func (o PatchedLDAPSourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedLDAPSourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.AuthenticationFlow.IsSet() {
		toSerialize["authentication_flow"] = o.AuthenticationFlow.Get()
	}
	if o.EnrollmentFlow.IsSet() {
		toSerialize["enrollment_flow"] = o.EnrollmentFlow.Get()
	}
	if !IsNil(o.UserPropertyMappings) {
		toSerialize["user_property_mappings"] = o.UserPropertyMappings
	}
	if !IsNil(o.GroupPropertyMappings) {
		toSerialize["group_property_mappings"] = o.GroupPropertyMappings
	}
	if !IsNil(o.PolicyEngineMode) {
		toSerialize["policy_engine_mode"] = o.PolicyEngineMode
	}
	if !IsNil(o.UserMatchingMode) {
		toSerialize["user_matching_mode"] = o.UserMatchingMode
	}
	if !IsNil(o.UserPathTemplate) {
		toSerialize["user_path_template"] = o.UserPathTemplate
	}
	if !IsNil(o.ServerUri) {
		toSerialize["server_uri"] = o.ServerUri
	}
	if o.PeerCertificate.IsSet() {
		toSerialize["peer_certificate"] = o.PeerCertificate.Get()
	}
	if o.ClientCertificate.IsSet() {
		toSerialize["client_certificate"] = o.ClientCertificate.Get()
	}
	if !IsNil(o.BindCn) {
		toSerialize["bind_cn"] = o.BindCn
	}
	if !IsNil(o.BindPassword) {
		toSerialize["bind_password"] = o.BindPassword
	}
	if !IsNil(o.StartTls) {
		toSerialize["start_tls"] = o.StartTls
	}
	if !IsNil(o.Sni) {
		toSerialize["sni"] = o.Sni
	}
	if !IsNil(o.BaseDn) {
		toSerialize["base_dn"] = o.BaseDn
	}
	if !IsNil(o.AdditionalUserDn) {
		toSerialize["additional_user_dn"] = o.AdditionalUserDn
	}
	if !IsNil(o.AdditionalGroupDn) {
		toSerialize["additional_group_dn"] = o.AdditionalGroupDn
	}
	if !IsNil(o.UserObjectFilter) {
		toSerialize["user_object_filter"] = o.UserObjectFilter
	}
	if !IsNil(o.GroupObjectFilter) {
		toSerialize["group_object_filter"] = o.GroupObjectFilter
	}
	if !IsNil(o.GroupMembershipField) {
		toSerialize["group_membership_field"] = o.GroupMembershipField
	}
	if !IsNil(o.ObjectUniquenessField) {
		toSerialize["object_uniqueness_field"] = o.ObjectUniquenessField
	}
	if !IsNil(o.PasswordLoginUpdateInternalPassword) {
		toSerialize["password_login_update_internal_password"] = o.PasswordLoginUpdateInternalPassword
	}
	if !IsNil(o.SyncUsers) {
		toSerialize["sync_users"] = o.SyncUsers
	}
	if !IsNil(o.SyncUsersPassword) {
		toSerialize["sync_users_password"] = o.SyncUsersPassword
	}
	if !IsNil(o.SyncGroups) {
		toSerialize["sync_groups"] = o.SyncGroups
	}
	if o.SyncParentGroup.IsSet() {
		toSerialize["sync_parent_group"] = o.SyncParentGroup.Get()
	}
	return toSerialize, nil
}

type NullablePatchedLDAPSourceRequest struct {
	value *PatchedLDAPSourceRequest
	isSet bool
}

func (v NullablePatchedLDAPSourceRequest) Get() *PatchedLDAPSourceRequest {
	return v.value
}

func (v *NullablePatchedLDAPSourceRequest) Set(val *PatchedLDAPSourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedLDAPSourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedLDAPSourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedLDAPSourceRequest(val *PatchedLDAPSourceRequest) *NullablePatchedLDAPSourceRequest {
	return &NullablePatchedLDAPSourceRequest{value: val, isSet: true}
}

func (v NullablePatchedLDAPSourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedLDAPSourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
