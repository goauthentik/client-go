/*
authentik

Making authentication simple.

API version: 2025.10.0-rc1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// RedirectStageModeEnum the model 'RedirectStageModeEnum'
type RedirectStageModeEnum string

// List of RedirectStageModeEnum
const (
	REDIRECTSTAGEMODEENUM_STATIC RedirectStageModeEnum = "static"
	REDIRECTSTAGEMODEENUM_FLOW   RedirectStageModeEnum = "flow"
)

// All allowed values of RedirectStageModeEnum enum
var AllowedRedirectStageModeEnumEnumValues = []RedirectStageModeEnum{
	"static",
	"flow",
}

func (v *RedirectStageModeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RedirectStageModeEnum(value)
	for _, existing := range AllowedRedirectStageModeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RedirectStageModeEnum", value)
}

// NewRedirectStageModeEnumFromValue returns a pointer to a valid RedirectStageModeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRedirectStageModeEnumFromValue(v string) (*RedirectStageModeEnum, error) {
	ev := RedirectStageModeEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RedirectStageModeEnum: valid values are %v", v, AllowedRedirectStageModeEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RedirectStageModeEnum) IsValid() bool {
	for _, existing := range AllowedRedirectStageModeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RedirectStageModeEnum value
func (v RedirectStageModeEnum) Ptr() *RedirectStageModeEnum {
	return &v
}

type NullableRedirectStageModeEnum struct {
	value *RedirectStageModeEnum
	isSet bool
}

func (v NullableRedirectStageModeEnum) Get() *RedirectStageModeEnum {
	return v.value
}

func (v *NullableRedirectStageModeEnum) Set(val *RedirectStageModeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableRedirectStageModeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableRedirectStageModeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedirectStageModeEnum(val *RedirectStageModeEnum) *NullableRedirectStageModeEnum {
	return &NullableRedirectStageModeEnum{value: val, isSet: true}
}

func (v NullableRedirectStageModeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedirectStageModeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
