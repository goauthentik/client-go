/*
authentik

Making authentication simple.

API version: 2025.4.1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PatchedSSFProviderRequest SSFProvider Serializer
type PatchedSSFProviderRequest struct {
	Name *string `json:"name,omitempty"`
	// Key used to sign the SSF Events.
	SigningKey        *string `json:"signing_key,omitempty"`
	OidcAuthProviders []int32 `json:"oidc_auth_providers,omitempty"`
	EventRetention    *string `json:"event_retention,omitempty"`
}

// NewPatchedSSFProviderRequest instantiates a new PatchedSSFProviderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedSSFProviderRequest() *PatchedSSFProviderRequest {
	this := PatchedSSFProviderRequest{}
	return &this
}

// NewPatchedSSFProviderRequestWithDefaults instantiates a new PatchedSSFProviderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedSSFProviderRequestWithDefaults() *PatchedSSFProviderRequest {
	this := PatchedSSFProviderRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedSSFProviderRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSSFProviderRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedSSFProviderRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedSSFProviderRequest) SetName(v string) {
	o.Name = &v
}

// GetSigningKey returns the SigningKey field value if set, zero value otherwise.
func (o *PatchedSSFProviderRequest) GetSigningKey() string {
	if o == nil || o.SigningKey == nil {
		var ret string
		return ret
	}
	return *o.SigningKey
}

// GetSigningKeyOk returns a tuple with the SigningKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSSFProviderRequest) GetSigningKeyOk() (*string, bool) {
	if o == nil || o.SigningKey == nil {
		return nil, false
	}
	return o.SigningKey, true
}

// HasSigningKey returns a boolean if a field has been set.
func (o *PatchedSSFProviderRequest) HasSigningKey() bool {
	if o != nil && o.SigningKey != nil {
		return true
	}

	return false
}

// SetSigningKey gets a reference to the given string and assigns it to the SigningKey field.
func (o *PatchedSSFProviderRequest) SetSigningKey(v string) {
	o.SigningKey = &v
}

// GetOidcAuthProviders returns the OidcAuthProviders field value if set, zero value otherwise.
func (o *PatchedSSFProviderRequest) GetOidcAuthProviders() []int32 {
	if o == nil || o.OidcAuthProviders == nil {
		var ret []int32
		return ret
	}
	return o.OidcAuthProviders
}

// GetOidcAuthProvidersOk returns a tuple with the OidcAuthProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSSFProviderRequest) GetOidcAuthProvidersOk() ([]int32, bool) {
	if o == nil || o.OidcAuthProviders == nil {
		return nil, false
	}
	return o.OidcAuthProviders, true
}

// HasOidcAuthProviders returns a boolean if a field has been set.
func (o *PatchedSSFProviderRequest) HasOidcAuthProviders() bool {
	if o != nil && o.OidcAuthProviders != nil {
		return true
	}

	return false
}

// SetOidcAuthProviders gets a reference to the given []int32 and assigns it to the OidcAuthProviders field.
func (o *PatchedSSFProviderRequest) SetOidcAuthProviders(v []int32) {
	o.OidcAuthProviders = v
}

// GetEventRetention returns the EventRetention field value if set, zero value otherwise.
func (o *PatchedSSFProviderRequest) GetEventRetention() string {
	if o == nil || o.EventRetention == nil {
		var ret string
		return ret
	}
	return *o.EventRetention
}

// GetEventRetentionOk returns a tuple with the EventRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSSFProviderRequest) GetEventRetentionOk() (*string, bool) {
	if o == nil || o.EventRetention == nil {
		return nil, false
	}
	return o.EventRetention, true
}

// HasEventRetention returns a boolean if a field has been set.
func (o *PatchedSSFProviderRequest) HasEventRetention() bool {
	if o != nil && o.EventRetention != nil {
		return true
	}

	return false
}

// SetEventRetention gets a reference to the given string and assigns it to the EventRetention field.
func (o *PatchedSSFProviderRequest) SetEventRetention(v string) {
	o.EventRetention = &v
}

func (o PatchedSSFProviderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SigningKey != nil {
		toSerialize["signing_key"] = o.SigningKey
	}
	if o.OidcAuthProviders != nil {
		toSerialize["oidc_auth_providers"] = o.OidcAuthProviders
	}
	if o.EventRetention != nil {
		toSerialize["event_retention"] = o.EventRetention
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedSSFProviderRequest struct {
	value *PatchedSSFProviderRequest
	isSet bool
}

func (v NullablePatchedSSFProviderRequest) Get() *PatchedSSFProviderRequest {
	return v.value
}

func (v *NullablePatchedSSFProviderRequest) Set(val *PatchedSSFProviderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedSSFProviderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedSSFProviderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedSSFProviderRequest(val *PatchedSSFProviderRequest) *NullablePatchedSSFProviderRequest {
	return &NullablePatchedSSFProviderRequest{value: val, isSet: true}
}

func (v NullablePatchedSSFProviderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedSSFProviderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
