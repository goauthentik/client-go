/*
authentik

Making authentication simple.

API version: 2024.4.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// GoogleWorkspaceDeleteAction the model 'GoogleWorkspaceDeleteAction'
type GoogleWorkspaceDeleteAction string

// List of GoogleWorkspaceDeleteAction
const (
	GOOGLEWORKSPACEDELETEACTION_DO_NOTHING GoogleWorkspaceDeleteAction = "do_nothing"
	GOOGLEWORKSPACEDELETEACTION_DELETE     GoogleWorkspaceDeleteAction = "delete"
	GOOGLEWORKSPACEDELETEACTION_SUSPEND    GoogleWorkspaceDeleteAction = "suspend"
)

// All allowed values of GoogleWorkspaceDeleteAction enum
var AllowedGoogleWorkspaceDeleteActionEnumValues = []GoogleWorkspaceDeleteAction{
	"do_nothing",
	"delete",
	"suspend",
}

func (v *GoogleWorkspaceDeleteAction) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GoogleWorkspaceDeleteAction(value)
	for _, existing := range AllowedGoogleWorkspaceDeleteActionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GoogleWorkspaceDeleteAction", value)
}

// NewGoogleWorkspaceDeleteActionFromValue returns a pointer to a valid GoogleWorkspaceDeleteAction
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGoogleWorkspaceDeleteActionFromValue(v string) (*GoogleWorkspaceDeleteAction, error) {
	ev := GoogleWorkspaceDeleteAction(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GoogleWorkspaceDeleteAction: valid values are %v", v, AllowedGoogleWorkspaceDeleteActionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GoogleWorkspaceDeleteAction) IsValid() bool {
	for _, existing := range AllowedGoogleWorkspaceDeleteActionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GoogleWorkspaceDeleteAction value
func (v GoogleWorkspaceDeleteAction) Ptr() *GoogleWorkspaceDeleteAction {
	return &v
}

type NullableGoogleWorkspaceDeleteAction struct {
	value *GoogleWorkspaceDeleteAction
	isSet bool
}

func (v NullableGoogleWorkspaceDeleteAction) Get() *GoogleWorkspaceDeleteAction {
	return v.value
}

func (v *NullableGoogleWorkspaceDeleteAction) Set(val *GoogleWorkspaceDeleteAction) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleWorkspaceDeleteAction) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleWorkspaceDeleteAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleWorkspaceDeleteAction(val *GoogleWorkspaceDeleteAction) *NullableGoogleWorkspaceDeleteAction {
	return &NullableGoogleWorkspaceDeleteAction{value: val, isSet: true}
}

func (v NullableGoogleWorkspaceDeleteAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleWorkspaceDeleteAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
