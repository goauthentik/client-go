/*
authentik

Making authentication simple.

API version: 2025.6.4
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// EventVolume Count of events of action created on day
type EventVolume struct {
	Action EventActions `json:"action"`
	Time   time.Time    `json:"time"`
	Count  int32        `json:"count"`
}

// NewEventVolume instantiates a new EventVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventVolume(action EventActions, time time.Time, count int32) *EventVolume {
	this := EventVolume{}
	this.Action = action
	this.Time = time
	this.Count = count
	return &this
}

// NewEventVolumeWithDefaults instantiates a new EventVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventVolumeWithDefaults() *EventVolume {
	this := EventVolume{}
	return &this
}

// GetAction returns the Action field value
func (o *EventVolume) GetAction() EventActions {
	if o == nil {
		var ret EventActions
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *EventVolume) GetActionOk() (*EventActions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *EventVolume) SetAction(v EventActions) {
	o.Action = v
}

// GetTime returns the Time field value
func (o *EventVolume) GetTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *EventVolume) GetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *EventVolume) SetTime(v time.Time) {
	o.Time = v
}

// GetCount returns the Count field value
func (o *EventVolume) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *EventVolume) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *EventVolume) SetCount(v int32) {
	o.Count = v
}

func (o EventVolume) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if true {
		toSerialize["time"] = o.Time
	}
	if true {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableEventVolume struct {
	value *EventVolume
	isSet bool
}

func (v NullableEventVolume) Get() *EventVolume {
	return v.value
}

func (v *NullableEventVolume) Set(val *EventVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableEventVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableEventVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventVolume(val *EventVolume) *NullableEventVolume {
	return &NullableEventVolume{value: val, isSet: true}
}

func (v NullableEventVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
