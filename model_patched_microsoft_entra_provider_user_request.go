/*
authentik

Making authentication simple.

API version: 2024.4.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PatchedMicrosoftEntraProviderUserRequest MicrosoftEntraProviderUser Serializer
type PatchedMicrosoftEntraProviderUserRequest struct {
	User *int32 `json:"user,omitempty"`
}

// NewPatchedMicrosoftEntraProviderUserRequest instantiates a new PatchedMicrosoftEntraProviderUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedMicrosoftEntraProviderUserRequest() *PatchedMicrosoftEntraProviderUserRequest {
	this := PatchedMicrosoftEntraProviderUserRequest{}
	return &this
}

// NewPatchedMicrosoftEntraProviderUserRequestWithDefaults instantiates a new PatchedMicrosoftEntraProviderUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedMicrosoftEntraProviderUserRequestWithDefaults() *PatchedMicrosoftEntraProviderUserRequest {
	this := PatchedMicrosoftEntraProviderUserRequest{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *PatchedMicrosoftEntraProviderUserRequest) GetUser() int32 {
	if o == nil || o.User == nil {
		var ret int32
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedMicrosoftEntraProviderUserRequest) GetUserOk() (*int32, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *PatchedMicrosoftEntraProviderUserRequest) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given int32 and assigns it to the User field.
func (o *PatchedMicrosoftEntraProviderUserRequest) SetUser(v int32) {
	o.User = &v
}

func (o PatchedMicrosoftEntraProviderUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedMicrosoftEntraProviderUserRequest struct {
	value *PatchedMicrosoftEntraProviderUserRequest
	isSet bool
}

func (v NullablePatchedMicrosoftEntraProviderUserRequest) Get() *PatchedMicrosoftEntraProviderUserRequest {
	return v.value
}

func (v *NullablePatchedMicrosoftEntraProviderUserRequest) Set(val *PatchedMicrosoftEntraProviderUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedMicrosoftEntraProviderUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedMicrosoftEntraProviderUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedMicrosoftEntraProviderUserRequest(val *PatchedMicrosoftEntraProviderUserRequest) *NullablePatchedMicrosoftEntraProviderUserRequest {
	return &NullablePatchedMicrosoftEntraProviderUserRequest{value: val, isSet: true}
}

func (v NullablePatchedMicrosoftEntraProviderUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedMicrosoftEntraProviderUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
