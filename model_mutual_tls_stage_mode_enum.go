/*
authentik

Making authentication simple.

API version: 2025.4.1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// MutualTLSStageModeEnum the model 'MutualTLSStageModeEnum'
type MutualTLSStageModeEnum string

// List of MutualTLSStageModeEnum
const (
	MUTUALTLSSTAGEMODEENUM_OPTIONAL MutualTLSStageModeEnum = "optional"
	MUTUALTLSSTAGEMODEENUM_REQUIRED MutualTLSStageModeEnum = "required"
)

// All allowed values of MutualTLSStageModeEnum enum
var AllowedMutualTLSStageModeEnumEnumValues = []MutualTLSStageModeEnum{
	"optional",
	"required",
}

func (v *MutualTLSStageModeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MutualTLSStageModeEnum(value)
	for _, existing := range AllowedMutualTLSStageModeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MutualTLSStageModeEnum", value)
}

// NewMutualTLSStageModeEnumFromValue returns a pointer to a valid MutualTLSStageModeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMutualTLSStageModeEnumFromValue(v string) (*MutualTLSStageModeEnum, error) {
	ev := MutualTLSStageModeEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MutualTLSStageModeEnum: valid values are %v", v, AllowedMutualTLSStageModeEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MutualTLSStageModeEnum) IsValid() bool {
	for _, existing := range AllowedMutualTLSStageModeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MutualTLSStageModeEnum value
func (v MutualTLSStageModeEnum) Ptr() *MutualTLSStageModeEnum {
	return &v
}

type NullableMutualTLSStageModeEnum struct {
	value *MutualTLSStageModeEnum
	isSet bool
}

func (v NullableMutualTLSStageModeEnum) Get() *MutualTLSStageModeEnum {
	return v.value
}

func (v *NullableMutualTLSStageModeEnum) Set(val *MutualTLSStageModeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMutualTLSStageModeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMutualTLSStageModeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutualTLSStageModeEnum(val *MutualTLSStageModeEnum) *NullableMutualTLSStageModeEnum {
	return &NullableMutualTLSStageModeEnum{value: val, isSet: true}
}

func (v NullableMutualTLSStageModeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutualTLSStageModeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
