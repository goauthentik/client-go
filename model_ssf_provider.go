/*
authentik

Making authentication simple.

API version: 2025.6.1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SSFProvider SSFProvider Serializer
type SSFProvider struct {
	Pk   int32  `json:"pk"`
	Name string `json:"name"`
	// Get object component so that we know how to edit the object
	Component string `json:"component"`
	// Return object's verbose_name
	VerboseName string `json:"verbose_name"`
	// Return object's plural verbose_name
	VerboseNamePlural string `json:"verbose_name_plural"`
	// Return internal model name
	MetaModelName string `json:"meta_model_name"`
	// Key used to sign the SSF Events.
	SigningKey        string         `json:"signing_key"`
	TokenObj          Token          `json:"token_obj"`
	OidcAuthProviders []int32        `json:"oidc_auth_providers,omitempty"`
	SsfUrl            NullableString `json:"ssf_url"`
	EventRetention    *string        `json:"event_retention,omitempty"`
}

// NewSSFProvider instantiates a new SSFProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSFProvider(pk int32, name string, component string, verboseName string, verboseNamePlural string, metaModelName string, signingKey string, tokenObj Token, ssfUrl NullableString) *SSFProvider {
	this := SSFProvider{}
	this.Pk = pk
	this.Name = name
	this.Component = component
	this.VerboseName = verboseName
	this.VerboseNamePlural = verboseNamePlural
	this.MetaModelName = metaModelName
	this.SigningKey = signingKey
	this.TokenObj = tokenObj
	this.SsfUrl = ssfUrl
	return &this
}

// NewSSFProviderWithDefaults instantiates a new SSFProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSFProviderWithDefaults() *SSFProvider {
	this := SSFProvider{}
	return &this
}

// GetPk returns the Pk field value
func (o *SSFProvider) GetPk() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetPkOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *SSFProvider) SetPk(v int32) {
	o.Pk = v
}

// GetName returns the Name field value
func (o *SSFProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SSFProvider) SetName(v string) {
	o.Name = v
}

// GetComponent returns the Component field value
func (o *SSFProvider) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *SSFProvider) SetComponent(v string) {
	o.Component = v
}

// GetVerboseName returns the VerboseName field value
func (o *SSFProvider) GetVerboseName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerboseName
}

// GetVerboseNameOk returns a tuple with the VerboseName field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetVerboseNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerboseName, true
}

// SetVerboseName sets field value
func (o *SSFProvider) SetVerboseName(v string) {
	o.VerboseName = v
}

// GetVerboseNamePlural returns the VerboseNamePlural field value
func (o *SSFProvider) GetVerboseNamePlural() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerboseNamePlural
}

// GetVerboseNamePluralOk returns a tuple with the VerboseNamePlural field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetVerboseNamePluralOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerboseNamePlural, true
}

// SetVerboseNamePlural sets field value
func (o *SSFProvider) SetVerboseNamePlural(v string) {
	o.VerboseNamePlural = v
}

// GetMetaModelName returns the MetaModelName field value
func (o *SSFProvider) GetMetaModelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaModelName
}

// GetMetaModelNameOk returns a tuple with the MetaModelName field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetMetaModelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaModelName, true
}

// SetMetaModelName sets field value
func (o *SSFProvider) SetMetaModelName(v string) {
	o.MetaModelName = v
}

// GetSigningKey returns the SigningKey field value
func (o *SSFProvider) GetSigningKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SigningKey
}

// GetSigningKeyOk returns a tuple with the SigningKey field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetSigningKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SigningKey, true
}

// SetSigningKey sets field value
func (o *SSFProvider) SetSigningKey(v string) {
	o.SigningKey = v
}

// GetTokenObj returns the TokenObj field value
func (o *SSFProvider) GetTokenObj() Token {
	if o == nil {
		var ret Token
		return ret
	}

	return o.TokenObj
}

// GetTokenObjOk returns a tuple with the TokenObj field value
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetTokenObjOk() (*Token, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenObj, true
}

// SetTokenObj sets field value
func (o *SSFProvider) SetTokenObj(v Token) {
	o.TokenObj = v
}

// GetOidcAuthProviders returns the OidcAuthProviders field value if set, zero value otherwise.
func (o *SSFProvider) GetOidcAuthProviders() []int32 {
	if o == nil || o.OidcAuthProviders == nil {
		var ret []int32
		return ret
	}
	return o.OidcAuthProviders
}

// GetOidcAuthProvidersOk returns a tuple with the OidcAuthProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetOidcAuthProvidersOk() ([]int32, bool) {
	if o == nil || o.OidcAuthProviders == nil {
		return nil, false
	}
	return o.OidcAuthProviders, true
}

// HasOidcAuthProviders returns a boolean if a field has been set.
func (o *SSFProvider) HasOidcAuthProviders() bool {
	if o != nil && o.OidcAuthProviders != nil {
		return true
	}

	return false
}

// SetOidcAuthProviders gets a reference to the given []int32 and assigns it to the OidcAuthProviders field.
func (o *SSFProvider) SetOidcAuthProviders(v []int32) {
	o.OidcAuthProviders = v
}

// GetSsfUrl returns the SsfUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SSFProvider) GetSsfUrl() string {
	if o == nil || o.SsfUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.SsfUrl.Get()
}

// GetSsfUrlOk returns a tuple with the SsfUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SSFProvider) GetSsfUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SsfUrl.Get(), o.SsfUrl.IsSet()
}

// SetSsfUrl sets field value
func (o *SSFProvider) SetSsfUrl(v string) {
	o.SsfUrl.Set(&v)
}

// GetEventRetention returns the EventRetention field value if set, zero value otherwise.
func (o *SSFProvider) GetEventRetention() string {
	if o == nil || o.EventRetention == nil {
		var ret string
		return ret
	}
	return *o.EventRetention
}

// GetEventRetentionOk returns a tuple with the EventRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSFProvider) GetEventRetentionOk() (*string, bool) {
	if o == nil || o.EventRetention == nil {
		return nil, false
	}
	return o.EventRetention, true
}

// HasEventRetention returns a boolean if a field has been set.
func (o *SSFProvider) HasEventRetention() bool {
	if o != nil && o.EventRetention != nil {
		return true
	}

	return false
}

// SetEventRetention gets a reference to the given string and assigns it to the EventRetention field.
func (o *SSFProvider) SetEventRetention(v string) {
	o.EventRetention = &v
}

func (o SSFProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["component"] = o.Component
	}
	if true {
		toSerialize["verbose_name"] = o.VerboseName
	}
	if true {
		toSerialize["verbose_name_plural"] = o.VerboseNamePlural
	}
	if true {
		toSerialize["meta_model_name"] = o.MetaModelName
	}
	if true {
		toSerialize["signing_key"] = o.SigningKey
	}
	if true {
		toSerialize["token_obj"] = o.TokenObj
	}
	if o.OidcAuthProviders != nil {
		toSerialize["oidc_auth_providers"] = o.OidcAuthProviders
	}
	if true {
		toSerialize["ssf_url"] = o.SsfUrl.Get()
	}
	if o.EventRetention != nil {
		toSerialize["event_retention"] = o.EventRetention
	}
	return json.Marshal(toSerialize)
}

type NullableSSFProvider struct {
	value *SSFProvider
	isSet bool
}

func (v NullableSSFProvider) Get() *SSFProvider {
	return v.value
}

func (v *NullableSSFProvider) Set(val *SSFProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableSSFProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableSSFProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSFProvider(val *SSFProvider) *NullableSSFProvider {
	return &NullableSSFProvider{value: val, isSet: true}
}

func (v NullableSSFProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSFProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
