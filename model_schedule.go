/*
authentik

Making authentication simple.

API version: 2025.12.0-rc1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// Schedule struct for Schedule
type Schedule struct {
	Id string `json:"id"`
	// Unique schedule identifier
	Identifier NullableString `json:"identifier"`
	Uid        string         `json:"uid"`
	// Dramatiq actor to call
	ActorName      string         `json:"actor_name"`
	RelObjAppLabel string         `json:"rel_obj_app_label"`
	RelObjModel    string         `json:"rel_obj_model"`
	RelObjId       NullableString `json:"rel_obj_id,omitempty"`
	// When to schedule tasks
	Crontab string `json:"crontab"`
	// Pause this schedule
	Paused         *bool                      `json:"paused,omitempty"`
	NextRun        time.Time                  `json:"next_run"`
	Description    NullableString             `json:"description"`
	LastTaskStatus NullableLastTaskStatusEnum `json:"last_task_status"`
}

// NewSchedule instantiates a new Schedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedule(id string, identifier NullableString, uid string, actorName string, relObjAppLabel string, relObjModel string, crontab string, nextRun time.Time, description NullableString, lastTaskStatus NullableLastTaskStatusEnum) *Schedule {
	this := Schedule{}
	this.Id = id
	this.Identifier = identifier
	this.Uid = uid
	this.ActorName = actorName
	this.RelObjAppLabel = relObjAppLabel
	this.RelObjModel = relObjModel
	this.Crontab = crontab
	this.NextRun = nextRun
	this.Description = description
	this.LastTaskStatus = lastTaskStatus
	return &this
}

// NewScheduleWithDefaults instantiates a new Schedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleWithDefaults() *Schedule {
	this := Schedule{}
	return &this
}

// GetId returns the Id field value
func (o *Schedule) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Schedule) SetId(v string) {
	o.Id = v
}

// GetIdentifier returns the Identifier field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Schedule) GetIdentifier() string {
	if o == nil || o.Identifier.Get() == nil {
		var ret string
		return ret
	}

	return *o.Identifier.Get()
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Schedule) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identifier.Get(), o.Identifier.IsSet()
}

// SetIdentifier sets field value
func (o *Schedule) SetIdentifier(v string) {
	o.Identifier.Set(&v)
}

// GetUid returns the Uid field value
func (o *Schedule) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *Schedule) SetUid(v string) {
	o.Uid = v
}

// GetActorName returns the ActorName field value
func (o *Schedule) GetActorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorName
}

// GetActorNameOk returns a tuple with the ActorName field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetActorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorName, true
}

// SetActorName sets field value
func (o *Schedule) SetActorName(v string) {
	o.ActorName = v
}

// GetRelObjAppLabel returns the RelObjAppLabel field value
func (o *Schedule) GetRelObjAppLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelObjAppLabel
}

// GetRelObjAppLabelOk returns a tuple with the RelObjAppLabel field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetRelObjAppLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelObjAppLabel, true
}

// SetRelObjAppLabel sets field value
func (o *Schedule) SetRelObjAppLabel(v string) {
	o.RelObjAppLabel = v
}

// GetRelObjModel returns the RelObjModel field value
func (o *Schedule) GetRelObjModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelObjModel
}

// GetRelObjModelOk returns a tuple with the RelObjModel field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetRelObjModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelObjModel, true
}

// SetRelObjModel sets field value
func (o *Schedule) SetRelObjModel(v string) {
	o.RelObjModel = v
}

// GetRelObjId returns the RelObjId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Schedule) GetRelObjId() string {
	if o == nil || o.RelObjId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RelObjId.Get()
}

// GetRelObjIdOk returns a tuple with the RelObjId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Schedule) GetRelObjIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelObjId.Get(), o.RelObjId.IsSet()
}

// HasRelObjId returns a boolean if a field has been set.
func (o *Schedule) HasRelObjId() bool {
	if o != nil && o.RelObjId.IsSet() {
		return true
	}

	return false
}

// SetRelObjId gets a reference to the given NullableString and assigns it to the RelObjId field.
func (o *Schedule) SetRelObjId(v string) {
	o.RelObjId.Set(&v)
}

// SetRelObjIdNil sets the value for RelObjId to be an explicit nil
func (o *Schedule) SetRelObjIdNil() {
	o.RelObjId.Set(nil)
}

// UnsetRelObjId ensures that no value is present for RelObjId, not even an explicit nil
func (o *Schedule) UnsetRelObjId() {
	o.RelObjId.Unset()
}

// GetCrontab returns the Crontab field value
func (o *Schedule) GetCrontab() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Crontab
}

// GetCrontabOk returns a tuple with the Crontab field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetCrontabOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Crontab, true
}

// SetCrontab sets field value
func (o *Schedule) SetCrontab(v string) {
	o.Crontab = v
}

// GetPaused returns the Paused field value if set, zero value otherwise.
func (o *Schedule) GetPaused() bool {
	if o == nil || o.Paused == nil {
		var ret bool
		return ret
	}
	return *o.Paused
}

// GetPausedOk returns a tuple with the Paused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule) GetPausedOk() (*bool, bool) {
	if o == nil || o.Paused == nil {
		return nil, false
	}
	return o.Paused, true
}

// HasPaused returns a boolean if a field has been set.
func (o *Schedule) HasPaused() bool {
	if o != nil && o.Paused != nil {
		return true
	}

	return false
}

// SetPaused gets a reference to the given bool and assigns it to the Paused field.
func (o *Schedule) SetPaused(v bool) {
	o.Paused = &v
}

// GetNextRun returns the NextRun field value
func (o *Schedule) GetNextRun() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.NextRun
}

// GetNextRunOk returns a tuple with the NextRun field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetNextRunOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextRun, true
}

// SetNextRun sets field value
func (o *Schedule) SetNextRun(v time.Time) {
	o.NextRun = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Schedule) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Schedule) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Schedule) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetLastTaskStatus returns the LastTaskStatus field value
// If the value is explicit nil, the zero value for LastTaskStatusEnum will be returned
func (o *Schedule) GetLastTaskStatus() LastTaskStatusEnum {
	if o == nil || o.LastTaskStatus.Get() == nil {
		var ret LastTaskStatusEnum
		return ret
	}

	return *o.LastTaskStatus.Get()
}

// GetLastTaskStatusOk returns a tuple with the LastTaskStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Schedule) GetLastTaskStatusOk() (*LastTaskStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTaskStatus.Get(), o.LastTaskStatus.IsSet()
}

// SetLastTaskStatus sets field value
func (o *Schedule) SetLastTaskStatus(v LastTaskStatusEnum) {
	o.LastTaskStatus.Set(&v)
}

func (o Schedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["identifier"] = o.Identifier.Get()
	}
	if true {
		toSerialize["uid"] = o.Uid
	}
	if true {
		toSerialize["actor_name"] = o.ActorName
	}
	if true {
		toSerialize["rel_obj_app_label"] = o.RelObjAppLabel
	}
	if true {
		toSerialize["rel_obj_model"] = o.RelObjModel
	}
	if o.RelObjId.IsSet() {
		toSerialize["rel_obj_id"] = o.RelObjId.Get()
	}
	if true {
		toSerialize["crontab"] = o.Crontab
	}
	if o.Paused != nil {
		toSerialize["paused"] = o.Paused
	}
	if true {
		toSerialize["next_run"] = o.NextRun
	}
	if true {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["last_task_status"] = o.LastTaskStatus.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSchedule struct {
	value *Schedule
	isSet bool
}

func (v NullableSchedule) Get() *Schedule {
	return v.value
}

func (v *NullableSchedule) Set(val *Schedule) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedule(val *Schedule) *NullableSchedule {
	return &NullableSchedule{value: val, isSet: true}
}

func (v NullableSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
