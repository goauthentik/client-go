/*
authentik

Making authentication simple.

API version: 2023.6.1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// IdentificationStage IdentificationStage Serializer
type IdentificationStage struct {
	Pk   string `json:"pk"`
	Name string `json:"name"`
	// Get object type so that we know how to edit the object
	Component string `json:"component"`
	// Return object's verbose_name
	VerboseName string `json:"verbose_name"`
	// Return object's plural verbose_name
	VerboseNamePlural string `json:"verbose_name_plural"`
	// Return internal model name
	MetaModelName string    `json:"meta_model_name"`
	FlowSet       []FlowSet `json:"flow_set,omitempty"`
	// Fields of the user object to match against. (Hold shift to select multiple options)
	UserFields []UserFieldsEnum `json:"user_fields,omitempty"`
	// When set, shows a password field, instead of showing the password field as seaprate step.
	PasswordStage NullableString `json:"password_stage,omitempty"`
	// When enabled, user fields are matched regardless of their casing.
	CaseInsensitiveMatching *bool `json:"case_insensitive_matching,omitempty"`
	// When a valid username/email has been entered, and this option is enabled, the user's username and avatar will be shown. Otherwise, the text that the user entered will be shown
	ShowMatchedUser *bool `json:"show_matched_user,omitempty"`
	// Optional enrollment flow, which is linked at the bottom of the page.
	EnrollmentFlow NullableString `json:"enrollment_flow,omitempty"`
	// Optional recovery flow, which is linked at the bottom of the page.
	RecoveryFlow NullableString `json:"recovery_flow,omitempty"`
	// Optional passwordless flow, which is linked at the bottom of the page.
	PasswordlessFlow NullableString `json:"passwordless_flow,omitempty"`
	// Specify which sources should be shown.
	Sources          []string `json:"sources,omitempty"`
	ShowSourceLabels *bool    `json:"show_source_labels,omitempty"`
}

// NewIdentificationStage instantiates a new IdentificationStage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentificationStage(pk string, name string, component string, verboseName string, verboseNamePlural string, metaModelName string) *IdentificationStage {
	this := IdentificationStage{}
	this.Pk = pk
	this.Name = name
	this.Component = component
	this.VerboseName = verboseName
	this.VerboseNamePlural = verboseNamePlural
	this.MetaModelName = metaModelName
	return &this
}

// NewIdentificationStageWithDefaults instantiates a new IdentificationStage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentificationStageWithDefaults() *IdentificationStage {
	this := IdentificationStage{}
	return &this
}

// GetPk returns the Pk field value
func (o *IdentificationStage) GetPk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetPkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *IdentificationStage) SetPk(v string) {
	o.Pk = v
}

// GetName returns the Name field value
func (o *IdentificationStage) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IdentificationStage) SetName(v string) {
	o.Name = v
}

// GetComponent returns the Component field value
func (o *IdentificationStage) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *IdentificationStage) SetComponent(v string) {
	o.Component = v
}

// GetVerboseName returns the VerboseName field value
func (o *IdentificationStage) GetVerboseName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerboseName
}

// GetVerboseNameOk returns a tuple with the VerboseName field value
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetVerboseNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerboseName, true
}

// SetVerboseName sets field value
func (o *IdentificationStage) SetVerboseName(v string) {
	o.VerboseName = v
}

// GetVerboseNamePlural returns the VerboseNamePlural field value
func (o *IdentificationStage) GetVerboseNamePlural() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerboseNamePlural
}

// GetVerboseNamePluralOk returns a tuple with the VerboseNamePlural field value
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetVerboseNamePluralOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerboseNamePlural, true
}

// SetVerboseNamePlural sets field value
func (o *IdentificationStage) SetVerboseNamePlural(v string) {
	o.VerboseNamePlural = v
}

// GetMetaModelName returns the MetaModelName field value
func (o *IdentificationStage) GetMetaModelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaModelName
}

// GetMetaModelNameOk returns a tuple with the MetaModelName field value
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetMetaModelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaModelName, true
}

// SetMetaModelName sets field value
func (o *IdentificationStage) SetMetaModelName(v string) {
	o.MetaModelName = v
}

// GetFlowSet returns the FlowSet field value if set, zero value otherwise.
func (o *IdentificationStage) GetFlowSet() []FlowSet {
	if o == nil || o.FlowSet == nil {
		var ret []FlowSet
		return ret
	}
	return o.FlowSet
}

// GetFlowSetOk returns a tuple with the FlowSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetFlowSetOk() ([]FlowSet, bool) {
	if o == nil || o.FlowSet == nil {
		return nil, false
	}
	return o.FlowSet, true
}

// HasFlowSet returns a boolean if a field has been set.
func (o *IdentificationStage) HasFlowSet() bool {
	if o != nil && o.FlowSet != nil {
		return true
	}

	return false
}

// SetFlowSet gets a reference to the given []FlowSet and assigns it to the FlowSet field.
func (o *IdentificationStage) SetFlowSet(v []FlowSet) {
	o.FlowSet = v
}

// GetUserFields returns the UserFields field value if set, zero value otherwise.
func (o *IdentificationStage) GetUserFields() []UserFieldsEnum {
	if o == nil || o.UserFields == nil {
		var ret []UserFieldsEnum
		return ret
	}
	return o.UserFields
}

// GetUserFieldsOk returns a tuple with the UserFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetUserFieldsOk() ([]UserFieldsEnum, bool) {
	if o == nil || o.UserFields == nil {
		return nil, false
	}
	return o.UserFields, true
}

// HasUserFields returns a boolean if a field has been set.
func (o *IdentificationStage) HasUserFields() bool {
	if o != nil && o.UserFields != nil {
		return true
	}

	return false
}

// SetUserFields gets a reference to the given []UserFieldsEnum and assigns it to the UserFields field.
func (o *IdentificationStage) SetUserFields(v []UserFieldsEnum) {
	o.UserFields = v
}

// GetPasswordStage returns the PasswordStage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentificationStage) GetPasswordStage() string {
	if o == nil || o.PasswordStage.Get() == nil {
		var ret string
		return ret
	}
	return *o.PasswordStage.Get()
}

// GetPasswordStageOk returns a tuple with the PasswordStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentificationStage) GetPasswordStageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasswordStage.Get(), o.PasswordStage.IsSet()
}

// HasPasswordStage returns a boolean if a field has been set.
func (o *IdentificationStage) HasPasswordStage() bool {
	if o != nil && o.PasswordStage.IsSet() {
		return true
	}

	return false
}

// SetPasswordStage gets a reference to the given NullableString and assigns it to the PasswordStage field.
func (o *IdentificationStage) SetPasswordStage(v string) {
	o.PasswordStage.Set(&v)
}

// SetPasswordStageNil sets the value for PasswordStage to be an explicit nil
func (o *IdentificationStage) SetPasswordStageNil() {
	o.PasswordStage.Set(nil)
}

// UnsetPasswordStage ensures that no value is present for PasswordStage, not even an explicit nil
func (o *IdentificationStage) UnsetPasswordStage() {
	o.PasswordStage.Unset()
}

// GetCaseInsensitiveMatching returns the CaseInsensitiveMatching field value if set, zero value otherwise.
func (o *IdentificationStage) GetCaseInsensitiveMatching() bool {
	if o == nil || o.CaseInsensitiveMatching == nil {
		var ret bool
		return ret
	}
	return *o.CaseInsensitiveMatching
}

// GetCaseInsensitiveMatchingOk returns a tuple with the CaseInsensitiveMatching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetCaseInsensitiveMatchingOk() (*bool, bool) {
	if o == nil || o.CaseInsensitiveMatching == nil {
		return nil, false
	}
	return o.CaseInsensitiveMatching, true
}

// HasCaseInsensitiveMatching returns a boolean if a field has been set.
func (o *IdentificationStage) HasCaseInsensitiveMatching() bool {
	if o != nil && o.CaseInsensitiveMatching != nil {
		return true
	}

	return false
}

// SetCaseInsensitiveMatching gets a reference to the given bool and assigns it to the CaseInsensitiveMatching field.
func (o *IdentificationStage) SetCaseInsensitiveMatching(v bool) {
	o.CaseInsensitiveMatching = &v
}

// GetShowMatchedUser returns the ShowMatchedUser field value if set, zero value otherwise.
func (o *IdentificationStage) GetShowMatchedUser() bool {
	if o == nil || o.ShowMatchedUser == nil {
		var ret bool
		return ret
	}
	return *o.ShowMatchedUser
}

// GetShowMatchedUserOk returns a tuple with the ShowMatchedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetShowMatchedUserOk() (*bool, bool) {
	if o == nil || o.ShowMatchedUser == nil {
		return nil, false
	}
	return o.ShowMatchedUser, true
}

// HasShowMatchedUser returns a boolean if a field has been set.
func (o *IdentificationStage) HasShowMatchedUser() bool {
	if o != nil && o.ShowMatchedUser != nil {
		return true
	}

	return false
}

// SetShowMatchedUser gets a reference to the given bool and assigns it to the ShowMatchedUser field.
func (o *IdentificationStage) SetShowMatchedUser(v bool) {
	o.ShowMatchedUser = &v
}

// GetEnrollmentFlow returns the EnrollmentFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentificationStage) GetEnrollmentFlow() string {
	if o == nil || o.EnrollmentFlow.Get() == nil {
		var ret string
		return ret
	}
	return *o.EnrollmentFlow.Get()
}

// GetEnrollmentFlowOk returns a tuple with the EnrollmentFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentificationStage) GetEnrollmentFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentFlow.Get(), o.EnrollmentFlow.IsSet()
}

// HasEnrollmentFlow returns a boolean if a field has been set.
func (o *IdentificationStage) HasEnrollmentFlow() bool {
	if o != nil && o.EnrollmentFlow.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentFlow gets a reference to the given NullableString and assigns it to the EnrollmentFlow field.
func (o *IdentificationStage) SetEnrollmentFlow(v string) {
	o.EnrollmentFlow.Set(&v)
}

// SetEnrollmentFlowNil sets the value for EnrollmentFlow to be an explicit nil
func (o *IdentificationStage) SetEnrollmentFlowNil() {
	o.EnrollmentFlow.Set(nil)
}

// UnsetEnrollmentFlow ensures that no value is present for EnrollmentFlow, not even an explicit nil
func (o *IdentificationStage) UnsetEnrollmentFlow() {
	o.EnrollmentFlow.Unset()
}

// GetRecoveryFlow returns the RecoveryFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentificationStage) GetRecoveryFlow() string {
	if o == nil || o.RecoveryFlow.Get() == nil {
		var ret string
		return ret
	}
	return *o.RecoveryFlow.Get()
}

// GetRecoveryFlowOk returns a tuple with the RecoveryFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentificationStage) GetRecoveryFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryFlow.Get(), o.RecoveryFlow.IsSet()
}

// HasRecoveryFlow returns a boolean if a field has been set.
func (o *IdentificationStage) HasRecoveryFlow() bool {
	if o != nil && o.RecoveryFlow.IsSet() {
		return true
	}

	return false
}

// SetRecoveryFlow gets a reference to the given NullableString and assigns it to the RecoveryFlow field.
func (o *IdentificationStage) SetRecoveryFlow(v string) {
	o.RecoveryFlow.Set(&v)
}

// SetRecoveryFlowNil sets the value for RecoveryFlow to be an explicit nil
func (o *IdentificationStage) SetRecoveryFlowNil() {
	o.RecoveryFlow.Set(nil)
}

// UnsetRecoveryFlow ensures that no value is present for RecoveryFlow, not even an explicit nil
func (o *IdentificationStage) UnsetRecoveryFlow() {
	o.RecoveryFlow.Unset()
}

// GetPasswordlessFlow returns the PasswordlessFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentificationStage) GetPasswordlessFlow() string {
	if o == nil || o.PasswordlessFlow.Get() == nil {
		var ret string
		return ret
	}
	return *o.PasswordlessFlow.Get()
}

// GetPasswordlessFlowOk returns a tuple with the PasswordlessFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentificationStage) GetPasswordlessFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasswordlessFlow.Get(), o.PasswordlessFlow.IsSet()
}

// HasPasswordlessFlow returns a boolean if a field has been set.
func (o *IdentificationStage) HasPasswordlessFlow() bool {
	if o != nil && o.PasswordlessFlow.IsSet() {
		return true
	}

	return false
}

// SetPasswordlessFlow gets a reference to the given NullableString and assigns it to the PasswordlessFlow field.
func (o *IdentificationStage) SetPasswordlessFlow(v string) {
	o.PasswordlessFlow.Set(&v)
}

// SetPasswordlessFlowNil sets the value for PasswordlessFlow to be an explicit nil
func (o *IdentificationStage) SetPasswordlessFlowNil() {
	o.PasswordlessFlow.Set(nil)
}

// UnsetPasswordlessFlow ensures that no value is present for PasswordlessFlow, not even an explicit nil
func (o *IdentificationStage) UnsetPasswordlessFlow() {
	o.PasswordlessFlow.Unset()
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *IdentificationStage) GetSources() []string {
	if o == nil || o.Sources == nil {
		var ret []string
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetSourcesOk() ([]string, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *IdentificationStage) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []string and assigns it to the Sources field.
func (o *IdentificationStage) SetSources(v []string) {
	o.Sources = v
}

// GetShowSourceLabels returns the ShowSourceLabels field value if set, zero value otherwise.
func (o *IdentificationStage) GetShowSourceLabels() bool {
	if o == nil || o.ShowSourceLabels == nil {
		var ret bool
		return ret
	}
	return *o.ShowSourceLabels
}

// GetShowSourceLabelsOk returns a tuple with the ShowSourceLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationStage) GetShowSourceLabelsOk() (*bool, bool) {
	if o == nil || o.ShowSourceLabels == nil {
		return nil, false
	}
	return o.ShowSourceLabels, true
}

// HasShowSourceLabels returns a boolean if a field has been set.
func (o *IdentificationStage) HasShowSourceLabels() bool {
	if o != nil && o.ShowSourceLabels != nil {
		return true
	}

	return false
}

// SetShowSourceLabels gets a reference to the given bool and assigns it to the ShowSourceLabels field.
func (o *IdentificationStage) SetShowSourceLabels(v bool) {
	o.ShowSourceLabels = &v
}

func (o IdentificationStage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["component"] = o.Component
	}
	if true {
		toSerialize["verbose_name"] = o.VerboseName
	}
	if true {
		toSerialize["verbose_name_plural"] = o.VerboseNamePlural
	}
	if true {
		toSerialize["meta_model_name"] = o.MetaModelName
	}
	if o.FlowSet != nil {
		toSerialize["flow_set"] = o.FlowSet
	}
	if o.UserFields != nil {
		toSerialize["user_fields"] = o.UserFields
	}
	if o.PasswordStage.IsSet() {
		toSerialize["password_stage"] = o.PasswordStage.Get()
	}
	if o.CaseInsensitiveMatching != nil {
		toSerialize["case_insensitive_matching"] = o.CaseInsensitiveMatching
	}
	if o.ShowMatchedUser != nil {
		toSerialize["show_matched_user"] = o.ShowMatchedUser
	}
	if o.EnrollmentFlow.IsSet() {
		toSerialize["enrollment_flow"] = o.EnrollmentFlow.Get()
	}
	if o.RecoveryFlow.IsSet() {
		toSerialize["recovery_flow"] = o.RecoveryFlow.Get()
	}
	if o.PasswordlessFlow.IsSet() {
		toSerialize["passwordless_flow"] = o.PasswordlessFlow.Get()
	}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	if o.ShowSourceLabels != nil {
		toSerialize["show_source_labels"] = o.ShowSourceLabels
	}
	return json.Marshal(toSerialize)
}

type NullableIdentificationStage struct {
	value *IdentificationStage
	isSet bool
}

func (v NullableIdentificationStage) Get() *IdentificationStage {
	return v.value
}

func (v *NullableIdentificationStage) Set(val *IdentificationStage) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentificationStage) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentificationStage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentificationStage(val *IdentificationStage) *NullableIdentificationStage {
	return &NullableIdentificationStage{value: val, isSet: true}
}

func (v NullableIdentificationStage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentificationStage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
