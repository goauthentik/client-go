/*
authentik

Making authentication simple.

API version: 2023.3.1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PaginatedRadiusProviderList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedRadiusProviderList{}

// PaginatedRadiusProviderList struct for PaginatedRadiusProviderList
type PaginatedRadiusProviderList struct {
	Pagination PaginatedApplicationListPagination `json:"pagination"`
	Results    []RadiusProvider                   `json:"results"`
}

// NewPaginatedRadiusProviderList instantiates a new PaginatedRadiusProviderList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedRadiusProviderList(pagination PaginatedApplicationListPagination, results []RadiusProvider) *PaginatedRadiusProviderList {
	this := PaginatedRadiusProviderList{}
	this.Pagination = pagination
	this.Results = results
	return &this
}

// NewPaginatedRadiusProviderListWithDefaults instantiates a new PaginatedRadiusProviderList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedRadiusProviderListWithDefaults() *PaginatedRadiusProviderList {
	this := PaginatedRadiusProviderList{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *PaginatedRadiusProviderList) GetPagination() PaginatedApplicationListPagination {
	if o == nil {
		var ret PaginatedApplicationListPagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *PaginatedRadiusProviderList) GetPaginationOk() (*PaginatedApplicationListPagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *PaginatedRadiusProviderList) SetPagination(v PaginatedApplicationListPagination) {
	o.Pagination = v
}

// GetResults returns the Results field value
func (o *PaginatedRadiusProviderList) GetResults() []RadiusProvider {
	if o == nil {
		var ret []RadiusProvider
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *PaginatedRadiusProviderList) GetResultsOk() ([]RadiusProvider, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *PaginatedRadiusProviderList) SetResults(v []RadiusProvider) {
	o.Results = v
}

func (o PaginatedRadiusProviderList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedRadiusProviderList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pagination"] = o.Pagination
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullablePaginatedRadiusProviderList struct {
	value *PaginatedRadiusProviderList
	isSet bool
}

func (v NullablePaginatedRadiusProviderList) Get() *PaginatedRadiusProviderList {
	return v.value
}

func (v *NullablePaginatedRadiusProviderList) Set(val *PaginatedRadiusProviderList) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedRadiusProviderList) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedRadiusProviderList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedRadiusProviderList(val *PaginatedRadiusProviderList) *NullablePaginatedRadiusProviderList {
	return &NullablePaginatedRadiusProviderList{value: val, isSet: true}
}

func (v NullablePaginatedRadiusProviderList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedRadiusProviderList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
