/*
authentik

Making authentication simple.

API version: 2025.2.0
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// DeliveryMethodEnum the model 'DeliveryMethodEnum'
type DeliveryMethodEnum string

// List of DeliveryMethodEnum
const (
	DELIVERYMETHODENUM_PUSH DeliveryMethodEnum = "https://schemas.openid.net/secevent/risc/delivery-method/push"
	DELIVERYMETHODENUM_POLL DeliveryMethodEnum = "https://schemas.openid.net/secevent/risc/delivery-method/poll"
)

// All allowed values of DeliveryMethodEnum enum
var AllowedDeliveryMethodEnumEnumValues = []DeliveryMethodEnum{
	"https://schemas.openid.net/secevent/risc/delivery-method/push",
	"https://schemas.openid.net/secevent/risc/delivery-method/poll",
}

func (v *DeliveryMethodEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeliveryMethodEnum(value)
	for _, existing := range AllowedDeliveryMethodEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeliveryMethodEnum", value)
}

// NewDeliveryMethodEnumFromValue returns a pointer to a valid DeliveryMethodEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeliveryMethodEnumFromValue(v string) (*DeliveryMethodEnum, error) {
	ev := DeliveryMethodEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeliveryMethodEnum: valid values are %v", v, AllowedDeliveryMethodEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeliveryMethodEnum) IsValid() bool {
	for _, existing := range AllowedDeliveryMethodEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeliveryMethodEnum value
func (v DeliveryMethodEnum) Ptr() *DeliveryMethodEnum {
	return &v
}

type NullableDeliveryMethodEnum struct {
	value *DeliveryMethodEnum
	isSet bool
}

func (v NullableDeliveryMethodEnum) Get() *DeliveryMethodEnum {
	return v.value
}

func (v *NullableDeliveryMethodEnum) Set(val *DeliveryMethodEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryMethodEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryMethodEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryMethodEnum(val *DeliveryMethodEnum) *NullableDeliveryMethodEnum {
	return &NullableDeliveryMethodEnum{value: val, isSet: true}
}

func (v NullableDeliveryMethodEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryMethodEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
