/*
authentik

Making authentication simple.

API version: 2025.12.0-rc1
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// OAuth2ProviderLogoutMethodEnum the model 'OAuth2ProviderLogoutMethodEnum'
type OAuth2ProviderLogoutMethodEnum string

// List of OAuth2ProviderLogoutMethodEnum
const (
	OAUTH2PROVIDERLOGOUTMETHODENUM_BACKCHANNEL  OAuth2ProviderLogoutMethodEnum = "backchannel"
	OAUTH2PROVIDERLOGOUTMETHODENUM_FRONTCHANNEL OAuth2ProviderLogoutMethodEnum = "frontchannel"
)

// All allowed values of OAuth2ProviderLogoutMethodEnum enum
var AllowedOAuth2ProviderLogoutMethodEnumEnumValues = []OAuth2ProviderLogoutMethodEnum{
	"backchannel",
	"frontchannel",
}

func (v *OAuth2ProviderLogoutMethodEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OAuth2ProviderLogoutMethodEnum(value)
	for _, existing := range AllowedOAuth2ProviderLogoutMethodEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OAuth2ProviderLogoutMethodEnum", value)
}

// NewOAuth2ProviderLogoutMethodEnumFromValue returns a pointer to a valid OAuth2ProviderLogoutMethodEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOAuth2ProviderLogoutMethodEnumFromValue(v string) (*OAuth2ProviderLogoutMethodEnum, error) {
	ev := OAuth2ProviderLogoutMethodEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OAuth2ProviderLogoutMethodEnum: valid values are %v", v, AllowedOAuth2ProviderLogoutMethodEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OAuth2ProviderLogoutMethodEnum) IsValid() bool {
	for _, existing := range AllowedOAuth2ProviderLogoutMethodEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OAuth2ProviderLogoutMethodEnum value
func (v OAuth2ProviderLogoutMethodEnum) Ptr() *OAuth2ProviderLogoutMethodEnum {
	return &v
}

type NullableOAuth2ProviderLogoutMethodEnum struct {
	value *OAuth2ProviderLogoutMethodEnum
	isSet bool
}

func (v NullableOAuth2ProviderLogoutMethodEnum) Get() *OAuth2ProviderLogoutMethodEnum {
	return v.value
}

func (v *NullableOAuth2ProviderLogoutMethodEnum) Set(val *OAuth2ProviderLogoutMethodEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuth2ProviderLogoutMethodEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuth2ProviderLogoutMethodEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuth2ProviderLogoutMethodEnum(val *OAuth2ProviderLogoutMethodEnum) *NullableOAuth2ProviderLogoutMethodEnum {
	return &NullableOAuth2ProviderLogoutMethodEnum{value: val, isSet: true}
}

func (v NullableOAuth2ProviderLogoutMethodEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuth2ProviderLogoutMethodEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
