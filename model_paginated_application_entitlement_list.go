/*
authentik

Making authentication simple.

API version: 2025.6.3
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PaginatedApplicationEntitlementList struct for PaginatedApplicationEntitlementList
type PaginatedApplicationEntitlementList struct {
	Pagination   Pagination               `json:"pagination"`
	Results      []ApplicationEntitlement `json:"results"`
	Autocomplete map[string]interface{}   `json:"autocomplete"`
}

// NewPaginatedApplicationEntitlementList instantiates a new PaginatedApplicationEntitlementList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedApplicationEntitlementList(pagination Pagination, results []ApplicationEntitlement, autocomplete map[string]interface{}) *PaginatedApplicationEntitlementList {
	this := PaginatedApplicationEntitlementList{}
	this.Pagination = pagination
	this.Results = results
	this.Autocomplete = autocomplete
	return &this
}

// NewPaginatedApplicationEntitlementListWithDefaults instantiates a new PaginatedApplicationEntitlementList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedApplicationEntitlementListWithDefaults() *PaginatedApplicationEntitlementList {
	this := PaginatedApplicationEntitlementList{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *PaginatedApplicationEntitlementList) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *PaginatedApplicationEntitlementList) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *PaginatedApplicationEntitlementList) SetPagination(v Pagination) {
	o.Pagination = v
}

// GetResults returns the Results field value
func (o *PaginatedApplicationEntitlementList) GetResults() []ApplicationEntitlement {
	if o == nil {
		var ret []ApplicationEntitlement
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *PaginatedApplicationEntitlementList) GetResultsOk() ([]ApplicationEntitlement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *PaginatedApplicationEntitlementList) SetResults(v []ApplicationEntitlement) {
	o.Results = v
}

// GetAutocomplete returns the Autocomplete field value
func (o *PaginatedApplicationEntitlementList) GetAutocomplete() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Autocomplete
}

// GetAutocompleteOk returns a tuple with the Autocomplete field value
// and a boolean to check if the value has been set.
func (o *PaginatedApplicationEntitlementList) GetAutocompleteOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Autocomplete, true
}

// SetAutocomplete sets field value
func (o *PaginatedApplicationEntitlementList) SetAutocomplete(v map[string]interface{}) {
	o.Autocomplete = v
}

func (o PaginatedApplicationEntitlementList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pagination"] = o.Pagination
	}
	if true {
		toSerialize["results"] = o.Results
	}
	if true {
		toSerialize["autocomplete"] = o.Autocomplete
	}
	return json.Marshal(toSerialize)
}

type NullablePaginatedApplicationEntitlementList struct {
	value *PaginatedApplicationEntitlementList
	isSet bool
}

func (v NullablePaginatedApplicationEntitlementList) Get() *PaginatedApplicationEntitlementList {
	return v.value
}

func (v *NullablePaginatedApplicationEntitlementList) Set(val *PaginatedApplicationEntitlementList) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedApplicationEntitlementList) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedApplicationEntitlementList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedApplicationEntitlementList(val *PaginatedApplicationEntitlementList) *NullablePaginatedApplicationEntitlementList {
	return &NullablePaginatedApplicationEntitlementList{value: val, isSet: true}
}

func (v NullablePaginatedApplicationEntitlementList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedApplicationEntitlementList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
