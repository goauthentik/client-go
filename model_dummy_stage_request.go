/*
authentik

Making authentication simple.

API version: 2024.10.2
Contact: hello@goauthentik.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DummyStageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DummyStageRequest{}

// DummyStageRequest DummyStage Serializer
type DummyStageRequest struct {
	Name       string           `json:"name"`
	FlowSet    []FlowSetRequest `json:"flow_set,omitempty"`
	ThrowError *bool            `json:"throw_error,omitempty"`
}

type _DummyStageRequest DummyStageRequest

// NewDummyStageRequest instantiates a new DummyStageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDummyStageRequest(name string) *DummyStageRequest {
	this := DummyStageRequest{}
	this.Name = name
	return &this
}

// NewDummyStageRequestWithDefaults instantiates a new DummyStageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDummyStageRequestWithDefaults() *DummyStageRequest {
	this := DummyStageRequest{}
	return &this
}

// GetName returns the Name field value
func (o *DummyStageRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DummyStageRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DummyStageRequest) SetName(v string) {
	o.Name = v
}

// GetFlowSet returns the FlowSet field value if set, zero value otherwise.
func (o *DummyStageRequest) GetFlowSet() []FlowSetRequest {
	if o == nil || IsNil(o.FlowSet) {
		var ret []FlowSetRequest
		return ret
	}
	return o.FlowSet
}

// GetFlowSetOk returns a tuple with the FlowSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DummyStageRequest) GetFlowSetOk() ([]FlowSetRequest, bool) {
	if o == nil || IsNil(o.FlowSet) {
		return nil, false
	}
	return o.FlowSet, true
}

// HasFlowSet returns a boolean if a field has been set.
func (o *DummyStageRequest) HasFlowSet() bool {
	if o != nil && !IsNil(o.FlowSet) {
		return true
	}

	return false
}

// SetFlowSet gets a reference to the given []FlowSetRequest and assigns it to the FlowSet field.
func (o *DummyStageRequest) SetFlowSet(v []FlowSetRequest) {
	o.FlowSet = v
}

// GetThrowError returns the ThrowError field value if set, zero value otherwise.
func (o *DummyStageRequest) GetThrowError() bool {
	if o == nil || IsNil(o.ThrowError) {
		var ret bool
		return ret
	}
	return *o.ThrowError
}

// GetThrowErrorOk returns a tuple with the ThrowError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DummyStageRequest) GetThrowErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.ThrowError) {
		return nil, false
	}
	return o.ThrowError, true
}

// HasThrowError returns a boolean if a field has been set.
func (o *DummyStageRequest) HasThrowError() bool {
	if o != nil && !IsNil(o.ThrowError) {
		return true
	}

	return false
}

// SetThrowError gets a reference to the given bool and assigns it to the ThrowError field.
func (o *DummyStageRequest) SetThrowError(v bool) {
	o.ThrowError = &v
}

func (o DummyStageRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DummyStageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.FlowSet) {
		toSerialize["flow_set"] = o.FlowSet
	}
	if !IsNil(o.ThrowError) {
		toSerialize["throw_error"] = o.ThrowError
	}
	return toSerialize, nil
}

func (o *DummyStageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDummyStageRequest := _DummyStageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDummyStageRequest)

	if err != nil {
		return err
	}

	*o = DummyStageRequest(varDummyStageRequest)

	return err
}

type NullableDummyStageRequest struct {
	value *DummyStageRequest
	isSet bool
}

func (v NullableDummyStageRequest) Get() *DummyStageRequest {
	return v.value
}

func (v *NullableDummyStageRequest) Set(val *DummyStageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDummyStageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDummyStageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDummyStageRequest(val *DummyStageRequest) *NullableDummyStageRequest {
	return &NullableDummyStageRequest{value: val, isSet: true}
}

func (v NullableDummyStageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDummyStageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
